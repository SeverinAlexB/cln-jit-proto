// @generated by protoc-gen-es v1.3.0 with parameter "target=ts"
// @generated from file cln/node.proto (package cln, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { Amount, AmountOrAll, AmountOrAny, ChannelSide, ChannelState, Feerate, HtlcState, Outpoint, OutputDesc, RoutehintList, TlvStream } from "./primitives_pb.js";

/**
 * @generated from message cln.GetinfoRequest
 */
export class GetinfoRequest extends Message<GetinfoRequest> {
  constructor(data?: PartialMessage<GetinfoRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.GetinfoRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetinfoRequest {
    return new GetinfoRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetinfoRequest {
    return new GetinfoRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetinfoRequest {
    return new GetinfoRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetinfoRequest | PlainMessage<GetinfoRequest> | undefined, b: GetinfoRequest | PlainMessage<GetinfoRequest> | undefined): boolean {
    return proto3.util.equals(GetinfoRequest, a, b);
  }
}

/**
 * @generated from message cln.GetinfoResponse
 */
export class GetinfoResponse extends Message<GetinfoResponse> {
  /**
   * @generated from field: bytes id = 1;
   */
  id = new Uint8Array(0);

  /**
   * @generated from field: optional string alias = 2;
   */
  alias?: string;

  /**
   * @generated from field: bytes color = 3;
   */
  color = new Uint8Array(0);

  /**
   * @generated from field: uint32 num_peers = 4;
   */
  numPeers = 0;

  /**
   * @generated from field: uint32 num_pending_channels = 5;
   */
  numPendingChannels = 0;

  /**
   * @generated from field: uint32 num_active_channels = 6;
   */
  numActiveChannels = 0;

  /**
   * @generated from field: uint32 num_inactive_channels = 7;
   */
  numInactiveChannels = 0;

  /**
   * @generated from field: string version = 8;
   */
  version = "";

  /**
   * @generated from field: string lightning_dir = 9;
   */
  lightningDir = "";

  /**
   * @generated from field: optional cln.GetinfoOur_features our_features = 10;
   */
  ourFeatures?: GetinfoOur_features;

  /**
   * @generated from field: uint32 blockheight = 11;
   */
  blockheight = 0;

  /**
   * @generated from field: string network = 12;
   */
  network = "";

  /**
   * @generated from field: cln.Amount fees_collected_msat = 13;
   */
  feesCollectedMsat?: Amount;

  /**
   * @generated from field: repeated cln.GetinfoAddress address = 14;
   */
  address: GetinfoAddress[] = [];

  /**
   * @generated from field: repeated cln.GetinfoBinding binding = 15;
   */
  binding: GetinfoBinding[] = [];

  /**
   * @generated from field: optional string warning_bitcoind_sync = 16;
   */
  warningBitcoindSync?: string;

  /**
   * @generated from field: optional string warning_lightningd_sync = 17;
   */
  warningLightningdSync?: string;

  constructor(data?: PartialMessage<GetinfoResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.GetinfoResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 2, name: "alias", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "color", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 4, name: "num_peers", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 5, name: "num_pending_channels", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 6, name: "num_active_channels", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 7, name: "num_inactive_channels", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 8, name: "version", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "lightning_dir", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "our_features", kind: "message", T: GetinfoOur_features, opt: true },
    { no: 11, name: "blockheight", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 12, name: "network", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "fees_collected_msat", kind: "message", T: Amount },
    { no: 14, name: "address", kind: "message", T: GetinfoAddress, repeated: true },
    { no: 15, name: "binding", kind: "message", T: GetinfoBinding, repeated: true },
    { no: 16, name: "warning_bitcoind_sync", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 17, name: "warning_lightningd_sync", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetinfoResponse {
    return new GetinfoResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetinfoResponse {
    return new GetinfoResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetinfoResponse {
    return new GetinfoResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetinfoResponse | PlainMessage<GetinfoResponse> | undefined, b: GetinfoResponse | PlainMessage<GetinfoResponse> | undefined): boolean {
    return proto3.util.equals(GetinfoResponse, a, b);
  }
}

/**
 * @generated from message cln.GetinfoOur_features
 */
export class GetinfoOur_features extends Message<GetinfoOur_features> {
  /**
   * @generated from field: bytes init = 1;
   */
  init = new Uint8Array(0);

  /**
   * @generated from field: bytes node = 2;
   */
  node = new Uint8Array(0);

  /**
   * @generated from field: bytes channel = 3;
   */
  channel = new Uint8Array(0);

  /**
   * @generated from field: bytes invoice = 4;
   */
  invoice = new Uint8Array(0);

  constructor(data?: PartialMessage<GetinfoOur_features>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.GetinfoOur_features";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "init", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 2, name: "node", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 3, name: "channel", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 4, name: "invoice", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetinfoOur_features {
    return new GetinfoOur_features().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetinfoOur_features {
    return new GetinfoOur_features().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetinfoOur_features {
    return new GetinfoOur_features().fromJsonString(jsonString, options);
  }

  static equals(a: GetinfoOur_features | PlainMessage<GetinfoOur_features> | undefined, b: GetinfoOur_features | PlainMessage<GetinfoOur_features> | undefined): boolean {
    return proto3.util.equals(GetinfoOur_features, a, b);
  }
}

/**
 * @generated from message cln.GetinfoAddress
 */
export class GetinfoAddress extends Message<GetinfoAddress> {
  /**
   * @generated from field: cln.GetinfoAddress.GetinfoAddressType item_type = 1;
   */
  itemType = GetinfoAddress_GetinfoAddressType.DNS;

  /**
   * @generated from field: uint32 port = 2;
   */
  port = 0;

  /**
   * @generated from field: optional string address = 3;
   */
  address?: string;

  constructor(data?: PartialMessage<GetinfoAddress>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.GetinfoAddress";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "item_type", kind: "enum", T: proto3.getEnumType(GetinfoAddress_GetinfoAddressType) },
    { no: 2, name: "port", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 3, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetinfoAddress {
    return new GetinfoAddress().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetinfoAddress {
    return new GetinfoAddress().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetinfoAddress {
    return new GetinfoAddress().fromJsonString(jsonString, options);
  }

  static equals(a: GetinfoAddress | PlainMessage<GetinfoAddress> | undefined, b: GetinfoAddress | PlainMessage<GetinfoAddress> | undefined): boolean {
    return proto3.util.equals(GetinfoAddress, a, b);
  }
}

/**
 * Getinfo.address[].type
 *
 * @generated from enum cln.GetinfoAddress.GetinfoAddressType
 */
export enum GetinfoAddress_GetinfoAddressType {
  /**
   * @generated from enum value: DNS = 0;
   */
  DNS = 0,

  /**
   * @generated from enum value: IPV4 = 1;
   */
  IPV4 = 1,

  /**
   * @generated from enum value: IPV6 = 2;
   */
  IPV6 = 2,

  /**
   * @generated from enum value: TORV2 = 3;
   */
  TORV2 = 3,

  /**
   * @generated from enum value: TORV3 = 4;
   */
  TORV3 = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(GetinfoAddress_GetinfoAddressType)
proto3.util.setEnumType(GetinfoAddress_GetinfoAddressType, "cln.GetinfoAddress.GetinfoAddressType", [
  { no: 0, name: "DNS" },
  { no: 1, name: "IPV4" },
  { no: 2, name: "IPV6" },
  { no: 3, name: "TORV2" },
  { no: 4, name: "TORV3" },
]);

/**
 * @generated from message cln.GetinfoBinding
 */
export class GetinfoBinding extends Message<GetinfoBinding> {
  /**
   * @generated from field: cln.GetinfoBinding.GetinfoBindingType item_type = 1;
   */
  itemType = GetinfoBinding_GetinfoBindingType.LOCAL_SOCKET;

  /**
   * @generated from field: optional string address = 2;
   */
  address?: string;

  /**
   * @generated from field: optional uint32 port = 3;
   */
  port?: number;

  /**
   * @generated from field: optional string socket = 4;
   */
  socket?: string;

  constructor(data?: PartialMessage<GetinfoBinding>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.GetinfoBinding";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "item_type", kind: "enum", T: proto3.getEnumType(GetinfoBinding_GetinfoBindingType) },
    { no: 2, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "port", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 4, name: "socket", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetinfoBinding {
    return new GetinfoBinding().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetinfoBinding {
    return new GetinfoBinding().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetinfoBinding {
    return new GetinfoBinding().fromJsonString(jsonString, options);
  }

  static equals(a: GetinfoBinding | PlainMessage<GetinfoBinding> | undefined, b: GetinfoBinding | PlainMessage<GetinfoBinding> | undefined): boolean {
    return proto3.util.equals(GetinfoBinding, a, b);
  }
}

/**
 * Getinfo.binding[].type
 *
 * @generated from enum cln.GetinfoBinding.GetinfoBindingType
 */
export enum GetinfoBinding_GetinfoBindingType {
  /**
   * @generated from enum value: LOCAL_SOCKET = 0;
   */
  LOCAL_SOCKET = 0,

  /**
   * @generated from enum value: WEBSOCKET = 5;
   */
  WEBSOCKET = 5,

  /**
   * @generated from enum value: IPV4 = 1;
   */
  IPV4 = 1,

  /**
   * @generated from enum value: IPV6 = 2;
   */
  IPV6 = 2,

  /**
   * @generated from enum value: TORV2 = 3;
   */
  TORV2 = 3,

  /**
   * @generated from enum value: TORV3 = 4;
   */
  TORV3 = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(GetinfoBinding_GetinfoBindingType)
proto3.util.setEnumType(GetinfoBinding_GetinfoBindingType, "cln.GetinfoBinding.GetinfoBindingType", [
  { no: 0, name: "LOCAL_SOCKET" },
  { no: 5, name: "WEBSOCKET" },
  { no: 1, name: "IPV4" },
  { no: 2, name: "IPV6" },
  { no: 3, name: "TORV2" },
  { no: 4, name: "TORV3" },
]);

/**
 * @generated from message cln.ListpeersRequest
 */
export class ListpeersRequest extends Message<ListpeersRequest> {
  /**
   * @generated from field: optional bytes id = 1;
   */
  id?: Uint8Array;

  /**
   * @generated from field: optional string level = 2;
   */
  level?: string;

  constructor(data?: PartialMessage<ListpeersRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.ListpeersRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 2, name: "level", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListpeersRequest {
    return new ListpeersRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListpeersRequest {
    return new ListpeersRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListpeersRequest {
    return new ListpeersRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListpeersRequest | PlainMessage<ListpeersRequest> | undefined, b: ListpeersRequest | PlainMessage<ListpeersRequest> | undefined): boolean {
    return proto3.util.equals(ListpeersRequest, a, b);
  }
}

/**
 * @generated from message cln.ListpeersResponse
 */
export class ListpeersResponse extends Message<ListpeersResponse> {
  /**
   * @generated from field: repeated cln.ListpeersPeers peers = 1;
   */
  peers: ListpeersPeers[] = [];

  constructor(data?: PartialMessage<ListpeersResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.ListpeersResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "peers", kind: "message", T: ListpeersPeers, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListpeersResponse {
    return new ListpeersResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListpeersResponse {
    return new ListpeersResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListpeersResponse {
    return new ListpeersResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListpeersResponse | PlainMessage<ListpeersResponse> | undefined, b: ListpeersResponse | PlainMessage<ListpeersResponse> | undefined): boolean {
    return proto3.util.equals(ListpeersResponse, a, b);
  }
}

/**
 * @generated from message cln.ListpeersPeers
 */
export class ListpeersPeers extends Message<ListpeersPeers> {
  /**
   * @generated from field: bytes id = 1;
   */
  id = new Uint8Array(0);

  /**
   * @generated from field: bool connected = 2;
   */
  connected = false;

  /**
   * @generated from field: optional uint32 num_channels = 8;
   */
  numChannels?: number;

  /**
   * @generated from field: repeated cln.ListpeersPeersLog log = 3;
   */
  log: ListpeersPeersLog[] = [];

  /**
   * @generated from field: repeated cln.ListpeersPeersChannels channels = 4;
   */
  channels: ListpeersPeersChannels[] = [];

  /**
   * @generated from field: repeated string netaddr = 5;
   */
  netaddr: string[] = [];

  /**
   * @generated from field: optional string remote_addr = 7;
   */
  remoteAddr?: string;

  /**
   * @generated from field: optional bytes features = 6;
   */
  features?: Uint8Array;

  constructor(data?: PartialMessage<ListpeersPeers>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.ListpeersPeers";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 2, name: "connected", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 8, name: "num_channels", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 3, name: "log", kind: "message", T: ListpeersPeersLog, repeated: true },
    { no: 4, name: "channels", kind: "message", T: ListpeersPeersChannels, repeated: true },
    { no: 5, name: "netaddr", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 7, name: "remote_addr", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 6, name: "features", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListpeersPeers {
    return new ListpeersPeers().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListpeersPeers {
    return new ListpeersPeers().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListpeersPeers {
    return new ListpeersPeers().fromJsonString(jsonString, options);
  }

  static equals(a: ListpeersPeers | PlainMessage<ListpeersPeers> | undefined, b: ListpeersPeers | PlainMessage<ListpeersPeers> | undefined): boolean {
    return proto3.util.equals(ListpeersPeers, a, b);
  }
}

/**
 * @generated from message cln.ListpeersPeersLog
 */
export class ListpeersPeersLog extends Message<ListpeersPeersLog> {
  /**
   * @generated from field: cln.ListpeersPeersLog.ListpeersPeersLogType item_type = 1;
   */
  itemType = ListpeersPeersLog_ListpeersPeersLogType.SKIPPED;

  /**
   * @generated from field: optional uint32 num_skipped = 2;
   */
  numSkipped?: number;

  /**
   * @generated from field: optional string time = 3;
   */
  time?: string;

  /**
   * @generated from field: optional string source = 4;
   */
  source?: string;

  /**
   * @generated from field: optional string log = 5;
   */
  log?: string;

  /**
   * @generated from field: optional bytes node_id = 6;
   */
  nodeId?: Uint8Array;

  /**
   * @generated from field: optional bytes data = 7;
   */
  data?: Uint8Array;

  constructor(data?: PartialMessage<ListpeersPeersLog>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.ListpeersPeersLog";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "item_type", kind: "enum", T: proto3.getEnumType(ListpeersPeersLog_ListpeersPeersLogType) },
    { no: 2, name: "num_skipped", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 3, name: "time", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "source", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 5, name: "log", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 6, name: "node_id", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 7, name: "data", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListpeersPeersLog {
    return new ListpeersPeersLog().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListpeersPeersLog {
    return new ListpeersPeersLog().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListpeersPeersLog {
    return new ListpeersPeersLog().fromJsonString(jsonString, options);
  }

  static equals(a: ListpeersPeersLog | PlainMessage<ListpeersPeersLog> | undefined, b: ListpeersPeersLog | PlainMessage<ListpeersPeersLog> | undefined): boolean {
    return proto3.util.equals(ListpeersPeersLog, a, b);
  }
}

/**
 * ListPeers.peers[].log[].type
 *
 * @generated from enum cln.ListpeersPeersLog.ListpeersPeersLogType
 */
export enum ListpeersPeersLog_ListpeersPeersLogType {
  /**
   * @generated from enum value: SKIPPED = 0;
   */
  SKIPPED = 0,

  /**
   * @generated from enum value: BROKEN = 1;
   */
  BROKEN = 1,

  /**
   * @generated from enum value: UNUSUAL = 2;
   */
  UNUSUAL = 2,

  /**
   * @generated from enum value: INFO = 3;
   */
  INFO = 3,

  /**
   * @generated from enum value: DEBUG = 4;
   */
  DEBUG = 4,

  /**
   * @generated from enum value: IO_IN = 5;
   */
  IO_IN = 5,

  /**
   * @generated from enum value: IO_OUT = 6;
   */
  IO_OUT = 6,
}
// Retrieve enum metadata with: proto3.getEnumType(ListpeersPeersLog_ListpeersPeersLogType)
proto3.util.setEnumType(ListpeersPeersLog_ListpeersPeersLogType, "cln.ListpeersPeersLog.ListpeersPeersLogType", [
  { no: 0, name: "SKIPPED" },
  { no: 1, name: "BROKEN" },
  { no: 2, name: "UNUSUAL" },
  { no: 3, name: "INFO" },
  { no: 4, name: "DEBUG" },
  { no: 5, name: "IO_IN" },
  { no: 6, name: "IO_OUT" },
]);

/**
 * @generated from message cln.ListpeersPeersChannels
 */
export class ListpeersPeersChannels extends Message<ListpeersPeersChannels> {
  /**
   * @generated from field: cln.ListpeersPeersChannels.ListpeersPeersChannelsState state = 1;
   */
  state = ListpeersPeersChannels_ListpeersPeersChannelsState.OPENINGD;

  /**
   * @generated from field: optional bytes scratch_txid = 2;
   */
  scratchTxid?: Uint8Array;

  /**
   * @generated from field: optional cln.ListpeersPeersChannelsFeerate feerate = 3;
   */
  feerate?: ListpeersPeersChannelsFeerate;

  /**
   * @generated from field: optional string owner = 4;
   */
  owner?: string;

  /**
   * @generated from field: optional string short_channel_id = 5;
   */
  shortChannelId?: string;

  /**
   * @generated from field: optional bytes channel_id = 6;
   */
  channelId?: Uint8Array;

  /**
   * @generated from field: optional bytes funding_txid = 7;
   */
  fundingTxid?: Uint8Array;

  /**
   * @generated from field: optional uint32 funding_outnum = 8;
   */
  fundingOutnum?: number;

  /**
   * @generated from field: optional string initial_feerate = 9;
   */
  initialFeerate?: string;

  /**
   * @generated from field: optional string last_feerate = 10;
   */
  lastFeerate?: string;

  /**
   * @generated from field: optional string next_feerate = 11;
   */
  nextFeerate?: string;

  /**
   * @generated from field: optional uint32 next_fee_step = 12;
   */
  nextFeeStep?: number;

  /**
   * @generated from field: repeated cln.ListpeersPeersChannelsInflight inflight = 13;
   */
  inflight: ListpeersPeersChannelsInflight[] = [];

  /**
   * @generated from field: optional bytes close_to = 14;
   */
  closeTo?: Uint8Array;

  /**
   * @generated from field: optional bool private = 15;
   */
  private?: boolean;

  /**
   * @generated from field: cln.ChannelSide opener = 16;
   */
  opener = ChannelSide.LOCAL;

  /**
   * @generated from field: optional cln.ChannelSide closer = 17;
   */
  closer?: ChannelSide;

  /**
   * @generated from field: repeated string features = 18;
   */
  features: string[] = [];

  /**
   * @generated from field: optional cln.ListpeersPeersChannelsFunding funding = 19;
   */
  funding?: ListpeersPeersChannelsFunding;

  /**
   * @generated from field: optional cln.Amount to_us_msat = 20;
   */
  toUsMsat?: Amount;

  /**
   * @generated from field: optional cln.Amount min_to_us_msat = 21;
   */
  minToUsMsat?: Amount;

  /**
   * @generated from field: optional cln.Amount max_to_us_msat = 22;
   */
  maxToUsMsat?: Amount;

  /**
   * @generated from field: optional cln.Amount total_msat = 23;
   */
  totalMsat?: Amount;

  /**
   * @generated from field: optional cln.Amount fee_base_msat = 24;
   */
  feeBaseMsat?: Amount;

  /**
   * @generated from field: optional uint32 fee_proportional_millionths = 25;
   */
  feeProportionalMillionths?: number;

  /**
   * @generated from field: optional cln.Amount dust_limit_msat = 26;
   */
  dustLimitMsat?: Amount;

  /**
   * @generated from field: optional cln.Amount max_total_htlc_in_msat = 27;
   */
  maxTotalHtlcInMsat?: Amount;

  /**
   * @generated from field: optional cln.Amount their_reserve_msat = 28;
   */
  theirReserveMsat?: Amount;

  /**
   * @generated from field: optional cln.Amount our_reserve_msat = 29;
   */
  ourReserveMsat?: Amount;

  /**
   * @generated from field: optional cln.Amount spendable_msat = 30;
   */
  spendableMsat?: Amount;

  /**
   * @generated from field: optional cln.Amount receivable_msat = 31;
   */
  receivableMsat?: Amount;

  /**
   * @generated from field: optional cln.Amount minimum_htlc_in_msat = 32;
   */
  minimumHtlcInMsat?: Amount;

  /**
   * @generated from field: optional cln.Amount minimum_htlc_out_msat = 48;
   */
  minimumHtlcOutMsat?: Amount;

  /**
   * @generated from field: optional cln.Amount maximum_htlc_out_msat = 49;
   */
  maximumHtlcOutMsat?: Amount;

  /**
   * @generated from field: optional uint32 their_to_self_delay = 33;
   */
  theirToSelfDelay?: number;

  /**
   * @generated from field: optional uint32 our_to_self_delay = 34;
   */
  ourToSelfDelay?: number;

  /**
   * @generated from field: optional uint32 max_accepted_htlcs = 35;
   */
  maxAcceptedHtlcs?: number;

  /**
   * @generated from field: optional cln.ListpeersPeersChannelsAlias alias = 50;
   */
  alias?: ListpeersPeersChannelsAlias;

  /**
   * @generated from field: repeated string status = 37;
   */
  status: string[] = [];

  /**
   * @generated from field: optional uint64 in_payments_offered = 38;
   */
  inPaymentsOffered?: bigint;

  /**
   * @generated from field: optional cln.Amount in_offered_msat = 39;
   */
  inOfferedMsat?: Amount;

  /**
   * @generated from field: optional uint64 in_payments_fulfilled = 40;
   */
  inPaymentsFulfilled?: bigint;

  /**
   * @generated from field: optional cln.Amount in_fulfilled_msat = 41;
   */
  inFulfilledMsat?: Amount;

  /**
   * @generated from field: optional uint64 out_payments_offered = 42;
   */
  outPaymentsOffered?: bigint;

  /**
   * @generated from field: optional cln.Amount out_offered_msat = 43;
   */
  outOfferedMsat?: Amount;

  /**
   * @generated from field: optional uint64 out_payments_fulfilled = 44;
   */
  outPaymentsFulfilled?: bigint;

  /**
   * @generated from field: optional cln.Amount out_fulfilled_msat = 45;
   */
  outFulfilledMsat?: Amount;

  /**
   * @generated from field: repeated cln.ListpeersPeersChannelsHtlcs htlcs = 46;
   */
  htlcs: ListpeersPeersChannelsHtlcs[] = [];

  /**
   * @generated from field: optional string close_to_addr = 47;
   */
  closeToAddr?: string;

  constructor(data?: PartialMessage<ListpeersPeersChannels>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.ListpeersPeersChannels";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "state", kind: "enum", T: proto3.getEnumType(ListpeersPeersChannels_ListpeersPeersChannelsState) },
    { no: 2, name: "scratch_txid", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 3, name: "feerate", kind: "message", T: ListpeersPeersChannelsFeerate, opt: true },
    { no: 4, name: "owner", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 5, name: "short_channel_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 6, name: "channel_id", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 7, name: "funding_txid", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 8, name: "funding_outnum", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 9, name: "initial_feerate", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 10, name: "last_feerate", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 11, name: "next_feerate", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 12, name: "next_fee_step", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 13, name: "inflight", kind: "message", T: ListpeersPeersChannelsInflight, repeated: true },
    { no: 14, name: "close_to", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 15, name: "private", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 16, name: "opener", kind: "enum", T: proto3.getEnumType(ChannelSide) },
    { no: 17, name: "closer", kind: "enum", T: proto3.getEnumType(ChannelSide), opt: true },
    { no: 18, name: "features", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 19, name: "funding", kind: "message", T: ListpeersPeersChannelsFunding, opt: true },
    { no: 20, name: "to_us_msat", kind: "message", T: Amount, opt: true },
    { no: 21, name: "min_to_us_msat", kind: "message", T: Amount, opt: true },
    { no: 22, name: "max_to_us_msat", kind: "message", T: Amount, opt: true },
    { no: 23, name: "total_msat", kind: "message", T: Amount, opt: true },
    { no: 24, name: "fee_base_msat", kind: "message", T: Amount, opt: true },
    { no: 25, name: "fee_proportional_millionths", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 26, name: "dust_limit_msat", kind: "message", T: Amount, opt: true },
    { no: 27, name: "max_total_htlc_in_msat", kind: "message", T: Amount, opt: true },
    { no: 28, name: "their_reserve_msat", kind: "message", T: Amount, opt: true },
    { no: 29, name: "our_reserve_msat", kind: "message", T: Amount, opt: true },
    { no: 30, name: "spendable_msat", kind: "message", T: Amount, opt: true },
    { no: 31, name: "receivable_msat", kind: "message", T: Amount, opt: true },
    { no: 32, name: "minimum_htlc_in_msat", kind: "message", T: Amount, opt: true },
    { no: 48, name: "minimum_htlc_out_msat", kind: "message", T: Amount, opt: true },
    { no: 49, name: "maximum_htlc_out_msat", kind: "message", T: Amount, opt: true },
    { no: 33, name: "their_to_self_delay", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 34, name: "our_to_self_delay", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 35, name: "max_accepted_htlcs", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 50, name: "alias", kind: "message", T: ListpeersPeersChannelsAlias, opt: true },
    { no: 37, name: "status", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 38, name: "in_payments_offered", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 39, name: "in_offered_msat", kind: "message", T: Amount, opt: true },
    { no: 40, name: "in_payments_fulfilled", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 41, name: "in_fulfilled_msat", kind: "message", T: Amount, opt: true },
    { no: 42, name: "out_payments_offered", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 43, name: "out_offered_msat", kind: "message", T: Amount, opt: true },
    { no: 44, name: "out_payments_fulfilled", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 45, name: "out_fulfilled_msat", kind: "message", T: Amount, opt: true },
    { no: 46, name: "htlcs", kind: "message", T: ListpeersPeersChannelsHtlcs, repeated: true },
    { no: 47, name: "close_to_addr", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListpeersPeersChannels {
    return new ListpeersPeersChannels().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListpeersPeersChannels {
    return new ListpeersPeersChannels().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListpeersPeersChannels {
    return new ListpeersPeersChannels().fromJsonString(jsonString, options);
  }

  static equals(a: ListpeersPeersChannels | PlainMessage<ListpeersPeersChannels> | undefined, b: ListpeersPeersChannels | PlainMessage<ListpeersPeersChannels> | undefined): boolean {
    return proto3.util.equals(ListpeersPeersChannels, a, b);
  }
}

/**
 * ListPeers.peers[].channels[].state
 *
 * @generated from enum cln.ListpeersPeersChannels.ListpeersPeersChannelsState
 */
export enum ListpeersPeersChannels_ListpeersPeersChannelsState {
  /**
   * @generated from enum value: OPENINGD = 0;
   */
  OPENINGD = 0,

  /**
   * @generated from enum value: CHANNELD_AWAITING_LOCKIN = 1;
   */
  CHANNELD_AWAITING_LOCKIN = 1,

  /**
   * @generated from enum value: CHANNELD_NORMAL = 2;
   */
  CHANNELD_NORMAL = 2,

  /**
   * @generated from enum value: CHANNELD_SHUTTING_DOWN = 3;
   */
  CHANNELD_SHUTTING_DOWN = 3,

  /**
   * @generated from enum value: CLOSINGD_SIGEXCHANGE = 4;
   */
  CLOSINGD_SIGEXCHANGE = 4,

  /**
   * @generated from enum value: CLOSINGD_COMPLETE = 5;
   */
  CLOSINGD_COMPLETE = 5,

  /**
   * @generated from enum value: AWAITING_UNILATERAL = 6;
   */
  AWAITING_UNILATERAL = 6,

  /**
   * @generated from enum value: FUNDING_SPEND_SEEN = 7;
   */
  FUNDING_SPEND_SEEN = 7,

  /**
   * @generated from enum value: ONCHAIN = 8;
   */
  ONCHAIN = 8,

  /**
   * @generated from enum value: DUALOPEND_OPEN_INIT = 9;
   */
  DUALOPEND_OPEN_INIT = 9,

  /**
   * @generated from enum value: DUALOPEND_AWAITING_LOCKIN = 10;
   */
  DUALOPEND_AWAITING_LOCKIN = 10,
}
// Retrieve enum metadata with: proto3.getEnumType(ListpeersPeersChannels_ListpeersPeersChannelsState)
proto3.util.setEnumType(ListpeersPeersChannels_ListpeersPeersChannelsState, "cln.ListpeersPeersChannels.ListpeersPeersChannelsState", [
  { no: 0, name: "OPENINGD" },
  { no: 1, name: "CHANNELD_AWAITING_LOCKIN" },
  { no: 2, name: "CHANNELD_NORMAL" },
  { no: 3, name: "CHANNELD_SHUTTING_DOWN" },
  { no: 4, name: "CLOSINGD_SIGEXCHANGE" },
  { no: 5, name: "CLOSINGD_COMPLETE" },
  { no: 6, name: "AWAITING_UNILATERAL" },
  { no: 7, name: "FUNDING_SPEND_SEEN" },
  { no: 8, name: "ONCHAIN" },
  { no: 9, name: "DUALOPEND_OPEN_INIT" },
  { no: 10, name: "DUALOPEND_AWAITING_LOCKIN" },
]);

/**
 * @generated from message cln.ListpeersPeersChannelsFeerate
 */
export class ListpeersPeersChannelsFeerate extends Message<ListpeersPeersChannelsFeerate> {
  /**
   * @generated from field: uint32 perkw = 1;
   */
  perkw = 0;

  /**
   * @generated from field: uint32 perkb = 2;
   */
  perkb = 0;

  constructor(data?: PartialMessage<ListpeersPeersChannelsFeerate>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.ListpeersPeersChannelsFeerate";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "perkw", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 2, name: "perkb", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListpeersPeersChannelsFeerate {
    return new ListpeersPeersChannelsFeerate().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListpeersPeersChannelsFeerate {
    return new ListpeersPeersChannelsFeerate().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListpeersPeersChannelsFeerate {
    return new ListpeersPeersChannelsFeerate().fromJsonString(jsonString, options);
  }

  static equals(a: ListpeersPeersChannelsFeerate | PlainMessage<ListpeersPeersChannelsFeerate> | undefined, b: ListpeersPeersChannelsFeerate | PlainMessage<ListpeersPeersChannelsFeerate> | undefined): boolean {
    return proto3.util.equals(ListpeersPeersChannelsFeerate, a, b);
  }
}

/**
 * @generated from message cln.ListpeersPeersChannelsInflight
 */
export class ListpeersPeersChannelsInflight extends Message<ListpeersPeersChannelsInflight> {
  /**
   * @generated from field: bytes funding_txid = 1;
   */
  fundingTxid = new Uint8Array(0);

  /**
   * @generated from field: uint32 funding_outnum = 2;
   */
  fundingOutnum = 0;

  /**
   * @generated from field: string feerate = 3;
   */
  feerate = "";

  /**
   * @generated from field: cln.Amount total_funding_msat = 4;
   */
  totalFundingMsat?: Amount;

  /**
   * @generated from field: cln.Amount our_funding_msat = 5;
   */
  ourFundingMsat?: Amount;

  /**
   * @generated from field: bytes scratch_txid = 6;
   */
  scratchTxid = new Uint8Array(0);

  constructor(data?: PartialMessage<ListpeersPeersChannelsInflight>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.ListpeersPeersChannelsInflight";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "funding_txid", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 2, name: "funding_outnum", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 3, name: "feerate", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "total_funding_msat", kind: "message", T: Amount },
    { no: 5, name: "our_funding_msat", kind: "message", T: Amount },
    { no: 6, name: "scratch_txid", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListpeersPeersChannelsInflight {
    return new ListpeersPeersChannelsInflight().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListpeersPeersChannelsInflight {
    return new ListpeersPeersChannelsInflight().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListpeersPeersChannelsInflight {
    return new ListpeersPeersChannelsInflight().fromJsonString(jsonString, options);
  }

  static equals(a: ListpeersPeersChannelsInflight | PlainMessage<ListpeersPeersChannelsInflight> | undefined, b: ListpeersPeersChannelsInflight | PlainMessage<ListpeersPeersChannelsInflight> | undefined): boolean {
    return proto3.util.equals(ListpeersPeersChannelsInflight, a, b);
  }
}

/**
 * @generated from message cln.ListpeersPeersChannelsFunding
 */
export class ListpeersPeersChannelsFunding extends Message<ListpeersPeersChannelsFunding> {
  /**
   * @generated from field: optional cln.Amount pushed_msat = 3;
   */
  pushedMsat?: Amount;

  /**
   * @generated from field: cln.Amount local_funds_msat = 4;
   */
  localFundsMsat?: Amount;

  /**
   * @generated from field: cln.Amount remote_funds_msat = 7;
   */
  remoteFundsMsat?: Amount;

  /**
   * @generated from field: optional cln.Amount fee_paid_msat = 5;
   */
  feePaidMsat?: Amount;

  /**
   * @generated from field: optional cln.Amount fee_rcvd_msat = 6;
   */
  feeRcvdMsat?: Amount;

  constructor(data?: PartialMessage<ListpeersPeersChannelsFunding>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.ListpeersPeersChannelsFunding";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 3, name: "pushed_msat", kind: "message", T: Amount, opt: true },
    { no: 4, name: "local_funds_msat", kind: "message", T: Amount },
    { no: 7, name: "remote_funds_msat", kind: "message", T: Amount },
    { no: 5, name: "fee_paid_msat", kind: "message", T: Amount, opt: true },
    { no: 6, name: "fee_rcvd_msat", kind: "message", T: Amount, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListpeersPeersChannelsFunding {
    return new ListpeersPeersChannelsFunding().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListpeersPeersChannelsFunding {
    return new ListpeersPeersChannelsFunding().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListpeersPeersChannelsFunding {
    return new ListpeersPeersChannelsFunding().fromJsonString(jsonString, options);
  }

  static equals(a: ListpeersPeersChannelsFunding | PlainMessage<ListpeersPeersChannelsFunding> | undefined, b: ListpeersPeersChannelsFunding | PlainMessage<ListpeersPeersChannelsFunding> | undefined): boolean {
    return proto3.util.equals(ListpeersPeersChannelsFunding, a, b);
  }
}

/**
 * @generated from message cln.ListpeersPeersChannelsAlias
 */
export class ListpeersPeersChannelsAlias extends Message<ListpeersPeersChannelsAlias> {
  /**
   * @generated from field: optional string local = 1;
   */
  local?: string;

  /**
   * @generated from field: optional string remote = 2;
   */
  remote?: string;

  constructor(data?: PartialMessage<ListpeersPeersChannelsAlias>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.ListpeersPeersChannelsAlias";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "local", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "remote", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListpeersPeersChannelsAlias {
    return new ListpeersPeersChannelsAlias().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListpeersPeersChannelsAlias {
    return new ListpeersPeersChannelsAlias().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListpeersPeersChannelsAlias {
    return new ListpeersPeersChannelsAlias().fromJsonString(jsonString, options);
  }

  static equals(a: ListpeersPeersChannelsAlias | PlainMessage<ListpeersPeersChannelsAlias> | undefined, b: ListpeersPeersChannelsAlias | PlainMessage<ListpeersPeersChannelsAlias> | undefined): boolean {
    return proto3.util.equals(ListpeersPeersChannelsAlias, a, b);
  }
}

/**
 * @generated from message cln.ListpeersPeersChannelsHtlcs
 */
export class ListpeersPeersChannelsHtlcs extends Message<ListpeersPeersChannelsHtlcs> {
  /**
   * @generated from field: cln.ListpeersPeersChannelsHtlcs.ListpeersPeersChannelsHtlcsDirection direction = 1;
   */
  direction = ListpeersPeersChannelsHtlcs_ListpeersPeersChannelsHtlcsDirection.IN;

  /**
   * @generated from field: uint64 id = 2;
   */
  id = protoInt64.zero;

  /**
   * @generated from field: cln.Amount amount_msat = 3;
   */
  amountMsat?: Amount;

  /**
   * @generated from field: uint32 expiry = 4;
   */
  expiry = 0;

  /**
   * @generated from field: bytes payment_hash = 5;
   */
  paymentHash = new Uint8Array(0);

  /**
   * @generated from field: optional bool local_trimmed = 6;
   */
  localTrimmed?: boolean;

  /**
   * @generated from field: optional string status = 7;
   */
  status?: string;

  /**
   * @generated from field: cln.HtlcState state = 8;
   */
  state = HtlcState.SentAddHtlc;

  constructor(data?: PartialMessage<ListpeersPeersChannelsHtlcs>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.ListpeersPeersChannelsHtlcs";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "direction", kind: "enum", T: proto3.getEnumType(ListpeersPeersChannelsHtlcs_ListpeersPeersChannelsHtlcsDirection) },
    { no: 2, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "amount_msat", kind: "message", T: Amount },
    { no: 4, name: "expiry", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 5, name: "payment_hash", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 6, name: "local_trimmed", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 7, name: "status", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 8, name: "state", kind: "enum", T: proto3.getEnumType(HtlcState) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListpeersPeersChannelsHtlcs {
    return new ListpeersPeersChannelsHtlcs().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListpeersPeersChannelsHtlcs {
    return new ListpeersPeersChannelsHtlcs().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListpeersPeersChannelsHtlcs {
    return new ListpeersPeersChannelsHtlcs().fromJsonString(jsonString, options);
  }

  static equals(a: ListpeersPeersChannelsHtlcs | PlainMessage<ListpeersPeersChannelsHtlcs> | undefined, b: ListpeersPeersChannelsHtlcs | PlainMessage<ListpeersPeersChannelsHtlcs> | undefined): boolean {
    return proto3.util.equals(ListpeersPeersChannelsHtlcs, a, b);
  }
}

/**
 * ListPeers.peers[].channels[].htlcs[].direction
 *
 * @generated from enum cln.ListpeersPeersChannelsHtlcs.ListpeersPeersChannelsHtlcsDirection
 */
export enum ListpeersPeersChannelsHtlcs_ListpeersPeersChannelsHtlcsDirection {
  /**
   * @generated from enum value: IN = 0;
   */
  IN = 0,

  /**
   * @generated from enum value: OUT = 1;
   */
  OUT = 1,
}
// Retrieve enum metadata with: proto3.getEnumType(ListpeersPeersChannelsHtlcs_ListpeersPeersChannelsHtlcsDirection)
proto3.util.setEnumType(ListpeersPeersChannelsHtlcs_ListpeersPeersChannelsHtlcsDirection, "cln.ListpeersPeersChannelsHtlcs.ListpeersPeersChannelsHtlcsDirection", [
  { no: 0, name: "IN" },
  { no: 1, name: "OUT" },
]);

/**
 * @generated from message cln.ListfundsRequest
 */
export class ListfundsRequest extends Message<ListfundsRequest> {
  /**
   * @generated from field: optional bool spent = 1;
   */
  spent?: boolean;

  constructor(data?: PartialMessage<ListfundsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.ListfundsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "spent", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListfundsRequest {
    return new ListfundsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListfundsRequest {
    return new ListfundsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListfundsRequest {
    return new ListfundsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListfundsRequest | PlainMessage<ListfundsRequest> | undefined, b: ListfundsRequest | PlainMessage<ListfundsRequest> | undefined): boolean {
    return proto3.util.equals(ListfundsRequest, a, b);
  }
}

/**
 * @generated from message cln.ListfundsResponse
 */
export class ListfundsResponse extends Message<ListfundsResponse> {
  /**
   * @generated from field: repeated cln.ListfundsOutputs outputs = 1;
   */
  outputs: ListfundsOutputs[] = [];

  /**
   * @generated from field: repeated cln.ListfundsChannels channels = 2;
   */
  channels: ListfundsChannels[] = [];

  constructor(data?: PartialMessage<ListfundsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.ListfundsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "outputs", kind: "message", T: ListfundsOutputs, repeated: true },
    { no: 2, name: "channels", kind: "message", T: ListfundsChannels, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListfundsResponse {
    return new ListfundsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListfundsResponse {
    return new ListfundsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListfundsResponse {
    return new ListfundsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListfundsResponse | PlainMessage<ListfundsResponse> | undefined, b: ListfundsResponse | PlainMessage<ListfundsResponse> | undefined): boolean {
    return proto3.util.equals(ListfundsResponse, a, b);
  }
}

/**
 * @generated from message cln.ListfundsOutputs
 */
export class ListfundsOutputs extends Message<ListfundsOutputs> {
  /**
   * @generated from field: bytes txid = 1;
   */
  txid = new Uint8Array(0);

  /**
   * @generated from field: uint32 output = 2;
   */
  output = 0;

  /**
   * @generated from field: cln.Amount amount_msat = 3;
   */
  amountMsat?: Amount;

  /**
   * @generated from field: bytes scriptpubkey = 4;
   */
  scriptpubkey = new Uint8Array(0);

  /**
   * @generated from field: optional string address = 5;
   */
  address?: string;

  /**
   * @generated from field: optional bytes redeemscript = 6;
   */
  redeemscript?: Uint8Array;

  /**
   * @generated from field: cln.ListfundsOutputs.ListfundsOutputsStatus status = 7;
   */
  status = ListfundsOutputs_ListfundsOutputsStatus.UNCONFIRMED;

  /**
   * @generated from field: bool reserved = 9;
   */
  reserved = false;

  /**
   * @generated from field: optional uint32 blockheight = 8;
   */
  blockheight?: number;

  constructor(data?: PartialMessage<ListfundsOutputs>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.ListfundsOutputs";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "txid", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 2, name: "output", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 3, name: "amount_msat", kind: "message", T: Amount },
    { no: 4, name: "scriptpubkey", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 5, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 6, name: "redeemscript", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 7, name: "status", kind: "enum", T: proto3.getEnumType(ListfundsOutputs_ListfundsOutputsStatus) },
    { no: 9, name: "reserved", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 8, name: "blockheight", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListfundsOutputs {
    return new ListfundsOutputs().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListfundsOutputs {
    return new ListfundsOutputs().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListfundsOutputs {
    return new ListfundsOutputs().fromJsonString(jsonString, options);
  }

  static equals(a: ListfundsOutputs | PlainMessage<ListfundsOutputs> | undefined, b: ListfundsOutputs | PlainMessage<ListfundsOutputs> | undefined): boolean {
    return proto3.util.equals(ListfundsOutputs, a, b);
  }
}

/**
 * ListFunds.outputs[].status
 *
 * @generated from enum cln.ListfundsOutputs.ListfundsOutputsStatus
 */
export enum ListfundsOutputs_ListfundsOutputsStatus {
  /**
   * @generated from enum value: UNCONFIRMED = 0;
   */
  UNCONFIRMED = 0,

  /**
   * @generated from enum value: CONFIRMED = 1;
   */
  CONFIRMED = 1,

  /**
   * @generated from enum value: SPENT = 2;
   */
  SPENT = 2,

  /**
   * @generated from enum value: IMMATURE = 3;
   */
  IMMATURE = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(ListfundsOutputs_ListfundsOutputsStatus)
proto3.util.setEnumType(ListfundsOutputs_ListfundsOutputsStatus, "cln.ListfundsOutputs.ListfundsOutputsStatus", [
  { no: 0, name: "UNCONFIRMED" },
  { no: 1, name: "CONFIRMED" },
  { no: 2, name: "SPENT" },
  { no: 3, name: "IMMATURE" },
]);

/**
 * @generated from message cln.ListfundsChannels
 */
export class ListfundsChannels extends Message<ListfundsChannels> {
  /**
   * @generated from field: bytes peer_id = 1;
   */
  peerId = new Uint8Array(0);

  /**
   * @generated from field: cln.Amount our_amount_msat = 2;
   */
  ourAmountMsat?: Amount;

  /**
   * @generated from field: cln.Amount amount_msat = 3;
   */
  amountMsat?: Amount;

  /**
   * @generated from field: bytes funding_txid = 4;
   */
  fundingTxid = new Uint8Array(0);

  /**
   * @generated from field: uint32 funding_output = 5;
   */
  fundingOutput = 0;

  /**
   * @generated from field: bool connected = 6;
   */
  connected = false;

  /**
   * @generated from field: cln.ChannelState state = 7;
   */
  state = ChannelState.Openingd;

  /**
   * @generated from field: optional bytes channel_id = 9;
   */
  channelId?: Uint8Array;

  /**
   * @generated from field: optional string short_channel_id = 8;
   */
  shortChannelId?: string;

  constructor(data?: PartialMessage<ListfundsChannels>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.ListfundsChannels";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "peer_id", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 2, name: "our_amount_msat", kind: "message", T: Amount },
    { no: 3, name: "amount_msat", kind: "message", T: Amount },
    { no: 4, name: "funding_txid", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 5, name: "funding_output", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 6, name: "connected", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 7, name: "state", kind: "enum", T: proto3.getEnumType(ChannelState) },
    { no: 9, name: "channel_id", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 8, name: "short_channel_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListfundsChannels {
    return new ListfundsChannels().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListfundsChannels {
    return new ListfundsChannels().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListfundsChannels {
    return new ListfundsChannels().fromJsonString(jsonString, options);
  }

  static equals(a: ListfundsChannels | PlainMessage<ListfundsChannels> | undefined, b: ListfundsChannels | PlainMessage<ListfundsChannels> | undefined): boolean {
    return proto3.util.equals(ListfundsChannels, a, b);
  }
}

/**
 * @generated from message cln.SendpayRequest
 */
export class SendpayRequest extends Message<SendpayRequest> {
  /**
   * @generated from field: repeated cln.SendpayRoute route = 1;
   */
  route: SendpayRoute[] = [];

  /**
   * @generated from field: bytes payment_hash = 2;
   */
  paymentHash = new Uint8Array(0);

  /**
   * @generated from field: optional string label = 3;
   */
  label?: string;

  /**
   * @generated from field: optional cln.Amount amount_msat = 10;
   */
  amountMsat?: Amount;

  /**
   * @generated from field: optional string bolt11 = 5;
   */
  bolt11?: string;

  /**
   * @generated from field: optional bytes payment_secret = 6;
   */
  paymentSecret?: Uint8Array;

  /**
   * @generated from field: optional uint32 partid = 7;
   */
  partid?: number;

  /**
   * @generated from field: optional bytes localinvreqid = 11;
   */
  localinvreqid?: Uint8Array;

  /**
   * @generated from field: optional uint64 groupid = 9;
   */
  groupid?: bigint;

  constructor(data?: PartialMessage<SendpayRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.SendpayRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "route", kind: "message", T: SendpayRoute, repeated: true },
    { no: 2, name: "payment_hash", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 3, name: "label", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 10, name: "amount_msat", kind: "message", T: Amount, opt: true },
    { no: 5, name: "bolt11", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 6, name: "payment_secret", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 7, name: "partid", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 11, name: "localinvreqid", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 9, name: "groupid", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SendpayRequest {
    return new SendpayRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SendpayRequest {
    return new SendpayRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SendpayRequest {
    return new SendpayRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SendpayRequest | PlainMessage<SendpayRequest> | undefined, b: SendpayRequest | PlainMessage<SendpayRequest> | undefined): boolean {
    return proto3.util.equals(SendpayRequest, a, b);
  }
}

/**
 * @generated from message cln.SendpayResponse
 */
export class SendpayResponse extends Message<SendpayResponse> {
  /**
   * @generated from field: uint64 id = 1;
   */
  id = protoInt64.zero;

  /**
   * @generated from field: optional uint64 groupid = 2;
   */
  groupid?: bigint;

  /**
   * @generated from field: bytes payment_hash = 3;
   */
  paymentHash = new Uint8Array(0);

  /**
   * @generated from field: cln.SendpayResponse.SendpayStatus status = 4;
   */
  status = SendpayResponse_SendpayStatus.PENDING;

  /**
   * @generated from field: optional cln.Amount amount_msat = 5;
   */
  amountMsat?: Amount;

  /**
   * @generated from field: optional bytes destination = 6;
   */
  destination?: Uint8Array;

  /**
   * @generated from field: uint64 created_at = 7;
   */
  createdAt = protoInt64.zero;

  /**
   * @generated from field: optional uint64 completed_at = 15;
   */
  completedAt?: bigint;

  /**
   * @generated from field: cln.Amount amount_sent_msat = 8;
   */
  amountSentMsat?: Amount;

  /**
   * @generated from field: optional string label = 9;
   */
  label?: string;

  /**
   * @generated from field: optional uint64 partid = 10;
   */
  partid?: bigint;

  /**
   * @generated from field: optional string bolt11 = 11;
   */
  bolt11?: string;

  /**
   * @generated from field: optional string bolt12 = 12;
   */
  bolt12?: string;

  /**
   * @generated from field: optional bytes payment_preimage = 13;
   */
  paymentPreimage?: Uint8Array;

  /**
   * @generated from field: optional string message = 14;
   */
  message?: string;

  constructor(data?: PartialMessage<SendpayResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.SendpayResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "groupid", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 3, name: "payment_hash", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 4, name: "status", kind: "enum", T: proto3.getEnumType(SendpayResponse_SendpayStatus) },
    { no: 5, name: "amount_msat", kind: "message", T: Amount, opt: true },
    { no: 6, name: "destination", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 7, name: "created_at", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "completed_at", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 8, name: "amount_sent_msat", kind: "message", T: Amount },
    { no: 9, name: "label", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 10, name: "partid", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 11, name: "bolt11", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 12, name: "bolt12", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 13, name: "payment_preimage", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 14, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SendpayResponse {
    return new SendpayResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SendpayResponse {
    return new SendpayResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SendpayResponse {
    return new SendpayResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SendpayResponse | PlainMessage<SendpayResponse> | undefined, b: SendpayResponse | PlainMessage<SendpayResponse> | undefined): boolean {
    return proto3.util.equals(SendpayResponse, a, b);
  }
}

/**
 * SendPay.status
 *
 * @generated from enum cln.SendpayResponse.SendpayStatus
 */
export enum SendpayResponse_SendpayStatus {
  /**
   * @generated from enum value: PENDING = 0;
   */
  PENDING = 0,

  /**
   * @generated from enum value: COMPLETE = 1;
   */
  COMPLETE = 1,
}
// Retrieve enum metadata with: proto3.getEnumType(SendpayResponse_SendpayStatus)
proto3.util.setEnumType(SendpayResponse_SendpayStatus, "cln.SendpayResponse.SendpayStatus", [
  { no: 0, name: "PENDING" },
  { no: 1, name: "COMPLETE" },
]);

/**
 * @generated from message cln.SendpayRoute
 */
export class SendpayRoute extends Message<SendpayRoute> {
  /**
   * @generated from field: cln.Amount amount_msat = 5;
   */
  amountMsat?: Amount;

  /**
   * @generated from field: bytes id = 2;
   */
  id = new Uint8Array(0);

  /**
   * @generated from field: uint32 delay = 3;
   */
  delay = 0;

  /**
   * @generated from field: string channel = 4;
   */
  channel = "";

  constructor(data?: PartialMessage<SendpayRoute>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.SendpayRoute";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 5, name: "amount_msat", kind: "message", T: Amount },
    { no: 2, name: "id", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 3, name: "delay", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 4, name: "channel", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SendpayRoute {
    return new SendpayRoute().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SendpayRoute {
    return new SendpayRoute().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SendpayRoute {
    return new SendpayRoute().fromJsonString(jsonString, options);
  }

  static equals(a: SendpayRoute | PlainMessage<SendpayRoute> | undefined, b: SendpayRoute | PlainMessage<SendpayRoute> | undefined): boolean {
    return proto3.util.equals(SendpayRoute, a, b);
  }
}

/**
 * @generated from message cln.ListchannelsRequest
 */
export class ListchannelsRequest extends Message<ListchannelsRequest> {
  /**
   * @generated from field: optional string short_channel_id = 1;
   */
  shortChannelId?: string;

  /**
   * @generated from field: optional bytes source = 2;
   */
  source?: Uint8Array;

  /**
   * @generated from field: optional bytes destination = 3;
   */
  destination?: Uint8Array;

  constructor(data?: PartialMessage<ListchannelsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.ListchannelsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "short_channel_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "source", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 3, name: "destination", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListchannelsRequest {
    return new ListchannelsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListchannelsRequest {
    return new ListchannelsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListchannelsRequest {
    return new ListchannelsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListchannelsRequest | PlainMessage<ListchannelsRequest> | undefined, b: ListchannelsRequest | PlainMessage<ListchannelsRequest> | undefined): boolean {
    return proto3.util.equals(ListchannelsRequest, a, b);
  }
}

/**
 * @generated from message cln.ListchannelsResponse
 */
export class ListchannelsResponse extends Message<ListchannelsResponse> {
  /**
   * @generated from field: repeated cln.ListchannelsChannels channels = 1;
   */
  channels: ListchannelsChannels[] = [];

  constructor(data?: PartialMessage<ListchannelsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.ListchannelsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "channels", kind: "message", T: ListchannelsChannels, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListchannelsResponse {
    return new ListchannelsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListchannelsResponse {
    return new ListchannelsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListchannelsResponse {
    return new ListchannelsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListchannelsResponse | PlainMessage<ListchannelsResponse> | undefined, b: ListchannelsResponse | PlainMessage<ListchannelsResponse> | undefined): boolean {
    return proto3.util.equals(ListchannelsResponse, a, b);
  }
}

/**
 * @generated from message cln.ListchannelsChannels
 */
export class ListchannelsChannels extends Message<ListchannelsChannels> {
  /**
   * @generated from field: bytes source = 1;
   */
  source = new Uint8Array(0);

  /**
   * @generated from field: bytes destination = 2;
   */
  destination = new Uint8Array(0);

  /**
   * @generated from field: string short_channel_id = 3;
   */
  shortChannelId = "";

  /**
   * @generated from field: uint32 direction = 16;
   */
  direction = 0;

  /**
   * @generated from field: bool public = 4;
   */
  public = false;

  /**
   * @generated from field: cln.Amount amount_msat = 5;
   */
  amountMsat?: Amount;

  /**
   * @generated from field: uint32 message_flags = 6;
   */
  messageFlags = 0;

  /**
   * @generated from field: uint32 channel_flags = 7;
   */
  channelFlags = 0;

  /**
   * @generated from field: bool active = 8;
   */
  active = false;

  /**
   * @generated from field: uint32 last_update = 9;
   */
  lastUpdate = 0;

  /**
   * @generated from field: uint32 base_fee_millisatoshi = 10;
   */
  baseFeeMillisatoshi = 0;

  /**
   * @generated from field: uint32 fee_per_millionth = 11;
   */
  feePerMillionth = 0;

  /**
   * @generated from field: uint32 delay = 12;
   */
  delay = 0;

  /**
   * @generated from field: cln.Amount htlc_minimum_msat = 13;
   */
  htlcMinimumMsat?: Amount;

  /**
   * @generated from field: optional cln.Amount htlc_maximum_msat = 14;
   */
  htlcMaximumMsat?: Amount;

  /**
   * @generated from field: bytes features = 15;
   */
  features = new Uint8Array(0);

  constructor(data?: PartialMessage<ListchannelsChannels>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.ListchannelsChannels";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "source", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 2, name: "destination", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 3, name: "short_channel_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 16, name: "direction", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 4, name: "public", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "amount_msat", kind: "message", T: Amount },
    { no: 6, name: "message_flags", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 7, name: "channel_flags", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 8, name: "active", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 9, name: "last_update", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 10, name: "base_fee_millisatoshi", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 11, name: "fee_per_millionth", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 12, name: "delay", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 13, name: "htlc_minimum_msat", kind: "message", T: Amount },
    { no: 14, name: "htlc_maximum_msat", kind: "message", T: Amount, opt: true },
    { no: 15, name: "features", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListchannelsChannels {
    return new ListchannelsChannels().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListchannelsChannels {
    return new ListchannelsChannels().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListchannelsChannels {
    return new ListchannelsChannels().fromJsonString(jsonString, options);
  }

  static equals(a: ListchannelsChannels | PlainMessage<ListchannelsChannels> | undefined, b: ListchannelsChannels | PlainMessage<ListchannelsChannels> | undefined): boolean {
    return proto3.util.equals(ListchannelsChannels, a, b);
  }
}

/**
 * @generated from message cln.AddgossipRequest
 */
export class AddgossipRequest extends Message<AddgossipRequest> {
  /**
   * @generated from field: bytes message = 1;
   */
  message = new Uint8Array(0);

  constructor(data?: PartialMessage<AddgossipRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.AddgossipRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "message", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddgossipRequest {
    return new AddgossipRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddgossipRequest {
    return new AddgossipRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddgossipRequest {
    return new AddgossipRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddgossipRequest | PlainMessage<AddgossipRequest> | undefined, b: AddgossipRequest | PlainMessage<AddgossipRequest> | undefined): boolean {
    return proto3.util.equals(AddgossipRequest, a, b);
  }
}

/**
 * @generated from message cln.AddgossipResponse
 */
export class AddgossipResponse extends Message<AddgossipResponse> {
  constructor(data?: PartialMessage<AddgossipResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.AddgossipResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddgossipResponse {
    return new AddgossipResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddgossipResponse {
    return new AddgossipResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddgossipResponse {
    return new AddgossipResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddgossipResponse | PlainMessage<AddgossipResponse> | undefined, b: AddgossipResponse | PlainMessage<AddgossipResponse> | undefined): boolean {
    return proto3.util.equals(AddgossipResponse, a, b);
  }
}

/**
 * @generated from message cln.AutocleaninvoiceRequest
 */
export class AutocleaninvoiceRequest extends Message<AutocleaninvoiceRequest> {
  /**
   * @generated from field: optional uint64 expired_by = 1;
   */
  expiredBy?: bigint;

  /**
   * @generated from field: optional uint64 cycle_seconds = 2;
   */
  cycleSeconds?: bigint;

  constructor(data?: PartialMessage<AutocleaninvoiceRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.AutocleaninvoiceRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "expired_by", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 2, name: "cycle_seconds", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AutocleaninvoiceRequest {
    return new AutocleaninvoiceRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AutocleaninvoiceRequest {
    return new AutocleaninvoiceRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AutocleaninvoiceRequest {
    return new AutocleaninvoiceRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AutocleaninvoiceRequest | PlainMessage<AutocleaninvoiceRequest> | undefined, b: AutocleaninvoiceRequest | PlainMessage<AutocleaninvoiceRequest> | undefined): boolean {
    return proto3.util.equals(AutocleaninvoiceRequest, a, b);
  }
}

/**
 * @generated from message cln.AutocleaninvoiceResponse
 */
export class AutocleaninvoiceResponse extends Message<AutocleaninvoiceResponse> {
  /**
   * @generated from field: bool enabled = 1;
   */
  enabled = false;

  /**
   * @generated from field: optional uint64 expired_by = 2;
   */
  expiredBy?: bigint;

  /**
   * @generated from field: optional uint64 cycle_seconds = 3;
   */
  cycleSeconds?: bigint;

  constructor(data?: PartialMessage<AutocleaninvoiceResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.AutocleaninvoiceResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "expired_by", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 3, name: "cycle_seconds", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AutocleaninvoiceResponse {
    return new AutocleaninvoiceResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AutocleaninvoiceResponse {
    return new AutocleaninvoiceResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AutocleaninvoiceResponse {
    return new AutocleaninvoiceResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AutocleaninvoiceResponse | PlainMessage<AutocleaninvoiceResponse> | undefined, b: AutocleaninvoiceResponse | PlainMessage<AutocleaninvoiceResponse> | undefined): boolean {
    return proto3.util.equals(AutocleaninvoiceResponse, a, b);
  }
}

/**
 * @generated from message cln.CheckmessageRequest
 */
export class CheckmessageRequest extends Message<CheckmessageRequest> {
  /**
   * @generated from field: string message = 1;
   */
  message = "";

  /**
   * @generated from field: string zbase = 2;
   */
  zbase = "";

  /**
   * @generated from field: optional bytes pubkey = 3;
   */
  pubkey?: Uint8Array;

  constructor(data?: PartialMessage<CheckmessageRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.CheckmessageRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "zbase", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "pubkey", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CheckmessageRequest {
    return new CheckmessageRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CheckmessageRequest {
    return new CheckmessageRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CheckmessageRequest {
    return new CheckmessageRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CheckmessageRequest | PlainMessage<CheckmessageRequest> | undefined, b: CheckmessageRequest | PlainMessage<CheckmessageRequest> | undefined): boolean {
    return proto3.util.equals(CheckmessageRequest, a, b);
  }
}

/**
 * @generated from message cln.CheckmessageResponse
 */
export class CheckmessageResponse extends Message<CheckmessageResponse> {
  /**
   * @generated from field: bool verified = 1;
   */
  verified = false;

  /**
   * @generated from field: bytes pubkey = 2;
   */
  pubkey = new Uint8Array(0);

  constructor(data?: PartialMessage<CheckmessageResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.CheckmessageResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "verified", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "pubkey", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CheckmessageResponse {
    return new CheckmessageResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CheckmessageResponse {
    return new CheckmessageResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CheckmessageResponse {
    return new CheckmessageResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CheckmessageResponse | PlainMessage<CheckmessageResponse> | undefined, b: CheckmessageResponse | PlainMessage<CheckmessageResponse> | undefined): boolean {
    return proto3.util.equals(CheckmessageResponse, a, b);
  }
}

/**
 * @generated from message cln.CloseRequest
 */
export class CloseRequest extends Message<CloseRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: optional uint32 unilateraltimeout = 2;
   */
  unilateraltimeout?: number;

  /**
   * @generated from field: optional string destination = 3;
   */
  destination?: string;

  /**
   * @generated from field: optional string fee_negotiation_step = 4;
   */
  feeNegotiationStep?: string;

  /**
   * @generated from field: optional cln.Outpoint wrong_funding = 5;
   */
  wrongFunding?: Outpoint;

  /**
   * @generated from field: optional bool force_lease_closed = 6;
   */
  forceLeaseClosed?: boolean;

  /**
   * @generated from field: repeated cln.Feerate feerange = 7;
   */
  feerange: Feerate[] = [];

  constructor(data?: PartialMessage<CloseRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.CloseRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "unilateraltimeout", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 3, name: "destination", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "fee_negotiation_step", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 5, name: "wrong_funding", kind: "message", T: Outpoint, opt: true },
    { no: 6, name: "force_lease_closed", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 7, name: "feerange", kind: "message", T: Feerate, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CloseRequest {
    return new CloseRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CloseRequest {
    return new CloseRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CloseRequest {
    return new CloseRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CloseRequest | PlainMessage<CloseRequest> | undefined, b: CloseRequest | PlainMessage<CloseRequest> | undefined): boolean {
    return proto3.util.equals(CloseRequest, a, b);
  }
}

/**
 * @generated from message cln.CloseResponse
 */
export class CloseResponse extends Message<CloseResponse> {
  /**
   * @generated from field: cln.CloseResponse.CloseType item_type = 1;
   */
  itemType = CloseResponse_CloseType.MUTUAL;

  /**
   * @generated from field: optional bytes tx = 2;
   */
  tx?: Uint8Array;

  /**
   * @generated from field: optional bytes txid = 3;
   */
  txid?: Uint8Array;

  constructor(data?: PartialMessage<CloseResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.CloseResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "item_type", kind: "enum", T: proto3.getEnumType(CloseResponse_CloseType) },
    { no: 2, name: "tx", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 3, name: "txid", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CloseResponse {
    return new CloseResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CloseResponse {
    return new CloseResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CloseResponse {
    return new CloseResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CloseResponse | PlainMessage<CloseResponse> | undefined, b: CloseResponse | PlainMessage<CloseResponse> | undefined): boolean {
    return proto3.util.equals(CloseResponse, a, b);
  }
}

/**
 * Close.type
 *
 * @generated from enum cln.CloseResponse.CloseType
 */
export enum CloseResponse_CloseType {
  /**
   * @generated from enum value: MUTUAL = 0;
   */
  MUTUAL = 0,

  /**
   * @generated from enum value: UNILATERAL = 1;
   */
  UNILATERAL = 1,

  /**
   * @generated from enum value: UNOPENED = 2;
   */
  UNOPENED = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(CloseResponse_CloseType)
proto3.util.setEnumType(CloseResponse_CloseType, "cln.CloseResponse.CloseType", [
  { no: 0, name: "MUTUAL" },
  { no: 1, name: "UNILATERAL" },
  { no: 2, name: "UNOPENED" },
]);

/**
 * @generated from message cln.ConnectRequest
 */
export class ConnectRequest extends Message<ConnectRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: optional string host = 2;
   */
  host?: string;

  /**
   * @generated from field: optional uint32 port = 3;
   */
  port?: number;

  constructor(data?: PartialMessage<ConnectRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.ConnectRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "host", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "port", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConnectRequest {
    return new ConnectRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConnectRequest {
    return new ConnectRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConnectRequest {
    return new ConnectRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ConnectRequest | PlainMessage<ConnectRequest> | undefined, b: ConnectRequest | PlainMessage<ConnectRequest> | undefined): boolean {
    return proto3.util.equals(ConnectRequest, a, b);
  }
}

/**
 * @generated from message cln.ConnectResponse
 */
export class ConnectResponse extends Message<ConnectResponse> {
  /**
   * @generated from field: bytes id = 1;
   */
  id = new Uint8Array(0);

  /**
   * @generated from field: bytes features = 2;
   */
  features = new Uint8Array(0);

  /**
   * @generated from field: cln.ConnectResponse.ConnectDirection direction = 3;
   */
  direction = ConnectResponse_ConnectDirection.IN;

  /**
   * @generated from field: cln.ConnectAddress address = 4;
   */
  address?: ConnectAddress;

  constructor(data?: PartialMessage<ConnectResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.ConnectResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 2, name: "features", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 3, name: "direction", kind: "enum", T: proto3.getEnumType(ConnectResponse_ConnectDirection) },
    { no: 4, name: "address", kind: "message", T: ConnectAddress },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConnectResponse {
    return new ConnectResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConnectResponse {
    return new ConnectResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConnectResponse {
    return new ConnectResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ConnectResponse | PlainMessage<ConnectResponse> | undefined, b: ConnectResponse | PlainMessage<ConnectResponse> | undefined): boolean {
    return proto3.util.equals(ConnectResponse, a, b);
  }
}

/**
 * Connect.direction
 *
 * @generated from enum cln.ConnectResponse.ConnectDirection
 */
export enum ConnectResponse_ConnectDirection {
  /**
   * @generated from enum value: IN = 0;
   */
  IN = 0,

  /**
   * @generated from enum value: OUT = 1;
   */
  OUT = 1,
}
// Retrieve enum metadata with: proto3.getEnumType(ConnectResponse_ConnectDirection)
proto3.util.setEnumType(ConnectResponse_ConnectDirection, "cln.ConnectResponse.ConnectDirection", [
  { no: 0, name: "IN" },
  { no: 1, name: "OUT" },
]);

/**
 * @generated from message cln.ConnectAddress
 */
export class ConnectAddress extends Message<ConnectAddress> {
  /**
   * @generated from field: cln.ConnectAddress.ConnectAddressType item_type = 1;
   */
  itemType = ConnectAddress_ConnectAddressType.LOCAL_SOCKET;

  /**
   * @generated from field: optional string socket = 2;
   */
  socket?: string;

  /**
   * @generated from field: optional string address = 3;
   */
  address?: string;

  /**
   * @generated from field: optional uint32 port = 4;
   */
  port?: number;

  constructor(data?: PartialMessage<ConnectAddress>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.ConnectAddress";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "item_type", kind: "enum", T: proto3.getEnumType(ConnectAddress_ConnectAddressType) },
    { no: 2, name: "socket", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "port", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConnectAddress {
    return new ConnectAddress().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConnectAddress {
    return new ConnectAddress().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConnectAddress {
    return new ConnectAddress().fromJsonString(jsonString, options);
  }

  static equals(a: ConnectAddress | PlainMessage<ConnectAddress> | undefined, b: ConnectAddress | PlainMessage<ConnectAddress> | undefined): boolean {
    return proto3.util.equals(ConnectAddress, a, b);
  }
}

/**
 * Connect.address.type
 *
 * @generated from enum cln.ConnectAddress.ConnectAddressType
 */
export enum ConnectAddress_ConnectAddressType {
  /**
   * @generated from enum value: LOCAL_SOCKET = 0;
   */
  LOCAL_SOCKET = 0,

  /**
   * @generated from enum value: IPV4 = 1;
   */
  IPV4 = 1,

  /**
   * @generated from enum value: IPV6 = 2;
   */
  IPV6 = 2,

  /**
   * @generated from enum value: TORV2 = 3;
   */
  TORV2 = 3,

  /**
   * @generated from enum value: TORV3 = 4;
   */
  TORV3 = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(ConnectAddress_ConnectAddressType)
proto3.util.setEnumType(ConnectAddress_ConnectAddressType, "cln.ConnectAddress.ConnectAddressType", [
  { no: 0, name: "LOCAL_SOCKET" },
  { no: 1, name: "IPV4" },
  { no: 2, name: "IPV6" },
  { no: 3, name: "TORV2" },
  { no: 4, name: "TORV3" },
]);

/**
 * @generated from message cln.CreateinvoiceRequest
 */
export class CreateinvoiceRequest extends Message<CreateinvoiceRequest> {
  /**
   * @generated from field: string invstring = 1;
   */
  invstring = "";

  /**
   * @generated from field: string label = 2;
   */
  label = "";

  /**
   * @generated from field: bytes preimage = 3;
   */
  preimage = new Uint8Array(0);

  constructor(data?: PartialMessage<CreateinvoiceRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.CreateinvoiceRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "invstring", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "label", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "preimage", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateinvoiceRequest {
    return new CreateinvoiceRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateinvoiceRequest {
    return new CreateinvoiceRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateinvoiceRequest {
    return new CreateinvoiceRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateinvoiceRequest | PlainMessage<CreateinvoiceRequest> | undefined, b: CreateinvoiceRequest | PlainMessage<CreateinvoiceRequest> | undefined): boolean {
    return proto3.util.equals(CreateinvoiceRequest, a, b);
  }
}

/**
 * @generated from message cln.CreateinvoiceResponse
 */
export class CreateinvoiceResponse extends Message<CreateinvoiceResponse> {
  /**
   * @generated from field: string label = 1;
   */
  label = "";

  /**
   * @generated from field: optional string bolt11 = 2;
   */
  bolt11?: string;

  /**
   * @generated from field: optional string bolt12 = 3;
   */
  bolt12?: string;

  /**
   * @generated from field: bytes payment_hash = 4;
   */
  paymentHash = new Uint8Array(0);

  /**
   * @generated from field: optional cln.Amount amount_msat = 5;
   */
  amountMsat?: Amount;

  /**
   * @generated from field: cln.CreateinvoiceResponse.CreateinvoiceStatus status = 6;
   */
  status = CreateinvoiceResponse_CreateinvoiceStatus.PAID;

  /**
   * @generated from field: string description = 7;
   */
  description = "";

  /**
   * @generated from field: uint64 expires_at = 8;
   */
  expiresAt = protoInt64.zero;

  /**
   * @generated from field: optional uint64 pay_index = 9;
   */
  payIndex?: bigint;

  /**
   * @generated from field: optional cln.Amount amount_received_msat = 10;
   */
  amountReceivedMsat?: Amount;

  /**
   * @generated from field: optional uint64 paid_at = 11;
   */
  paidAt?: bigint;

  /**
   * @generated from field: optional bytes payment_preimage = 12;
   */
  paymentPreimage?: Uint8Array;

  /**
   * @generated from field: optional bytes local_offer_id = 13;
   */
  localOfferId?: Uint8Array;

  /**
   * @generated from field: optional string invreq_payer_note = 15;
   */
  invreqPayerNote?: string;

  constructor(data?: PartialMessage<CreateinvoiceResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.CreateinvoiceResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "label", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "bolt11", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "bolt12", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "payment_hash", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 5, name: "amount_msat", kind: "message", T: Amount, opt: true },
    { no: 6, name: "status", kind: "enum", T: proto3.getEnumType(CreateinvoiceResponse_CreateinvoiceStatus) },
    { no: 7, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "expires_at", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 9, name: "pay_index", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 10, name: "amount_received_msat", kind: "message", T: Amount, opt: true },
    { no: 11, name: "paid_at", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 12, name: "payment_preimage", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 13, name: "local_offer_id", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 15, name: "invreq_payer_note", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateinvoiceResponse {
    return new CreateinvoiceResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateinvoiceResponse {
    return new CreateinvoiceResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateinvoiceResponse {
    return new CreateinvoiceResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CreateinvoiceResponse | PlainMessage<CreateinvoiceResponse> | undefined, b: CreateinvoiceResponse | PlainMessage<CreateinvoiceResponse> | undefined): boolean {
    return proto3.util.equals(CreateinvoiceResponse, a, b);
  }
}

/**
 * CreateInvoice.status
 *
 * @generated from enum cln.CreateinvoiceResponse.CreateinvoiceStatus
 */
export enum CreateinvoiceResponse_CreateinvoiceStatus {
  /**
   * @generated from enum value: PAID = 0;
   */
  PAID = 0,

  /**
   * @generated from enum value: EXPIRED = 1;
   */
  EXPIRED = 1,

  /**
   * @generated from enum value: UNPAID = 2;
   */
  UNPAID = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(CreateinvoiceResponse_CreateinvoiceStatus)
proto3.util.setEnumType(CreateinvoiceResponse_CreateinvoiceStatus, "cln.CreateinvoiceResponse.CreateinvoiceStatus", [
  { no: 0, name: "PAID" },
  { no: 1, name: "EXPIRED" },
  { no: 2, name: "UNPAID" },
]);

/**
 * @generated from message cln.DatastoreRequest
 */
export class DatastoreRequest extends Message<DatastoreRequest> {
  /**
   * @generated from field: repeated string key = 5;
   */
  key: string[] = [];

  /**
   * @generated from field: optional string string = 6;
   */
  string?: string;

  /**
   * @generated from field: optional bytes hex = 2;
   */
  hex?: Uint8Array;

  /**
   * @generated from field: optional cln.DatastoreRequest.DatastoreMode mode = 3;
   */
  mode?: DatastoreRequest_DatastoreMode;

  /**
   * @generated from field: optional uint64 generation = 4;
   */
  generation?: bigint;

  constructor(data?: PartialMessage<DatastoreRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.DatastoreRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 5, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 6, name: "string", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "hex", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 3, name: "mode", kind: "enum", T: proto3.getEnumType(DatastoreRequest_DatastoreMode), opt: true },
    { no: 4, name: "generation", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DatastoreRequest {
    return new DatastoreRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DatastoreRequest {
    return new DatastoreRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DatastoreRequest {
    return new DatastoreRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DatastoreRequest | PlainMessage<DatastoreRequest> | undefined, b: DatastoreRequest | PlainMessage<DatastoreRequest> | undefined): boolean {
    return proto3.util.equals(DatastoreRequest, a, b);
  }
}

/**
 * Datastore.mode
 *
 * @generated from enum cln.DatastoreRequest.DatastoreMode
 */
export enum DatastoreRequest_DatastoreMode {
  /**
   * @generated from enum value: MUST_CREATE = 0;
   */
  MUST_CREATE = 0,

  /**
   * @generated from enum value: MUST_REPLACE = 1;
   */
  MUST_REPLACE = 1,

  /**
   * @generated from enum value: CREATE_OR_REPLACE = 2;
   */
  CREATE_OR_REPLACE = 2,

  /**
   * @generated from enum value: MUST_APPEND = 3;
   */
  MUST_APPEND = 3,

  /**
   * @generated from enum value: CREATE_OR_APPEND = 4;
   */
  CREATE_OR_APPEND = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(DatastoreRequest_DatastoreMode)
proto3.util.setEnumType(DatastoreRequest_DatastoreMode, "cln.DatastoreRequest.DatastoreMode", [
  { no: 0, name: "MUST_CREATE" },
  { no: 1, name: "MUST_REPLACE" },
  { no: 2, name: "CREATE_OR_REPLACE" },
  { no: 3, name: "MUST_APPEND" },
  { no: 4, name: "CREATE_OR_APPEND" },
]);

/**
 * @generated from message cln.DatastoreResponse
 */
export class DatastoreResponse extends Message<DatastoreResponse> {
  /**
   * @generated from field: repeated string key = 5;
   */
  key: string[] = [];

  /**
   * @generated from field: optional uint64 generation = 2;
   */
  generation?: bigint;

  /**
   * @generated from field: optional bytes hex = 3;
   */
  hex?: Uint8Array;

  /**
   * @generated from field: optional string string = 4;
   */
  string?: string;

  constructor(data?: PartialMessage<DatastoreResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.DatastoreResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 5, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 2, name: "generation", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 3, name: "hex", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 4, name: "string", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DatastoreResponse {
    return new DatastoreResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DatastoreResponse {
    return new DatastoreResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DatastoreResponse {
    return new DatastoreResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DatastoreResponse | PlainMessage<DatastoreResponse> | undefined, b: DatastoreResponse | PlainMessage<DatastoreResponse> | undefined): boolean {
    return proto3.util.equals(DatastoreResponse, a, b);
  }
}

/**
 * @generated from message cln.CreateonionRequest
 */
export class CreateonionRequest extends Message<CreateonionRequest> {
  /**
   * @generated from field: repeated cln.CreateonionHops hops = 1;
   */
  hops: CreateonionHops[] = [];

  /**
   * @generated from field: bytes assocdata = 2;
   */
  assocdata = new Uint8Array(0);

  /**
   * @generated from field: optional bytes session_key = 3;
   */
  sessionKey?: Uint8Array;

  /**
   * @generated from field: optional uint32 onion_size = 4;
   */
  onionSize?: number;

  constructor(data?: PartialMessage<CreateonionRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.CreateonionRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "hops", kind: "message", T: CreateonionHops, repeated: true },
    { no: 2, name: "assocdata", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 3, name: "session_key", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 4, name: "onion_size", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateonionRequest {
    return new CreateonionRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateonionRequest {
    return new CreateonionRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateonionRequest {
    return new CreateonionRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateonionRequest | PlainMessage<CreateonionRequest> | undefined, b: CreateonionRequest | PlainMessage<CreateonionRequest> | undefined): boolean {
    return proto3.util.equals(CreateonionRequest, a, b);
  }
}

/**
 * @generated from message cln.CreateonionResponse
 */
export class CreateonionResponse extends Message<CreateonionResponse> {
  /**
   * @generated from field: bytes onion = 1;
   */
  onion = new Uint8Array(0);

  /**
   * @generated from field: repeated bytes shared_secrets = 2;
   */
  sharedSecrets: Uint8Array[] = [];

  constructor(data?: PartialMessage<CreateonionResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.CreateonionResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "onion", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 2, name: "shared_secrets", kind: "scalar", T: 12 /* ScalarType.BYTES */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateonionResponse {
    return new CreateonionResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateonionResponse {
    return new CreateonionResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateonionResponse {
    return new CreateonionResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CreateonionResponse | PlainMessage<CreateonionResponse> | undefined, b: CreateonionResponse | PlainMessage<CreateonionResponse> | undefined): boolean {
    return proto3.util.equals(CreateonionResponse, a, b);
  }
}

/**
 * @generated from message cln.CreateonionHops
 */
export class CreateonionHops extends Message<CreateonionHops> {
  /**
   * @generated from field: bytes pubkey = 1;
   */
  pubkey = new Uint8Array(0);

  /**
   * @generated from field: bytes payload = 2;
   */
  payload = new Uint8Array(0);

  constructor(data?: PartialMessage<CreateonionHops>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.CreateonionHops";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pubkey", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 2, name: "payload", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateonionHops {
    return new CreateonionHops().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateonionHops {
    return new CreateonionHops().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateonionHops {
    return new CreateonionHops().fromJsonString(jsonString, options);
  }

  static equals(a: CreateonionHops | PlainMessage<CreateonionHops> | undefined, b: CreateonionHops | PlainMessage<CreateonionHops> | undefined): boolean {
    return proto3.util.equals(CreateonionHops, a, b);
  }
}

/**
 * @generated from message cln.DeldatastoreRequest
 */
export class DeldatastoreRequest extends Message<DeldatastoreRequest> {
  /**
   * @generated from field: repeated string key = 3;
   */
  key: string[] = [];

  /**
   * @generated from field: optional uint64 generation = 2;
   */
  generation?: bigint;

  constructor(data?: PartialMessage<DeldatastoreRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.DeldatastoreRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 3, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 2, name: "generation", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeldatastoreRequest {
    return new DeldatastoreRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeldatastoreRequest {
    return new DeldatastoreRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeldatastoreRequest {
    return new DeldatastoreRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeldatastoreRequest | PlainMessage<DeldatastoreRequest> | undefined, b: DeldatastoreRequest | PlainMessage<DeldatastoreRequest> | undefined): boolean {
    return proto3.util.equals(DeldatastoreRequest, a, b);
  }
}

/**
 * @generated from message cln.DeldatastoreResponse
 */
export class DeldatastoreResponse extends Message<DeldatastoreResponse> {
  /**
   * @generated from field: repeated string key = 5;
   */
  key: string[] = [];

  /**
   * @generated from field: optional uint64 generation = 2;
   */
  generation?: bigint;

  /**
   * @generated from field: optional bytes hex = 3;
   */
  hex?: Uint8Array;

  /**
   * @generated from field: optional string string = 4;
   */
  string?: string;

  constructor(data?: PartialMessage<DeldatastoreResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.DeldatastoreResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 5, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 2, name: "generation", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 3, name: "hex", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 4, name: "string", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeldatastoreResponse {
    return new DeldatastoreResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeldatastoreResponse {
    return new DeldatastoreResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeldatastoreResponse {
    return new DeldatastoreResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeldatastoreResponse | PlainMessage<DeldatastoreResponse> | undefined, b: DeldatastoreResponse | PlainMessage<DeldatastoreResponse> | undefined): boolean {
    return proto3.util.equals(DeldatastoreResponse, a, b);
  }
}

/**
 * @generated from message cln.DelexpiredinvoiceRequest
 */
export class DelexpiredinvoiceRequest extends Message<DelexpiredinvoiceRequest> {
  /**
   * @generated from field: optional uint64 maxexpirytime = 1;
   */
  maxexpirytime?: bigint;

  constructor(data?: PartialMessage<DelexpiredinvoiceRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.DelexpiredinvoiceRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "maxexpirytime", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DelexpiredinvoiceRequest {
    return new DelexpiredinvoiceRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DelexpiredinvoiceRequest {
    return new DelexpiredinvoiceRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DelexpiredinvoiceRequest {
    return new DelexpiredinvoiceRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DelexpiredinvoiceRequest | PlainMessage<DelexpiredinvoiceRequest> | undefined, b: DelexpiredinvoiceRequest | PlainMessage<DelexpiredinvoiceRequest> | undefined): boolean {
    return proto3.util.equals(DelexpiredinvoiceRequest, a, b);
  }
}

/**
 * @generated from message cln.DelexpiredinvoiceResponse
 */
export class DelexpiredinvoiceResponse extends Message<DelexpiredinvoiceResponse> {
  constructor(data?: PartialMessage<DelexpiredinvoiceResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.DelexpiredinvoiceResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DelexpiredinvoiceResponse {
    return new DelexpiredinvoiceResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DelexpiredinvoiceResponse {
    return new DelexpiredinvoiceResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DelexpiredinvoiceResponse {
    return new DelexpiredinvoiceResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DelexpiredinvoiceResponse | PlainMessage<DelexpiredinvoiceResponse> | undefined, b: DelexpiredinvoiceResponse | PlainMessage<DelexpiredinvoiceResponse> | undefined): boolean {
    return proto3.util.equals(DelexpiredinvoiceResponse, a, b);
  }
}

/**
 * @generated from message cln.DelinvoiceRequest
 */
export class DelinvoiceRequest extends Message<DelinvoiceRequest> {
  /**
   * @generated from field: string label = 1;
   */
  label = "";

  /**
   * @generated from field: cln.DelinvoiceRequest.DelinvoiceStatus status = 2;
   */
  status = DelinvoiceRequest_DelinvoiceStatus.PAID;

  /**
   * @generated from field: optional bool desconly = 3;
   */
  desconly?: boolean;

  constructor(data?: PartialMessage<DelinvoiceRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.DelinvoiceRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "label", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "status", kind: "enum", T: proto3.getEnumType(DelinvoiceRequest_DelinvoiceStatus) },
    { no: 3, name: "desconly", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DelinvoiceRequest {
    return new DelinvoiceRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DelinvoiceRequest {
    return new DelinvoiceRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DelinvoiceRequest {
    return new DelinvoiceRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DelinvoiceRequest | PlainMessage<DelinvoiceRequest> | undefined, b: DelinvoiceRequest | PlainMessage<DelinvoiceRequest> | undefined): boolean {
    return proto3.util.equals(DelinvoiceRequest, a, b);
  }
}

/**
 * DelInvoice.status
 *
 * @generated from enum cln.DelinvoiceRequest.DelinvoiceStatus
 */
export enum DelinvoiceRequest_DelinvoiceStatus {
  /**
   * @generated from enum value: PAID = 0;
   */
  PAID = 0,

  /**
   * @generated from enum value: EXPIRED = 1;
   */
  EXPIRED = 1,

  /**
   * @generated from enum value: UNPAID = 2;
   */
  UNPAID = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(DelinvoiceRequest_DelinvoiceStatus)
proto3.util.setEnumType(DelinvoiceRequest_DelinvoiceStatus, "cln.DelinvoiceRequest.DelinvoiceStatus", [
  { no: 0, name: "PAID" },
  { no: 1, name: "EXPIRED" },
  { no: 2, name: "UNPAID" },
]);

/**
 * @generated from message cln.DelinvoiceResponse
 */
export class DelinvoiceResponse extends Message<DelinvoiceResponse> {
  /**
   * @generated from field: string label = 1;
   */
  label = "";

  /**
   * @generated from field: optional string bolt11 = 2;
   */
  bolt11?: string;

  /**
   * @generated from field: optional string bolt12 = 3;
   */
  bolt12?: string;

  /**
   * @generated from field: optional cln.Amount amount_msat = 4;
   */
  amountMsat?: Amount;

  /**
   * @generated from field: optional string description = 5;
   */
  description?: string;

  /**
   * @generated from field: bytes payment_hash = 6;
   */
  paymentHash = new Uint8Array(0);

  /**
   * @generated from field: cln.DelinvoiceResponse.DelinvoiceStatus status = 7;
   */
  status = DelinvoiceResponse_DelinvoiceStatus.PAID;

  /**
   * @generated from field: uint64 expires_at = 8;
   */
  expiresAt = protoInt64.zero;

  /**
   * @generated from field: optional bytes local_offer_id = 9;
   */
  localOfferId?: Uint8Array;

  /**
   * @generated from field: optional string invreq_payer_note = 11;
   */
  invreqPayerNote?: string;

  constructor(data?: PartialMessage<DelinvoiceResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.DelinvoiceResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "label", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "bolt11", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "bolt12", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "amount_msat", kind: "message", T: Amount, opt: true },
    { no: 5, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 6, name: "payment_hash", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 7, name: "status", kind: "enum", T: proto3.getEnumType(DelinvoiceResponse_DelinvoiceStatus) },
    { no: 8, name: "expires_at", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 9, name: "local_offer_id", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 11, name: "invreq_payer_note", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DelinvoiceResponse {
    return new DelinvoiceResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DelinvoiceResponse {
    return new DelinvoiceResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DelinvoiceResponse {
    return new DelinvoiceResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DelinvoiceResponse | PlainMessage<DelinvoiceResponse> | undefined, b: DelinvoiceResponse | PlainMessage<DelinvoiceResponse> | undefined): boolean {
    return proto3.util.equals(DelinvoiceResponse, a, b);
  }
}

/**
 * DelInvoice.status
 *
 * @generated from enum cln.DelinvoiceResponse.DelinvoiceStatus
 */
export enum DelinvoiceResponse_DelinvoiceStatus {
  /**
   * @generated from enum value: PAID = 0;
   */
  PAID = 0,

  /**
   * @generated from enum value: EXPIRED = 1;
   */
  EXPIRED = 1,

  /**
   * @generated from enum value: UNPAID = 2;
   */
  UNPAID = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(DelinvoiceResponse_DelinvoiceStatus)
proto3.util.setEnumType(DelinvoiceResponse_DelinvoiceStatus, "cln.DelinvoiceResponse.DelinvoiceStatus", [
  { no: 0, name: "PAID" },
  { no: 1, name: "EXPIRED" },
  { no: 2, name: "UNPAID" },
]);

/**
 * @generated from message cln.InvoiceRequest
 */
export class InvoiceRequest extends Message<InvoiceRequest> {
  /**
   * @generated from field: cln.AmountOrAny amount_msat = 10;
   */
  amountMsat?: AmountOrAny;

  /**
   * @generated from field: string description = 2;
   */
  description = "";

  /**
   * @generated from field: string label = 3;
   */
  label = "";

  /**
   * @generated from field: optional uint64 expiry = 7;
   */
  expiry?: bigint;

  /**
   * @generated from field: repeated string fallbacks = 4;
   */
  fallbacks: string[] = [];

  /**
   * @generated from field: optional bytes preimage = 5;
   */
  preimage?: Uint8Array;

  /**
   * @generated from field: optional uint32 cltv = 6;
   */
  cltv?: number;

  /**
   * @generated from field: optional bool deschashonly = 9;
   */
  deschashonly?: boolean;

  constructor(data?: PartialMessage<InvoiceRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.InvoiceRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 10, name: "amount_msat", kind: "message", T: AmountOrAny },
    { no: 2, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "label", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "expiry", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 4, name: "fallbacks", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 5, name: "preimage", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 6, name: "cltv", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 9, name: "deschashonly", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InvoiceRequest {
    return new InvoiceRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InvoiceRequest {
    return new InvoiceRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InvoiceRequest {
    return new InvoiceRequest().fromJsonString(jsonString, options);
  }

  static equals(a: InvoiceRequest | PlainMessage<InvoiceRequest> | undefined, b: InvoiceRequest | PlainMessage<InvoiceRequest> | undefined): boolean {
    return proto3.util.equals(InvoiceRequest, a, b);
  }
}

/**
 * @generated from message cln.InvoiceResponse
 */
export class InvoiceResponse extends Message<InvoiceResponse> {
  /**
   * @generated from field: string bolt11 = 1;
   */
  bolt11 = "";

  /**
   * @generated from field: bytes payment_hash = 2;
   */
  paymentHash = new Uint8Array(0);

  /**
   * @generated from field: bytes payment_secret = 3;
   */
  paymentSecret = new Uint8Array(0);

  /**
   * @generated from field: uint64 expires_at = 4;
   */
  expiresAt = protoInt64.zero;

  /**
   * @generated from field: optional string warning_capacity = 5;
   */
  warningCapacity?: string;

  /**
   * @generated from field: optional string warning_offline = 6;
   */
  warningOffline?: string;

  /**
   * @generated from field: optional string warning_deadends = 7;
   */
  warningDeadends?: string;

  /**
   * @generated from field: optional string warning_private_unused = 8;
   */
  warningPrivateUnused?: string;

  /**
   * @generated from field: optional string warning_mpp = 9;
   */
  warningMpp?: string;

  constructor(data?: PartialMessage<InvoiceResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.InvoiceResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "bolt11", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "payment_hash", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 3, name: "payment_secret", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 4, name: "expires_at", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 5, name: "warning_capacity", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 6, name: "warning_offline", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 7, name: "warning_deadends", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 8, name: "warning_private_unused", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 9, name: "warning_mpp", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): InvoiceResponse {
    return new InvoiceResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): InvoiceResponse {
    return new InvoiceResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): InvoiceResponse {
    return new InvoiceResponse().fromJsonString(jsonString, options);
  }

  static equals(a: InvoiceResponse | PlainMessage<InvoiceResponse> | undefined, b: InvoiceResponse | PlainMessage<InvoiceResponse> | undefined): boolean {
    return proto3.util.equals(InvoiceResponse, a, b);
  }
}

/**
 * @generated from message cln.ListdatastoreRequest
 */
export class ListdatastoreRequest extends Message<ListdatastoreRequest> {
  /**
   * @generated from field: repeated string key = 2;
   */
  key: string[] = [];

  constructor(data?: PartialMessage<ListdatastoreRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.ListdatastoreRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 2, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListdatastoreRequest {
    return new ListdatastoreRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListdatastoreRequest {
    return new ListdatastoreRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListdatastoreRequest {
    return new ListdatastoreRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListdatastoreRequest | PlainMessage<ListdatastoreRequest> | undefined, b: ListdatastoreRequest | PlainMessage<ListdatastoreRequest> | undefined): boolean {
    return proto3.util.equals(ListdatastoreRequest, a, b);
  }
}

/**
 * @generated from message cln.ListdatastoreResponse
 */
export class ListdatastoreResponse extends Message<ListdatastoreResponse> {
  /**
   * @generated from field: repeated cln.ListdatastoreDatastore datastore = 1;
   */
  datastore: ListdatastoreDatastore[] = [];

  constructor(data?: PartialMessage<ListdatastoreResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.ListdatastoreResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "datastore", kind: "message", T: ListdatastoreDatastore, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListdatastoreResponse {
    return new ListdatastoreResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListdatastoreResponse {
    return new ListdatastoreResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListdatastoreResponse {
    return new ListdatastoreResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListdatastoreResponse | PlainMessage<ListdatastoreResponse> | undefined, b: ListdatastoreResponse | PlainMessage<ListdatastoreResponse> | undefined): boolean {
    return proto3.util.equals(ListdatastoreResponse, a, b);
  }
}

/**
 * @generated from message cln.ListdatastoreDatastore
 */
export class ListdatastoreDatastore extends Message<ListdatastoreDatastore> {
  /**
   * @generated from field: repeated string key = 1;
   */
  key: string[] = [];

  /**
   * @generated from field: optional uint64 generation = 2;
   */
  generation?: bigint;

  /**
   * @generated from field: optional bytes hex = 3;
   */
  hex?: Uint8Array;

  /**
   * @generated from field: optional string string = 4;
   */
  string?: string;

  constructor(data?: PartialMessage<ListdatastoreDatastore>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.ListdatastoreDatastore";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 2, name: "generation", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 3, name: "hex", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 4, name: "string", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListdatastoreDatastore {
    return new ListdatastoreDatastore().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListdatastoreDatastore {
    return new ListdatastoreDatastore().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListdatastoreDatastore {
    return new ListdatastoreDatastore().fromJsonString(jsonString, options);
  }

  static equals(a: ListdatastoreDatastore | PlainMessage<ListdatastoreDatastore> | undefined, b: ListdatastoreDatastore | PlainMessage<ListdatastoreDatastore> | undefined): boolean {
    return proto3.util.equals(ListdatastoreDatastore, a, b);
  }
}

/**
 * @generated from message cln.ListinvoicesRequest
 */
export class ListinvoicesRequest extends Message<ListinvoicesRequest> {
  /**
   * @generated from field: optional string label = 1;
   */
  label?: string;

  /**
   * @generated from field: optional string invstring = 2;
   */
  invstring?: string;

  /**
   * @generated from field: optional bytes payment_hash = 3;
   */
  paymentHash?: Uint8Array;

  /**
   * @generated from field: optional string offer_id = 4;
   */
  offerId?: string;

  constructor(data?: PartialMessage<ListinvoicesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.ListinvoicesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "label", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "invstring", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "payment_hash", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 4, name: "offer_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListinvoicesRequest {
    return new ListinvoicesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListinvoicesRequest {
    return new ListinvoicesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListinvoicesRequest {
    return new ListinvoicesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListinvoicesRequest | PlainMessage<ListinvoicesRequest> | undefined, b: ListinvoicesRequest | PlainMessage<ListinvoicesRequest> | undefined): boolean {
    return proto3.util.equals(ListinvoicesRequest, a, b);
  }
}

/**
 * @generated from message cln.ListinvoicesResponse
 */
export class ListinvoicesResponse extends Message<ListinvoicesResponse> {
  /**
   * @generated from field: repeated cln.ListinvoicesInvoices invoices = 1;
   */
  invoices: ListinvoicesInvoices[] = [];

  constructor(data?: PartialMessage<ListinvoicesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.ListinvoicesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "invoices", kind: "message", T: ListinvoicesInvoices, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListinvoicesResponse {
    return new ListinvoicesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListinvoicesResponse {
    return new ListinvoicesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListinvoicesResponse {
    return new ListinvoicesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListinvoicesResponse | PlainMessage<ListinvoicesResponse> | undefined, b: ListinvoicesResponse | PlainMessage<ListinvoicesResponse> | undefined): boolean {
    return proto3.util.equals(ListinvoicesResponse, a, b);
  }
}

/**
 * @generated from message cln.ListinvoicesInvoices
 */
export class ListinvoicesInvoices extends Message<ListinvoicesInvoices> {
  /**
   * @generated from field: string label = 1;
   */
  label = "";

  /**
   * @generated from field: optional string description = 2;
   */
  description?: string;

  /**
   * @generated from field: bytes payment_hash = 3;
   */
  paymentHash = new Uint8Array(0);

  /**
   * @generated from field: cln.ListinvoicesInvoices.ListinvoicesInvoicesStatus status = 4;
   */
  status = ListinvoicesInvoices_ListinvoicesInvoicesStatus.UNPAID;

  /**
   * @generated from field: uint64 expires_at = 5;
   */
  expiresAt = protoInt64.zero;

  /**
   * @generated from field: optional cln.Amount amount_msat = 6;
   */
  amountMsat?: Amount;

  /**
   * @generated from field: optional string bolt11 = 7;
   */
  bolt11?: string;

  /**
   * @generated from field: optional string bolt12 = 8;
   */
  bolt12?: string;

  /**
   * @generated from field: optional bytes local_offer_id = 9;
   */
  localOfferId?: Uint8Array;

  /**
   * @generated from field: optional string invreq_payer_note = 15;
   */
  invreqPayerNote?: string;

  /**
   * @generated from field: optional uint64 pay_index = 11;
   */
  payIndex?: bigint;

  /**
   * @generated from field: optional cln.Amount amount_received_msat = 12;
   */
  amountReceivedMsat?: Amount;

  /**
   * @generated from field: optional uint64 paid_at = 13;
   */
  paidAt?: bigint;

  /**
   * @generated from field: optional bytes payment_preimage = 14;
   */
  paymentPreimage?: Uint8Array;

  constructor(data?: PartialMessage<ListinvoicesInvoices>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.ListinvoicesInvoices";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "label", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "payment_hash", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 4, name: "status", kind: "enum", T: proto3.getEnumType(ListinvoicesInvoices_ListinvoicesInvoicesStatus) },
    { no: 5, name: "expires_at", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 6, name: "amount_msat", kind: "message", T: Amount, opt: true },
    { no: 7, name: "bolt11", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 8, name: "bolt12", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 9, name: "local_offer_id", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 15, name: "invreq_payer_note", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 11, name: "pay_index", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 12, name: "amount_received_msat", kind: "message", T: Amount, opt: true },
    { no: 13, name: "paid_at", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 14, name: "payment_preimage", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListinvoicesInvoices {
    return new ListinvoicesInvoices().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListinvoicesInvoices {
    return new ListinvoicesInvoices().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListinvoicesInvoices {
    return new ListinvoicesInvoices().fromJsonString(jsonString, options);
  }

  static equals(a: ListinvoicesInvoices | PlainMessage<ListinvoicesInvoices> | undefined, b: ListinvoicesInvoices | PlainMessage<ListinvoicesInvoices> | undefined): boolean {
    return proto3.util.equals(ListinvoicesInvoices, a, b);
  }
}

/**
 * ListInvoices.invoices[].status
 *
 * @generated from enum cln.ListinvoicesInvoices.ListinvoicesInvoicesStatus
 */
export enum ListinvoicesInvoices_ListinvoicesInvoicesStatus {
  /**
   * @generated from enum value: UNPAID = 0;
   */
  UNPAID = 0,

  /**
   * @generated from enum value: PAID = 1;
   */
  PAID = 1,

  /**
   * @generated from enum value: EXPIRED = 2;
   */
  EXPIRED = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(ListinvoicesInvoices_ListinvoicesInvoicesStatus)
proto3.util.setEnumType(ListinvoicesInvoices_ListinvoicesInvoicesStatus, "cln.ListinvoicesInvoices.ListinvoicesInvoicesStatus", [
  { no: 0, name: "UNPAID" },
  { no: 1, name: "PAID" },
  { no: 2, name: "EXPIRED" },
]);

/**
 * @generated from message cln.SendonionRequest
 */
export class SendonionRequest extends Message<SendonionRequest> {
  /**
   * @generated from field: bytes onion = 1;
   */
  onion = new Uint8Array(0);

  /**
   * @generated from field: cln.SendonionFirst_hop first_hop = 2;
   */
  firstHop?: SendonionFirst_hop;

  /**
   * @generated from field: bytes payment_hash = 3;
   */
  paymentHash = new Uint8Array(0);

  /**
   * @generated from field: optional string label = 4;
   */
  label?: string;

  /**
   * @generated from field: repeated bytes shared_secrets = 5;
   */
  sharedSecrets: Uint8Array[] = [];

  /**
   * @generated from field: optional uint32 partid = 6;
   */
  partid?: number;

  /**
   * @generated from field: optional string bolt11 = 7;
   */
  bolt11?: string;

  /**
   * @generated from field: optional cln.Amount amount_msat = 12;
   */
  amountMsat?: Amount;

  /**
   * @generated from field: optional bytes destination = 9;
   */
  destination?: Uint8Array;

  /**
   * @generated from field: optional bytes localinvreqid = 13;
   */
  localinvreqid?: Uint8Array;

  /**
   * @generated from field: optional uint64 groupid = 11;
   */
  groupid?: bigint;

  constructor(data?: PartialMessage<SendonionRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.SendonionRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "onion", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 2, name: "first_hop", kind: "message", T: SendonionFirst_hop },
    { no: 3, name: "payment_hash", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 4, name: "label", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 5, name: "shared_secrets", kind: "scalar", T: 12 /* ScalarType.BYTES */, repeated: true },
    { no: 6, name: "partid", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 7, name: "bolt11", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 12, name: "amount_msat", kind: "message", T: Amount, opt: true },
    { no: 9, name: "destination", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 13, name: "localinvreqid", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 11, name: "groupid", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SendonionRequest {
    return new SendonionRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SendonionRequest {
    return new SendonionRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SendonionRequest {
    return new SendonionRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SendonionRequest | PlainMessage<SendonionRequest> | undefined, b: SendonionRequest | PlainMessage<SendonionRequest> | undefined): boolean {
    return proto3.util.equals(SendonionRequest, a, b);
  }
}

/**
 * @generated from message cln.SendonionResponse
 */
export class SendonionResponse extends Message<SendonionResponse> {
  /**
   * @generated from field: uint64 id = 1;
   */
  id = protoInt64.zero;

  /**
   * @generated from field: bytes payment_hash = 2;
   */
  paymentHash = new Uint8Array(0);

  /**
   * @generated from field: cln.SendonionResponse.SendonionStatus status = 3;
   */
  status = SendonionResponse_SendonionStatus.PENDING;

  /**
   * @generated from field: optional cln.Amount amount_msat = 4;
   */
  amountMsat?: Amount;

  /**
   * @generated from field: optional bytes destination = 5;
   */
  destination?: Uint8Array;

  /**
   * @generated from field: uint64 created_at = 6;
   */
  createdAt = protoInt64.zero;

  /**
   * @generated from field: cln.Amount amount_sent_msat = 7;
   */
  amountSentMsat?: Amount;

  /**
   * @generated from field: optional string label = 8;
   */
  label?: string;

  /**
   * @generated from field: optional string bolt11 = 9;
   */
  bolt11?: string;

  /**
   * @generated from field: optional string bolt12 = 10;
   */
  bolt12?: string;

  /**
   * @generated from field: optional uint64 partid = 13;
   */
  partid?: bigint;

  /**
   * @generated from field: optional bytes payment_preimage = 11;
   */
  paymentPreimage?: Uint8Array;

  /**
   * @generated from field: optional string message = 12;
   */
  message?: string;

  constructor(data?: PartialMessage<SendonionResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.SendonionResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "payment_hash", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 3, name: "status", kind: "enum", T: proto3.getEnumType(SendonionResponse_SendonionStatus) },
    { no: 4, name: "amount_msat", kind: "message", T: Amount, opt: true },
    { no: 5, name: "destination", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 6, name: "created_at", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 7, name: "amount_sent_msat", kind: "message", T: Amount },
    { no: 8, name: "label", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 9, name: "bolt11", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 10, name: "bolt12", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 13, name: "partid", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 11, name: "payment_preimage", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 12, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SendonionResponse {
    return new SendonionResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SendonionResponse {
    return new SendonionResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SendonionResponse {
    return new SendonionResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SendonionResponse | PlainMessage<SendonionResponse> | undefined, b: SendonionResponse | PlainMessage<SendonionResponse> | undefined): boolean {
    return proto3.util.equals(SendonionResponse, a, b);
  }
}

/**
 * SendOnion.status
 *
 * @generated from enum cln.SendonionResponse.SendonionStatus
 */
export enum SendonionResponse_SendonionStatus {
  /**
   * @generated from enum value: PENDING = 0;
   */
  PENDING = 0,

  /**
   * @generated from enum value: COMPLETE = 1;
   */
  COMPLETE = 1,
}
// Retrieve enum metadata with: proto3.getEnumType(SendonionResponse_SendonionStatus)
proto3.util.setEnumType(SendonionResponse_SendonionStatus, "cln.SendonionResponse.SendonionStatus", [
  { no: 0, name: "PENDING" },
  { no: 1, name: "COMPLETE" },
]);

/**
 * @generated from message cln.SendonionFirst_hop
 */
export class SendonionFirst_hop extends Message<SendonionFirst_hop> {
  /**
   * @generated from field: bytes id = 1;
   */
  id = new Uint8Array(0);

  /**
   * @generated from field: cln.Amount amount_msat = 2;
   */
  amountMsat?: Amount;

  /**
   * @generated from field: uint32 delay = 3;
   */
  delay = 0;

  constructor(data?: PartialMessage<SendonionFirst_hop>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.SendonionFirst_hop";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 2, name: "amount_msat", kind: "message", T: Amount },
    { no: 3, name: "delay", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SendonionFirst_hop {
    return new SendonionFirst_hop().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SendonionFirst_hop {
    return new SendonionFirst_hop().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SendonionFirst_hop {
    return new SendonionFirst_hop().fromJsonString(jsonString, options);
  }

  static equals(a: SendonionFirst_hop | PlainMessage<SendonionFirst_hop> | undefined, b: SendonionFirst_hop | PlainMessage<SendonionFirst_hop> | undefined): boolean {
    return proto3.util.equals(SendonionFirst_hop, a, b);
  }
}

/**
 * @generated from message cln.ListsendpaysRequest
 */
export class ListsendpaysRequest extends Message<ListsendpaysRequest> {
  /**
   * @generated from field: optional string bolt11 = 1;
   */
  bolt11?: string;

  /**
   * @generated from field: optional bytes payment_hash = 2;
   */
  paymentHash?: Uint8Array;

  /**
   * @generated from field: optional cln.ListsendpaysRequest.ListsendpaysStatus status = 3;
   */
  status?: ListsendpaysRequest_ListsendpaysStatus;

  constructor(data?: PartialMessage<ListsendpaysRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.ListsendpaysRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "bolt11", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "payment_hash", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 3, name: "status", kind: "enum", T: proto3.getEnumType(ListsendpaysRequest_ListsendpaysStatus), opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListsendpaysRequest {
    return new ListsendpaysRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListsendpaysRequest {
    return new ListsendpaysRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListsendpaysRequest {
    return new ListsendpaysRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListsendpaysRequest | PlainMessage<ListsendpaysRequest> | undefined, b: ListsendpaysRequest | PlainMessage<ListsendpaysRequest> | undefined): boolean {
    return proto3.util.equals(ListsendpaysRequest, a, b);
  }
}

/**
 * ListSendPays.status
 *
 * @generated from enum cln.ListsendpaysRequest.ListsendpaysStatus
 */
export enum ListsendpaysRequest_ListsendpaysStatus {
  /**
   * @generated from enum value: PENDING = 0;
   */
  PENDING = 0,

  /**
   * @generated from enum value: COMPLETE = 1;
   */
  COMPLETE = 1,

  /**
   * @generated from enum value: FAILED = 2;
   */
  FAILED = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(ListsendpaysRequest_ListsendpaysStatus)
proto3.util.setEnumType(ListsendpaysRequest_ListsendpaysStatus, "cln.ListsendpaysRequest.ListsendpaysStatus", [
  { no: 0, name: "PENDING" },
  { no: 1, name: "COMPLETE" },
  { no: 2, name: "FAILED" },
]);

/**
 * @generated from message cln.ListsendpaysResponse
 */
export class ListsendpaysResponse extends Message<ListsendpaysResponse> {
  /**
   * @generated from field: repeated cln.ListsendpaysPayments payments = 1;
   */
  payments: ListsendpaysPayments[] = [];

  constructor(data?: PartialMessage<ListsendpaysResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.ListsendpaysResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "payments", kind: "message", T: ListsendpaysPayments, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListsendpaysResponse {
    return new ListsendpaysResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListsendpaysResponse {
    return new ListsendpaysResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListsendpaysResponse {
    return new ListsendpaysResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListsendpaysResponse | PlainMessage<ListsendpaysResponse> | undefined, b: ListsendpaysResponse | PlainMessage<ListsendpaysResponse> | undefined): boolean {
    return proto3.util.equals(ListsendpaysResponse, a, b);
  }
}

/**
 * @generated from message cln.ListsendpaysPayments
 */
export class ListsendpaysPayments extends Message<ListsendpaysPayments> {
  /**
   * @generated from field: uint64 id = 1;
   */
  id = protoInt64.zero;

  /**
   * @generated from field: uint64 groupid = 2;
   */
  groupid = protoInt64.zero;

  /**
   * @generated from field: optional uint64 partid = 15;
   */
  partid?: bigint;

  /**
   * @generated from field: bytes payment_hash = 3;
   */
  paymentHash = new Uint8Array(0);

  /**
   * @generated from field: cln.ListsendpaysPayments.ListsendpaysPaymentsStatus status = 4;
   */
  status = ListsendpaysPayments_ListsendpaysPaymentsStatus.PENDING;

  /**
   * @generated from field: optional cln.Amount amount_msat = 5;
   */
  amountMsat?: Amount;

  /**
   * @generated from field: optional bytes destination = 6;
   */
  destination?: Uint8Array;

  /**
   * @generated from field: uint64 created_at = 7;
   */
  createdAt = protoInt64.zero;

  /**
   * @generated from field: cln.Amount amount_sent_msat = 8;
   */
  amountSentMsat?: Amount;

  /**
   * @generated from field: optional string label = 9;
   */
  label?: string;

  /**
   * @generated from field: optional string bolt11 = 10;
   */
  bolt11?: string;

  /**
   * @generated from field: optional string description = 14;
   */
  description?: string;

  /**
   * @generated from field: optional string bolt12 = 11;
   */
  bolt12?: string;

  /**
   * @generated from field: optional bytes payment_preimage = 12;
   */
  paymentPreimage?: Uint8Array;

  /**
   * @generated from field: optional bytes erroronion = 13;
   */
  erroronion?: Uint8Array;

  constructor(data?: PartialMessage<ListsendpaysPayments>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.ListsendpaysPayments";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "groupid", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 15, name: "partid", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 3, name: "payment_hash", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 4, name: "status", kind: "enum", T: proto3.getEnumType(ListsendpaysPayments_ListsendpaysPaymentsStatus) },
    { no: 5, name: "amount_msat", kind: "message", T: Amount, opt: true },
    { no: 6, name: "destination", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 7, name: "created_at", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 8, name: "amount_sent_msat", kind: "message", T: Amount },
    { no: 9, name: "label", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 10, name: "bolt11", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 14, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 11, name: "bolt12", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 12, name: "payment_preimage", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 13, name: "erroronion", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListsendpaysPayments {
    return new ListsendpaysPayments().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListsendpaysPayments {
    return new ListsendpaysPayments().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListsendpaysPayments {
    return new ListsendpaysPayments().fromJsonString(jsonString, options);
  }

  static equals(a: ListsendpaysPayments | PlainMessage<ListsendpaysPayments> | undefined, b: ListsendpaysPayments | PlainMessage<ListsendpaysPayments> | undefined): boolean {
    return proto3.util.equals(ListsendpaysPayments, a, b);
  }
}

/**
 * ListSendPays.payments[].status
 *
 * @generated from enum cln.ListsendpaysPayments.ListsendpaysPaymentsStatus
 */
export enum ListsendpaysPayments_ListsendpaysPaymentsStatus {
  /**
   * @generated from enum value: PENDING = 0;
   */
  PENDING = 0,

  /**
   * @generated from enum value: FAILED = 1;
   */
  FAILED = 1,

  /**
   * @generated from enum value: COMPLETE = 2;
   */
  COMPLETE = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(ListsendpaysPayments_ListsendpaysPaymentsStatus)
proto3.util.setEnumType(ListsendpaysPayments_ListsendpaysPaymentsStatus, "cln.ListsendpaysPayments.ListsendpaysPaymentsStatus", [
  { no: 0, name: "PENDING" },
  { no: 1, name: "FAILED" },
  { no: 2, name: "COMPLETE" },
]);

/**
 * @generated from message cln.ListtransactionsRequest
 */
export class ListtransactionsRequest extends Message<ListtransactionsRequest> {
  constructor(data?: PartialMessage<ListtransactionsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.ListtransactionsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListtransactionsRequest {
    return new ListtransactionsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListtransactionsRequest {
    return new ListtransactionsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListtransactionsRequest {
    return new ListtransactionsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListtransactionsRequest | PlainMessage<ListtransactionsRequest> | undefined, b: ListtransactionsRequest | PlainMessage<ListtransactionsRequest> | undefined): boolean {
    return proto3.util.equals(ListtransactionsRequest, a, b);
  }
}

/**
 * @generated from message cln.ListtransactionsResponse
 */
export class ListtransactionsResponse extends Message<ListtransactionsResponse> {
  /**
   * @generated from field: repeated cln.ListtransactionsTransactions transactions = 1;
   */
  transactions: ListtransactionsTransactions[] = [];

  constructor(data?: PartialMessage<ListtransactionsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.ListtransactionsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "transactions", kind: "message", T: ListtransactionsTransactions, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListtransactionsResponse {
    return new ListtransactionsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListtransactionsResponse {
    return new ListtransactionsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListtransactionsResponse {
    return new ListtransactionsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListtransactionsResponse | PlainMessage<ListtransactionsResponse> | undefined, b: ListtransactionsResponse | PlainMessage<ListtransactionsResponse> | undefined): boolean {
    return proto3.util.equals(ListtransactionsResponse, a, b);
  }
}

/**
 * @generated from message cln.ListtransactionsTransactions
 */
export class ListtransactionsTransactions extends Message<ListtransactionsTransactions> {
  /**
   * @generated from field: bytes hash = 1;
   */
  hash = new Uint8Array(0);

  /**
   * @generated from field: bytes rawtx = 2;
   */
  rawtx = new Uint8Array(0);

  /**
   * @generated from field: uint32 blockheight = 3;
   */
  blockheight = 0;

  /**
   * @generated from field: uint32 txindex = 4;
   */
  txindex = 0;

  /**
   * @generated from field: uint32 locktime = 7;
   */
  locktime = 0;

  /**
   * @generated from field: uint32 version = 8;
   */
  version = 0;

  /**
   * @generated from field: repeated cln.ListtransactionsTransactionsInputs inputs = 9;
   */
  inputs: ListtransactionsTransactionsInputs[] = [];

  /**
   * @generated from field: repeated cln.ListtransactionsTransactionsOutputs outputs = 10;
   */
  outputs: ListtransactionsTransactionsOutputs[] = [];

  constructor(data?: PartialMessage<ListtransactionsTransactions>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.ListtransactionsTransactions";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "hash", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 2, name: "rawtx", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 3, name: "blockheight", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 4, name: "txindex", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 7, name: "locktime", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 8, name: "version", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 9, name: "inputs", kind: "message", T: ListtransactionsTransactionsInputs, repeated: true },
    { no: 10, name: "outputs", kind: "message", T: ListtransactionsTransactionsOutputs, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListtransactionsTransactions {
    return new ListtransactionsTransactions().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListtransactionsTransactions {
    return new ListtransactionsTransactions().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListtransactionsTransactions {
    return new ListtransactionsTransactions().fromJsonString(jsonString, options);
  }

  static equals(a: ListtransactionsTransactions | PlainMessage<ListtransactionsTransactions> | undefined, b: ListtransactionsTransactions | PlainMessage<ListtransactionsTransactions> | undefined): boolean {
    return proto3.util.equals(ListtransactionsTransactions, a, b);
  }
}

/**
 * @generated from message cln.ListtransactionsTransactionsInputs
 */
export class ListtransactionsTransactionsInputs extends Message<ListtransactionsTransactionsInputs> {
  /**
   * @generated from field: bytes txid = 1;
   */
  txid = new Uint8Array(0);

  /**
   * @generated from field: uint32 index = 2;
   */
  index = 0;

  /**
   * @generated from field: uint32 sequence = 3;
   */
  sequence = 0;

  constructor(data?: PartialMessage<ListtransactionsTransactionsInputs>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.ListtransactionsTransactionsInputs";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "txid", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 2, name: "index", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 3, name: "sequence", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListtransactionsTransactionsInputs {
    return new ListtransactionsTransactionsInputs().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListtransactionsTransactionsInputs {
    return new ListtransactionsTransactionsInputs().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListtransactionsTransactionsInputs {
    return new ListtransactionsTransactionsInputs().fromJsonString(jsonString, options);
  }

  static equals(a: ListtransactionsTransactionsInputs | PlainMessage<ListtransactionsTransactionsInputs> | undefined, b: ListtransactionsTransactionsInputs | PlainMessage<ListtransactionsTransactionsInputs> | undefined): boolean {
    return proto3.util.equals(ListtransactionsTransactionsInputs, a, b);
  }
}

/**
 * @generated from message cln.ListtransactionsTransactionsOutputs
 */
export class ListtransactionsTransactionsOutputs extends Message<ListtransactionsTransactionsOutputs> {
  /**
   * @generated from field: uint32 index = 1;
   */
  index = 0;

  /**
   * @generated from field: cln.Amount amount_msat = 6;
   */
  amountMsat?: Amount;

  /**
   * @generated from field: bytes scriptPubKey = 3;
   */
  scriptPubKey = new Uint8Array(0);

  constructor(data?: PartialMessage<ListtransactionsTransactionsOutputs>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.ListtransactionsTransactionsOutputs";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "index", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 6, name: "amount_msat", kind: "message", T: Amount },
    { no: 3, name: "scriptPubKey", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListtransactionsTransactionsOutputs {
    return new ListtransactionsTransactionsOutputs().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListtransactionsTransactionsOutputs {
    return new ListtransactionsTransactionsOutputs().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListtransactionsTransactionsOutputs {
    return new ListtransactionsTransactionsOutputs().fromJsonString(jsonString, options);
  }

  static equals(a: ListtransactionsTransactionsOutputs | PlainMessage<ListtransactionsTransactionsOutputs> | undefined, b: ListtransactionsTransactionsOutputs | PlainMessage<ListtransactionsTransactionsOutputs> | undefined): boolean {
    return proto3.util.equals(ListtransactionsTransactionsOutputs, a, b);
  }
}

/**
 * @generated from message cln.PayRequest
 */
export class PayRequest extends Message<PayRequest> {
  /**
   * @generated from field: string bolt11 = 1;
   */
  bolt11 = "";

  /**
   * @generated from field: optional cln.Amount amount_msat = 13;
   */
  amountMsat?: Amount;

  /**
   * @generated from field: optional string label = 3;
   */
  label?: string;

  /**
   * @generated from field: optional double riskfactor = 8;
   */
  riskfactor?: number;

  /**
   * @generated from field: optional double maxfeepercent = 4;
   */
  maxfeepercent?: number;

  /**
   * @generated from field: optional uint32 retry_for = 5;
   */
  retryFor?: number;

  /**
   * @generated from field: optional uint32 maxdelay = 6;
   */
  maxdelay?: number;

  /**
   * @generated from field: optional cln.Amount exemptfee = 7;
   */
  exemptfee?: Amount;

  /**
   * @generated from field: optional bytes localinvreqid = 14;
   */
  localinvreqid?: Uint8Array;

  /**
   * @generated from field: repeated string exclude = 10;
   */
  exclude: string[] = [];

  /**
   * @generated from field: optional cln.Amount maxfee = 11;
   */
  maxfee?: Amount;

  /**
   * @generated from field: optional string description = 12;
   */
  description?: string;

  constructor(data?: PartialMessage<PayRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.PayRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "bolt11", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "amount_msat", kind: "message", T: Amount, opt: true },
    { no: 3, name: "label", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 8, name: "riskfactor", kind: "scalar", T: 1 /* ScalarType.DOUBLE */, opt: true },
    { no: 4, name: "maxfeepercent", kind: "scalar", T: 1 /* ScalarType.DOUBLE */, opt: true },
    { no: 5, name: "retry_for", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 6, name: "maxdelay", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 7, name: "exemptfee", kind: "message", T: Amount, opt: true },
    { no: 14, name: "localinvreqid", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 10, name: "exclude", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 11, name: "maxfee", kind: "message", T: Amount, opt: true },
    { no: 12, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PayRequest {
    return new PayRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PayRequest {
    return new PayRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PayRequest {
    return new PayRequest().fromJsonString(jsonString, options);
  }

  static equals(a: PayRequest | PlainMessage<PayRequest> | undefined, b: PayRequest | PlainMessage<PayRequest> | undefined): boolean {
    return proto3.util.equals(PayRequest, a, b);
  }
}

/**
 * @generated from message cln.PayResponse
 */
export class PayResponse extends Message<PayResponse> {
  /**
   * @generated from field: bytes payment_preimage = 1;
   */
  paymentPreimage = new Uint8Array(0);

  /**
   * @generated from field: optional bytes destination = 2;
   */
  destination?: Uint8Array;

  /**
   * @generated from field: bytes payment_hash = 3;
   */
  paymentHash = new Uint8Array(0);

  /**
   * @generated from field: double created_at = 4;
   */
  createdAt = 0;

  /**
   * @generated from field: uint32 parts = 5;
   */
  parts = 0;

  /**
   * @generated from field: cln.Amount amount_msat = 6;
   */
  amountMsat?: Amount;

  /**
   * @generated from field: cln.Amount amount_sent_msat = 7;
   */
  amountSentMsat?: Amount;

  /**
   * @generated from field: optional string warning_partial_completion = 8;
   */
  warningPartialCompletion?: string;

  /**
   * @generated from field: cln.PayResponse.PayStatus status = 9;
   */
  status = PayResponse_PayStatus.COMPLETE;

  constructor(data?: PartialMessage<PayResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.PayResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "payment_preimage", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 2, name: "destination", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 3, name: "payment_hash", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 4, name: "created_at", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 5, name: "parts", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 6, name: "amount_msat", kind: "message", T: Amount },
    { no: 7, name: "amount_sent_msat", kind: "message", T: Amount },
    { no: 8, name: "warning_partial_completion", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 9, name: "status", kind: "enum", T: proto3.getEnumType(PayResponse_PayStatus) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PayResponse {
    return new PayResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PayResponse {
    return new PayResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PayResponse {
    return new PayResponse().fromJsonString(jsonString, options);
  }

  static equals(a: PayResponse | PlainMessage<PayResponse> | undefined, b: PayResponse | PlainMessage<PayResponse> | undefined): boolean {
    return proto3.util.equals(PayResponse, a, b);
  }
}

/**
 * Pay.status
 *
 * @generated from enum cln.PayResponse.PayStatus
 */
export enum PayResponse_PayStatus {
  /**
   * @generated from enum value: COMPLETE = 0;
   */
  COMPLETE = 0,

  /**
   * @generated from enum value: PENDING = 1;
   */
  PENDING = 1,

  /**
   * @generated from enum value: FAILED = 2;
   */
  FAILED = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(PayResponse_PayStatus)
proto3.util.setEnumType(PayResponse_PayStatus, "cln.PayResponse.PayStatus", [
  { no: 0, name: "COMPLETE" },
  { no: 1, name: "PENDING" },
  { no: 2, name: "FAILED" },
]);

/**
 * @generated from message cln.ListnodesRequest
 */
export class ListnodesRequest extends Message<ListnodesRequest> {
  /**
   * @generated from field: optional bytes id = 1;
   */
  id?: Uint8Array;

  constructor(data?: PartialMessage<ListnodesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.ListnodesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListnodesRequest {
    return new ListnodesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListnodesRequest {
    return new ListnodesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListnodesRequest {
    return new ListnodesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListnodesRequest | PlainMessage<ListnodesRequest> | undefined, b: ListnodesRequest | PlainMessage<ListnodesRequest> | undefined): boolean {
    return proto3.util.equals(ListnodesRequest, a, b);
  }
}

/**
 * @generated from message cln.ListnodesResponse
 */
export class ListnodesResponse extends Message<ListnodesResponse> {
  /**
   * @generated from field: repeated cln.ListnodesNodes nodes = 1;
   */
  nodes: ListnodesNodes[] = [];

  constructor(data?: PartialMessage<ListnodesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.ListnodesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "nodes", kind: "message", T: ListnodesNodes, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListnodesResponse {
    return new ListnodesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListnodesResponse {
    return new ListnodesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListnodesResponse {
    return new ListnodesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListnodesResponse | PlainMessage<ListnodesResponse> | undefined, b: ListnodesResponse | PlainMessage<ListnodesResponse> | undefined): boolean {
    return proto3.util.equals(ListnodesResponse, a, b);
  }
}

/**
 * @generated from message cln.ListnodesNodes
 */
export class ListnodesNodes extends Message<ListnodesNodes> {
  /**
   * @generated from field: bytes nodeid = 1;
   */
  nodeid = new Uint8Array(0);

  /**
   * @generated from field: optional uint32 last_timestamp = 2;
   */
  lastTimestamp?: number;

  /**
   * @generated from field: optional string alias = 3;
   */
  alias?: string;

  /**
   * @generated from field: optional bytes color = 4;
   */
  color?: Uint8Array;

  /**
   * @generated from field: optional bytes features = 5;
   */
  features?: Uint8Array;

  /**
   * @generated from field: repeated cln.ListnodesNodesAddresses addresses = 6;
   */
  addresses: ListnodesNodesAddresses[] = [];

  constructor(data?: PartialMessage<ListnodesNodes>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.ListnodesNodes";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "nodeid", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 2, name: "last_timestamp", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 3, name: "alias", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "color", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 5, name: "features", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 6, name: "addresses", kind: "message", T: ListnodesNodesAddresses, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListnodesNodes {
    return new ListnodesNodes().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListnodesNodes {
    return new ListnodesNodes().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListnodesNodes {
    return new ListnodesNodes().fromJsonString(jsonString, options);
  }

  static equals(a: ListnodesNodes | PlainMessage<ListnodesNodes> | undefined, b: ListnodesNodes | PlainMessage<ListnodesNodes> | undefined): boolean {
    return proto3.util.equals(ListnodesNodes, a, b);
  }
}

/**
 * @generated from message cln.ListnodesNodesAddresses
 */
export class ListnodesNodesAddresses extends Message<ListnodesNodesAddresses> {
  /**
   * @generated from field: cln.ListnodesNodesAddresses.ListnodesNodesAddressesType item_type = 1;
   */
  itemType = ListnodesNodesAddresses_ListnodesNodesAddressesType.DNS;

  /**
   * @generated from field: uint32 port = 2;
   */
  port = 0;

  /**
   * @generated from field: optional string address = 3;
   */
  address?: string;

  constructor(data?: PartialMessage<ListnodesNodesAddresses>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.ListnodesNodesAddresses";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "item_type", kind: "enum", T: proto3.getEnumType(ListnodesNodesAddresses_ListnodesNodesAddressesType) },
    { no: 2, name: "port", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 3, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListnodesNodesAddresses {
    return new ListnodesNodesAddresses().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListnodesNodesAddresses {
    return new ListnodesNodesAddresses().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListnodesNodesAddresses {
    return new ListnodesNodesAddresses().fromJsonString(jsonString, options);
  }

  static equals(a: ListnodesNodesAddresses | PlainMessage<ListnodesNodesAddresses> | undefined, b: ListnodesNodesAddresses | PlainMessage<ListnodesNodesAddresses> | undefined): boolean {
    return proto3.util.equals(ListnodesNodesAddresses, a, b);
  }
}

/**
 * ListNodes.nodes[].addresses[].type
 *
 * @generated from enum cln.ListnodesNodesAddresses.ListnodesNodesAddressesType
 */
export enum ListnodesNodesAddresses_ListnodesNodesAddressesType {
  /**
   * @generated from enum value: DNS = 0;
   */
  DNS = 0,

  /**
   * @generated from enum value: IPV4 = 1;
   */
  IPV4 = 1,

  /**
   * @generated from enum value: IPV6 = 2;
   */
  IPV6 = 2,

  /**
   * @generated from enum value: TORV2 = 3;
   */
  TORV2 = 3,

  /**
   * @generated from enum value: TORV3 = 4;
   */
  TORV3 = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(ListnodesNodesAddresses_ListnodesNodesAddressesType)
proto3.util.setEnumType(ListnodesNodesAddresses_ListnodesNodesAddressesType, "cln.ListnodesNodesAddresses.ListnodesNodesAddressesType", [
  { no: 0, name: "DNS" },
  { no: 1, name: "IPV4" },
  { no: 2, name: "IPV6" },
  { no: 3, name: "TORV2" },
  { no: 4, name: "TORV3" },
]);

/**
 * @generated from message cln.WaitanyinvoiceRequest
 */
export class WaitanyinvoiceRequest extends Message<WaitanyinvoiceRequest> {
  /**
   * @generated from field: optional uint64 lastpay_index = 1;
   */
  lastpayIndex?: bigint;

  /**
   * @generated from field: optional uint64 timeout = 2;
   */
  timeout?: bigint;

  constructor(data?: PartialMessage<WaitanyinvoiceRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.WaitanyinvoiceRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "lastpay_index", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 2, name: "timeout", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WaitanyinvoiceRequest {
    return new WaitanyinvoiceRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WaitanyinvoiceRequest {
    return new WaitanyinvoiceRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WaitanyinvoiceRequest {
    return new WaitanyinvoiceRequest().fromJsonString(jsonString, options);
  }

  static equals(a: WaitanyinvoiceRequest | PlainMessage<WaitanyinvoiceRequest> | undefined, b: WaitanyinvoiceRequest | PlainMessage<WaitanyinvoiceRequest> | undefined): boolean {
    return proto3.util.equals(WaitanyinvoiceRequest, a, b);
  }
}

/**
 * @generated from message cln.WaitanyinvoiceResponse
 */
export class WaitanyinvoiceResponse extends Message<WaitanyinvoiceResponse> {
  /**
   * @generated from field: string label = 1;
   */
  label = "";

  /**
   * @generated from field: string description = 2;
   */
  description = "";

  /**
   * @generated from field: bytes payment_hash = 3;
   */
  paymentHash = new Uint8Array(0);

  /**
   * @generated from field: cln.WaitanyinvoiceResponse.WaitanyinvoiceStatus status = 4;
   */
  status = WaitanyinvoiceResponse_WaitanyinvoiceStatus.PAID;

  /**
   * @generated from field: uint64 expires_at = 5;
   */
  expiresAt = protoInt64.zero;

  /**
   * @generated from field: optional cln.Amount amount_msat = 6;
   */
  amountMsat?: Amount;

  /**
   * @generated from field: optional string bolt11 = 7;
   */
  bolt11?: string;

  /**
   * @generated from field: optional string bolt12 = 8;
   */
  bolt12?: string;

  /**
   * @generated from field: optional uint64 pay_index = 9;
   */
  payIndex?: bigint;

  /**
   * @generated from field: optional cln.Amount amount_received_msat = 10;
   */
  amountReceivedMsat?: Amount;

  /**
   * @generated from field: optional uint64 paid_at = 11;
   */
  paidAt?: bigint;

  /**
   * @generated from field: optional bytes payment_preimage = 12;
   */
  paymentPreimage?: Uint8Array;

  constructor(data?: PartialMessage<WaitanyinvoiceResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.WaitanyinvoiceResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "label", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "payment_hash", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 4, name: "status", kind: "enum", T: proto3.getEnumType(WaitanyinvoiceResponse_WaitanyinvoiceStatus) },
    { no: 5, name: "expires_at", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 6, name: "amount_msat", kind: "message", T: Amount, opt: true },
    { no: 7, name: "bolt11", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 8, name: "bolt12", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 9, name: "pay_index", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 10, name: "amount_received_msat", kind: "message", T: Amount, opt: true },
    { no: 11, name: "paid_at", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 12, name: "payment_preimage", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WaitanyinvoiceResponse {
    return new WaitanyinvoiceResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WaitanyinvoiceResponse {
    return new WaitanyinvoiceResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WaitanyinvoiceResponse {
    return new WaitanyinvoiceResponse().fromJsonString(jsonString, options);
  }

  static equals(a: WaitanyinvoiceResponse | PlainMessage<WaitanyinvoiceResponse> | undefined, b: WaitanyinvoiceResponse | PlainMessage<WaitanyinvoiceResponse> | undefined): boolean {
    return proto3.util.equals(WaitanyinvoiceResponse, a, b);
  }
}

/**
 * WaitAnyInvoice.status
 *
 * @generated from enum cln.WaitanyinvoiceResponse.WaitanyinvoiceStatus
 */
export enum WaitanyinvoiceResponse_WaitanyinvoiceStatus {
  /**
   * @generated from enum value: PAID = 0;
   */
  PAID = 0,

  /**
   * @generated from enum value: EXPIRED = 1;
   */
  EXPIRED = 1,
}
// Retrieve enum metadata with: proto3.getEnumType(WaitanyinvoiceResponse_WaitanyinvoiceStatus)
proto3.util.setEnumType(WaitanyinvoiceResponse_WaitanyinvoiceStatus, "cln.WaitanyinvoiceResponse.WaitanyinvoiceStatus", [
  { no: 0, name: "PAID" },
  { no: 1, name: "EXPIRED" },
]);

/**
 * @generated from message cln.WaitinvoiceRequest
 */
export class WaitinvoiceRequest extends Message<WaitinvoiceRequest> {
  /**
   * @generated from field: string label = 1;
   */
  label = "";

  constructor(data?: PartialMessage<WaitinvoiceRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.WaitinvoiceRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "label", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WaitinvoiceRequest {
    return new WaitinvoiceRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WaitinvoiceRequest {
    return new WaitinvoiceRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WaitinvoiceRequest {
    return new WaitinvoiceRequest().fromJsonString(jsonString, options);
  }

  static equals(a: WaitinvoiceRequest | PlainMessage<WaitinvoiceRequest> | undefined, b: WaitinvoiceRequest | PlainMessage<WaitinvoiceRequest> | undefined): boolean {
    return proto3.util.equals(WaitinvoiceRequest, a, b);
  }
}

/**
 * @generated from message cln.WaitinvoiceResponse
 */
export class WaitinvoiceResponse extends Message<WaitinvoiceResponse> {
  /**
   * @generated from field: string label = 1;
   */
  label = "";

  /**
   * @generated from field: string description = 2;
   */
  description = "";

  /**
   * @generated from field: bytes payment_hash = 3;
   */
  paymentHash = new Uint8Array(0);

  /**
   * @generated from field: cln.WaitinvoiceResponse.WaitinvoiceStatus status = 4;
   */
  status = WaitinvoiceResponse_WaitinvoiceStatus.PAID;

  /**
   * @generated from field: uint64 expires_at = 5;
   */
  expiresAt = protoInt64.zero;

  /**
   * @generated from field: optional cln.Amount amount_msat = 6;
   */
  amountMsat?: Amount;

  /**
   * @generated from field: optional string bolt11 = 7;
   */
  bolt11?: string;

  /**
   * @generated from field: optional string bolt12 = 8;
   */
  bolt12?: string;

  /**
   * @generated from field: optional uint64 pay_index = 9;
   */
  payIndex?: bigint;

  /**
   * @generated from field: optional cln.Amount amount_received_msat = 10;
   */
  amountReceivedMsat?: Amount;

  /**
   * @generated from field: optional uint64 paid_at = 11;
   */
  paidAt?: bigint;

  /**
   * @generated from field: optional bytes payment_preimage = 12;
   */
  paymentPreimage?: Uint8Array;

  constructor(data?: PartialMessage<WaitinvoiceResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.WaitinvoiceResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "label", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "payment_hash", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 4, name: "status", kind: "enum", T: proto3.getEnumType(WaitinvoiceResponse_WaitinvoiceStatus) },
    { no: 5, name: "expires_at", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 6, name: "amount_msat", kind: "message", T: Amount, opt: true },
    { no: 7, name: "bolt11", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 8, name: "bolt12", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 9, name: "pay_index", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 10, name: "amount_received_msat", kind: "message", T: Amount, opt: true },
    { no: 11, name: "paid_at", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 12, name: "payment_preimage", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WaitinvoiceResponse {
    return new WaitinvoiceResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WaitinvoiceResponse {
    return new WaitinvoiceResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WaitinvoiceResponse {
    return new WaitinvoiceResponse().fromJsonString(jsonString, options);
  }

  static equals(a: WaitinvoiceResponse | PlainMessage<WaitinvoiceResponse> | undefined, b: WaitinvoiceResponse | PlainMessage<WaitinvoiceResponse> | undefined): boolean {
    return proto3.util.equals(WaitinvoiceResponse, a, b);
  }
}

/**
 * WaitInvoice.status
 *
 * @generated from enum cln.WaitinvoiceResponse.WaitinvoiceStatus
 */
export enum WaitinvoiceResponse_WaitinvoiceStatus {
  /**
   * @generated from enum value: PAID = 0;
   */
  PAID = 0,

  /**
   * @generated from enum value: EXPIRED = 1;
   */
  EXPIRED = 1,
}
// Retrieve enum metadata with: proto3.getEnumType(WaitinvoiceResponse_WaitinvoiceStatus)
proto3.util.setEnumType(WaitinvoiceResponse_WaitinvoiceStatus, "cln.WaitinvoiceResponse.WaitinvoiceStatus", [
  { no: 0, name: "PAID" },
  { no: 1, name: "EXPIRED" },
]);

/**
 * @generated from message cln.WaitsendpayRequest
 */
export class WaitsendpayRequest extends Message<WaitsendpayRequest> {
  /**
   * @generated from field: bytes payment_hash = 1;
   */
  paymentHash = new Uint8Array(0);

  /**
   * @generated from field: optional uint32 timeout = 3;
   */
  timeout?: number;

  /**
   * @generated from field: optional uint64 partid = 2;
   */
  partid?: bigint;

  /**
   * @generated from field: optional uint64 groupid = 4;
   */
  groupid?: bigint;

  constructor(data?: PartialMessage<WaitsendpayRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.WaitsendpayRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "payment_hash", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 3, name: "timeout", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 2, name: "partid", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 4, name: "groupid", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WaitsendpayRequest {
    return new WaitsendpayRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WaitsendpayRequest {
    return new WaitsendpayRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WaitsendpayRequest {
    return new WaitsendpayRequest().fromJsonString(jsonString, options);
  }

  static equals(a: WaitsendpayRequest | PlainMessage<WaitsendpayRequest> | undefined, b: WaitsendpayRequest | PlainMessage<WaitsendpayRequest> | undefined): boolean {
    return proto3.util.equals(WaitsendpayRequest, a, b);
  }
}

/**
 * @generated from message cln.WaitsendpayResponse
 */
export class WaitsendpayResponse extends Message<WaitsendpayResponse> {
  /**
   * @generated from field: uint64 id = 1;
   */
  id = protoInt64.zero;

  /**
   * @generated from field: optional uint64 groupid = 2;
   */
  groupid?: bigint;

  /**
   * @generated from field: bytes payment_hash = 3;
   */
  paymentHash = new Uint8Array(0);

  /**
   * @generated from field: cln.WaitsendpayResponse.WaitsendpayStatus status = 4;
   */
  status = WaitsendpayResponse_WaitsendpayStatus.COMPLETE;

  /**
   * @generated from field: optional cln.Amount amount_msat = 5;
   */
  amountMsat?: Amount;

  /**
   * @generated from field: optional bytes destination = 6;
   */
  destination?: Uint8Array;

  /**
   * @generated from field: uint64 created_at = 7;
   */
  createdAt = protoInt64.zero;

  /**
   * @generated from field: optional double completed_at = 14;
   */
  completedAt?: number;

  /**
   * @generated from field: cln.Amount amount_sent_msat = 8;
   */
  amountSentMsat?: Amount;

  /**
   * @generated from field: optional string label = 9;
   */
  label?: string;

  /**
   * @generated from field: optional uint64 partid = 10;
   */
  partid?: bigint;

  /**
   * @generated from field: optional string bolt11 = 11;
   */
  bolt11?: string;

  /**
   * @generated from field: optional string bolt12 = 12;
   */
  bolt12?: string;

  /**
   * @generated from field: optional bytes payment_preimage = 13;
   */
  paymentPreimage?: Uint8Array;

  constructor(data?: PartialMessage<WaitsendpayResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.WaitsendpayResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "groupid", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 3, name: "payment_hash", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 4, name: "status", kind: "enum", T: proto3.getEnumType(WaitsendpayResponse_WaitsendpayStatus) },
    { no: 5, name: "amount_msat", kind: "message", T: Amount, opt: true },
    { no: 6, name: "destination", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 7, name: "created_at", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "completed_at", kind: "scalar", T: 1 /* ScalarType.DOUBLE */, opt: true },
    { no: 8, name: "amount_sent_msat", kind: "message", T: Amount },
    { no: 9, name: "label", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 10, name: "partid", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 11, name: "bolt11", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 12, name: "bolt12", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 13, name: "payment_preimage", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WaitsendpayResponse {
    return new WaitsendpayResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WaitsendpayResponse {
    return new WaitsendpayResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WaitsendpayResponse {
    return new WaitsendpayResponse().fromJsonString(jsonString, options);
  }

  static equals(a: WaitsendpayResponse | PlainMessage<WaitsendpayResponse> | undefined, b: WaitsendpayResponse | PlainMessage<WaitsendpayResponse> | undefined): boolean {
    return proto3.util.equals(WaitsendpayResponse, a, b);
  }
}

/**
 * WaitSendPay.status
 *
 * @generated from enum cln.WaitsendpayResponse.WaitsendpayStatus
 */
export enum WaitsendpayResponse_WaitsendpayStatus {
  /**
   * @generated from enum value: COMPLETE = 0;
   */
  COMPLETE = 0,
}
// Retrieve enum metadata with: proto3.getEnumType(WaitsendpayResponse_WaitsendpayStatus)
proto3.util.setEnumType(WaitsendpayResponse_WaitsendpayStatus, "cln.WaitsendpayResponse.WaitsendpayStatus", [
  { no: 0, name: "COMPLETE" },
]);

/**
 * @generated from message cln.NewaddrRequest
 */
export class NewaddrRequest extends Message<NewaddrRequest> {
  /**
   * @generated from field: optional cln.NewaddrRequest.NewaddrAddresstype addresstype = 1;
   */
  addresstype?: NewaddrRequest_NewaddrAddresstype;

  constructor(data?: PartialMessage<NewaddrRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.NewaddrRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "addresstype", kind: "enum", T: proto3.getEnumType(NewaddrRequest_NewaddrAddresstype), opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NewaddrRequest {
    return new NewaddrRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NewaddrRequest {
    return new NewaddrRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NewaddrRequest {
    return new NewaddrRequest().fromJsonString(jsonString, options);
  }

  static equals(a: NewaddrRequest | PlainMessage<NewaddrRequest> | undefined, b: NewaddrRequest | PlainMessage<NewaddrRequest> | undefined): boolean {
    return proto3.util.equals(NewaddrRequest, a, b);
  }
}

/**
 * NewAddr.addresstype
 *
 * @generated from enum cln.NewaddrRequest.NewaddrAddresstype
 */
export enum NewaddrRequest_NewaddrAddresstype {
  /**
   * @generated from enum value: BECH32 = 0;
   */
  BECH32 = 0,

  /**
   * @generated from enum value: P2TR = 3;
   */
  P2TR = 3,

  /**
   * @generated from enum value: ALL = 2;
   */
  ALL = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(NewaddrRequest_NewaddrAddresstype)
proto3.util.setEnumType(NewaddrRequest_NewaddrAddresstype, "cln.NewaddrRequest.NewaddrAddresstype", [
  { no: 0, name: "BECH32" },
  { no: 3, name: "P2TR" },
  { no: 2, name: "ALL" },
]);

/**
 * @generated from message cln.NewaddrResponse
 */
export class NewaddrResponse extends Message<NewaddrResponse> {
  /**
   * @generated from field: optional string p2tr = 3;
   */
  p2tr?: string;

  /**
   * @generated from field: optional string bech32 = 1;
   */
  bech32?: string;

  /**
   * @generated from field: optional string p2sh_segwit = 2;
   */
  p2shSegwit?: string;

  constructor(data?: PartialMessage<NewaddrResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.NewaddrResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 3, name: "p2tr", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 1, name: "bech32", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "p2sh_segwit", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NewaddrResponse {
    return new NewaddrResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NewaddrResponse {
    return new NewaddrResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NewaddrResponse {
    return new NewaddrResponse().fromJsonString(jsonString, options);
  }

  static equals(a: NewaddrResponse | PlainMessage<NewaddrResponse> | undefined, b: NewaddrResponse | PlainMessage<NewaddrResponse> | undefined): boolean {
    return proto3.util.equals(NewaddrResponse, a, b);
  }
}

/**
 * @generated from message cln.WithdrawRequest
 */
export class WithdrawRequest extends Message<WithdrawRequest> {
  /**
   * @generated from field: string destination = 1;
   */
  destination = "";

  /**
   * @generated from field: optional cln.AmountOrAll satoshi = 2;
   */
  satoshi?: AmountOrAll;

  /**
   * @generated from field: optional cln.Feerate feerate = 5;
   */
  feerate?: Feerate;

  /**
   * @generated from field: optional uint32 minconf = 3;
   */
  minconf?: number;

  /**
   * @generated from field: repeated cln.Outpoint utxos = 4;
   */
  utxos: Outpoint[] = [];

  constructor(data?: PartialMessage<WithdrawRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.WithdrawRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "destination", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "satoshi", kind: "message", T: AmountOrAll, opt: true },
    { no: 5, name: "feerate", kind: "message", T: Feerate, opt: true },
    { no: 3, name: "minconf", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 4, name: "utxos", kind: "message", T: Outpoint, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WithdrawRequest {
    return new WithdrawRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WithdrawRequest {
    return new WithdrawRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WithdrawRequest {
    return new WithdrawRequest().fromJsonString(jsonString, options);
  }

  static equals(a: WithdrawRequest | PlainMessage<WithdrawRequest> | undefined, b: WithdrawRequest | PlainMessage<WithdrawRequest> | undefined): boolean {
    return proto3.util.equals(WithdrawRequest, a, b);
  }
}

/**
 * @generated from message cln.WithdrawResponse
 */
export class WithdrawResponse extends Message<WithdrawResponse> {
  /**
   * @generated from field: bytes tx = 1;
   */
  tx = new Uint8Array(0);

  /**
   * @generated from field: bytes txid = 2;
   */
  txid = new Uint8Array(0);

  /**
   * @generated from field: string psbt = 3;
   */
  psbt = "";

  constructor(data?: PartialMessage<WithdrawResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.WithdrawResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "tx", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 2, name: "txid", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 3, name: "psbt", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WithdrawResponse {
    return new WithdrawResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WithdrawResponse {
    return new WithdrawResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WithdrawResponse {
    return new WithdrawResponse().fromJsonString(jsonString, options);
  }

  static equals(a: WithdrawResponse | PlainMessage<WithdrawResponse> | undefined, b: WithdrawResponse | PlainMessage<WithdrawResponse> | undefined): boolean {
    return proto3.util.equals(WithdrawResponse, a, b);
  }
}

/**
 * @generated from message cln.KeysendRequest
 */
export class KeysendRequest extends Message<KeysendRequest> {
  /**
   * @generated from field: bytes destination = 1;
   */
  destination = new Uint8Array(0);

  /**
   * @generated from field: cln.Amount amount_msat = 10;
   */
  amountMsat?: Amount;

  /**
   * @generated from field: optional string label = 3;
   */
  label?: string;

  /**
   * @generated from field: optional double maxfeepercent = 4;
   */
  maxfeepercent?: number;

  /**
   * @generated from field: optional uint32 retry_for = 5;
   */
  retryFor?: number;

  /**
   * @generated from field: optional uint32 maxdelay = 6;
   */
  maxdelay?: number;

  /**
   * @generated from field: optional cln.Amount exemptfee = 7;
   */
  exemptfee?: Amount;

  /**
   * @generated from field: optional cln.RoutehintList routehints = 8;
   */
  routehints?: RoutehintList;

  /**
   * @generated from field: optional cln.TlvStream extratlvs = 9;
   */
  extratlvs?: TlvStream;

  constructor(data?: PartialMessage<KeysendRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.KeysendRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "destination", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 10, name: "amount_msat", kind: "message", T: Amount },
    { no: 3, name: "label", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "maxfeepercent", kind: "scalar", T: 1 /* ScalarType.DOUBLE */, opt: true },
    { no: 5, name: "retry_for", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 6, name: "maxdelay", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 7, name: "exemptfee", kind: "message", T: Amount, opt: true },
    { no: 8, name: "routehints", kind: "message", T: RoutehintList, opt: true },
    { no: 9, name: "extratlvs", kind: "message", T: TlvStream, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): KeysendRequest {
    return new KeysendRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): KeysendRequest {
    return new KeysendRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): KeysendRequest {
    return new KeysendRequest().fromJsonString(jsonString, options);
  }

  static equals(a: KeysendRequest | PlainMessage<KeysendRequest> | undefined, b: KeysendRequest | PlainMessage<KeysendRequest> | undefined): boolean {
    return proto3.util.equals(KeysendRequest, a, b);
  }
}

/**
 * @generated from message cln.KeysendResponse
 */
export class KeysendResponse extends Message<KeysendResponse> {
  /**
   * @generated from field: bytes payment_preimage = 1;
   */
  paymentPreimage = new Uint8Array(0);

  /**
   * @generated from field: optional bytes destination = 2;
   */
  destination?: Uint8Array;

  /**
   * @generated from field: bytes payment_hash = 3;
   */
  paymentHash = new Uint8Array(0);

  /**
   * @generated from field: double created_at = 4;
   */
  createdAt = 0;

  /**
   * @generated from field: uint32 parts = 5;
   */
  parts = 0;

  /**
   * @generated from field: cln.Amount amount_msat = 6;
   */
  amountMsat?: Amount;

  /**
   * @generated from field: cln.Amount amount_sent_msat = 7;
   */
  amountSentMsat?: Amount;

  /**
   * @generated from field: optional string warning_partial_completion = 8;
   */
  warningPartialCompletion?: string;

  /**
   * @generated from field: cln.KeysendResponse.KeysendStatus status = 9;
   */
  status = KeysendResponse_KeysendStatus.COMPLETE;

  constructor(data?: PartialMessage<KeysendResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.KeysendResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "payment_preimage", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 2, name: "destination", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 3, name: "payment_hash", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 4, name: "created_at", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 5, name: "parts", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 6, name: "amount_msat", kind: "message", T: Amount },
    { no: 7, name: "amount_sent_msat", kind: "message", T: Amount },
    { no: 8, name: "warning_partial_completion", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 9, name: "status", kind: "enum", T: proto3.getEnumType(KeysendResponse_KeysendStatus) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): KeysendResponse {
    return new KeysendResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): KeysendResponse {
    return new KeysendResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): KeysendResponse {
    return new KeysendResponse().fromJsonString(jsonString, options);
  }

  static equals(a: KeysendResponse | PlainMessage<KeysendResponse> | undefined, b: KeysendResponse | PlainMessage<KeysendResponse> | undefined): boolean {
    return proto3.util.equals(KeysendResponse, a, b);
  }
}

/**
 * KeySend.status
 *
 * @generated from enum cln.KeysendResponse.KeysendStatus
 */
export enum KeysendResponse_KeysendStatus {
  /**
   * @generated from enum value: COMPLETE = 0;
   */
  COMPLETE = 0,
}
// Retrieve enum metadata with: proto3.getEnumType(KeysendResponse_KeysendStatus)
proto3.util.setEnumType(KeysendResponse_KeysendStatus, "cln.KeysendResponse.KeysendStatus", [
  { no: 0, name: "COMPLETE" },
]);

/**
 * @generated from message cln.FundpsbtRequest
 */
export class FundpsbtRequest extends Message<FundpsbtRequest> {
  /**
   * @generated from field: cln.AmountOrAll satoshi = 1;
   */
  satoshi?: AmountOrAll;

  /**
   * @generated from field: cln.Feerate feerate = 2;
   */
  feerate?: Feerate;

  /**
   * @generated from field: uint32 startweight = 3;
   */
  startweight = 0;

  /**
   * @generated from field: optional uint32 minconf = 4;
   */
  minconf?: number;

  /**
   * @generated from field: optional uint32 reserve = 5;
   */
  reserve?: number;

  /**
   * @generated from field: optional uint32 locktime = 6;
   */
  locktime?: number;

  /**
   * @generated from field: optional uint32 min_witness_weight = 7;
   */
  minWitnessWeight?: number;

  /**
   * @generated from field: optional bool excess_as_change = 8;
   */
  excessAsChange?: boolean;

  /**
   * @generated from field: optional bool nonwrapped = 9;
   */
  nonwrapped?: boolean;

  /**
   * @generated from field: optional bool opening_anchor_channel = 10;
   */
  openingAnchorChannel?: boolean;

  constructor(data?: PartialMessage<FundpsbtRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.FundpsbtRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "satoshi", kind: "message", T: AmountOrAll },
    { no: 2, name: "feerate", kind: "message", T: Feerate },
    { no: 3, name: "startweight", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 4, name: "minconf", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 5, name: "reserve", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 6, name: "locktime", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 7, name: "min_witness_weight", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 8, name: "excess_as_change", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 9, name: "nonwrapped", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 10, name: "opening_anchor_channel", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FundpsbtRequest {
    return new FundpsbtRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FundpsbtRequest {
    return new FundpsbtRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FundpsbtRequest {
    return new FundpsbtRequest().fromJsonString(jsonString, options);
  }

  static equals(a: FundpsbtRequest | PlainMessage<FundpsbtRequest> | undefined, b: FundpsbtRequest | PlainMessage<FundpsbtRequest> | undefined): boolean {
    return proto3.util.equals(FundpsbtRequest, a, b);
  }
}

/**
 * @generated from message cln.FundpsbtResponse
 */
export class FundpsbtResponse extends Message<FundpsbtResponse> {
  /**
   * @generated from field: string psbt = 1;
   */
  psbt = "";

  /**
   * @generated from field: uint32 feerate_per_kw = 2;
   */
  feeratePerKw = 0;

  /**
   * @generated from field: uint32 estimated_final_weight = 3;
   */
  estimatedFinalWeight = 0;

  /**
   * @generated from field: cln.Amount excess_msat = 4;
   */
  excessMsat?: Amount;

  /**
   * @generated from field: optional uint32 change_outnum = 5;
   */
  changeOutnum?: number;

  /**
   * @generated from field: repeated cln.FundpsbtReservations reservations = 6;
   */
  reservations: FundpsbtReservations[] = [];

  constructor(data?: PartialMessage<FundpsbtResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.FundpsbtResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "psbt", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "feerate_per_kw", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 3, name: "estimated_final_weight", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 4, name: "excess_msat", kind: "message", T: Amount },
    { no: 5, name: "change_outnum", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 6, name: "reservations", kind: "message", T: FundpsbtReservations, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FundpsbtResponse {
    return new FundpsbtResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FundpsbtResponse {
    return new FundpsbtResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FundpsbtResponse {
    return new FundpsbtResponse().fromJsonString(jsonString, options);
  }

  static equals(a: FundpsbtResponse | PlainMessage<FundpsbtResponse> | undefined, b: FundpsbtResponse | PlainMessage<FundpsbtResponse> | undefined): boolean {
    return proto3.util.equals(FundpsbtResponse, a, b);
  }
}

/**
 * @generated from message cln.FundpsbtReservations
 */
export class FundpsbtReservations extends Message<FundpsbtReservations> {
  /**
   * @generated from field: bytes txid = 1;
   */
  txid = new Uint8Array(0);

  /**
   * @generated from field: uint32 vout = 2;
   */
  vout = 0;

  /**
   * @generated from field: bool was_reserved = 3;
   */
  wasReserved = false;

  /**
   * @generated from field: bool reserved = 4;
   */
  reserved = false;

  /**
   * @generated from field: uint32 reserved_to_block = 5;
   */
  reservedToBlock = 0;

  constructor(data?: PartialMessage<FundpsbtReservations>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.FundpsbtReservations";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "txid", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 2, name: "vout", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 3, name: "was_reserved", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "reserved", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "reserved_to_block", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FundpsbtReservations {
    return new FundpsbtReservations().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FundpsbtReservations {
    return new FundpsbtReservations().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FundpsbtReservations {
    return new FundpsbtReservations().fromJsonString(jsonString, options);
  }

  static equals(a: FundpsbtReservations | PlainMessage<FundpsbtReservations> | undefined, b: FundpsbtReservations | PlainMessage<FundpsbtReservations> | undefined): boolean {
    return proto3.util.equals(FundpsbtReservations, a, b);
  }
}

/**
 * @generated from message cln.SendpsbtRequest
 */
export class SendpsbtRequest extends Message<SendpsbtRequest> {
  /**
   * @generated from field: string psbt = 1;
   */
  psbt = "";

  /**
   * @generated from field: optional bool reserve = 2;
   */
  reserve?: boolean;

  constructor(data?: PartialMessage<SendpsbtRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.SendpsbtRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "psbt", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "reserve", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SendpsbtRequest {
    return new SendpsbtRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SendpsbtRequest {
    return new SendpsbtRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SendpsbtRequest {
    return new SendpsbtRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SendpsbtRequest | PlainMessage<SendpsbtRequest> | undefined, b: SendpsbtRequest | PlainMessage<SendpsbtRequest> | undefined): boolean {
    return proto3.util.equals(SendpsbtRequest, a, b);
  }
}

/**
 * @generated from message cln.SendpsbtResponse
 */
export class SendpsbtResponse extends Message<SendpsbtResponse> {
  /**
   * @generated from field: bytes tx = 1;
   */
  tx = new Uint8Array(0);

  /**
   * @generated from field: bytes txid = 2;
   */
  txid = new Uint8Array(0);

  constructor(data?: PartialMessage<SendpsbtResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.SendpsbtResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "tx", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 2, name: "txid", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SendpsbtResponse {
    return new SendpsbtResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SendpsbtResponse {
    return new SendpsbtResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SendpsbtResponse {
    return new SendpsbtResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SendpsbtResponse | PlainMessage<SendpsbtResponse> | undefined, b: SendpsbtResponse | PlainMessage<SendpsbtResponse> | undefined): boolean {
    return proto3.util.equals(SendpsbtResponse, a, b);
  }
}

/**
 * @generated from message cln.SignpsbtRequest
 */
export class SignpsbtRequest extends Message<SignpsbtRequest> {
  /**
   * @generated from field: string psbt = 1;
   */
  psbt = "";

  /**
   * @generated from field: repeated uint32 signonly = 2;
   */
  signonly: number[] = [];

  constructor(data?: PartialMessage<SignpsbtRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.SignpsbtRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "psbt", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "signonly", kind: "scalar", T: 13 /* ScalarType.UINT32 */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SignpsbtRequest {
    return new SignpsbtRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SignpsbtRequest {
    return new SignpsbtRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SignpsbtRequest {
    return new SignpsbtRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SignpsbtRequest | PlainMessage<SignpsbtRequest> | undefined, b: SignpsbtRequest | PlainMessage<SignpsbtRequest> | undefined): boolean {
    return proto3.util.equals(SignpsbtRequest, a, b);
  }
}

/**
 * @generated from message cln.SignpsbtResponse
 */
export class SignpsbtResponse extends Message<SignpsbtResponse> {
  /**
   * @generated from field: string signed_psbt = 1;
   */
  signedPsbt = "";

  constructor(data?: PartialMessage<SignpsbtResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.SignpsbtResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "signed_psbt", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SignpsbtResponse {
    return new SignpsbtResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SignpsbtResponse {
    return new SignpsbtResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SignpsbtResponse {
    return new SignpsbtResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SignpsbtResponse | PlainMessage<SignpsbtResponse> | undefined, b: SignpsbtResponse | PlainMessage<SignpsbtResponse> | undefined): boolean {
    return proto3.util.equals(SignpsbtResponse, a, b);
  }
}

/**
 * @generated from message cln.UtxopsbtRequest
 */
export class UtxopsbtRequest extends Message<UtxopsbtRequest> {
  /**
   * @generated from field: cln.Amount satoshi = 1;
   */
  satoshi?: Amount;

  /**
   * @generated from field: cln.Feerate feerate = 2;
   */
  feerate?: Feerate;

  /**
   * @generated from field: uint32 startweight = 3;
   */
  startweight = 0;

  /**
   * @generated from field: repeated cln.Outpoint utxos = 4;
   */
  utxos: Outpoint[] = [];

  /**
   * @generated from field: optional uint32 reserve = 5;
   */
  reserve?: number;

  /**
   * @generated from field: optional bool reservedok = 8;
   */
  reservedok?: boolean;

  /**
   * @generated from field: optional uint32 locktime = 6;
   */
  locktime?: number;

  /**
   * @generated from field: optional uint32 min_witness_weight = 7;
   */
  minWitnessWeight?: number;

  /**
   * @generated from field: optional bool excess_as_change = 9;
   */
  excessAsChange?: boolean;

  /**
   * @generated from field: optional bool opening_anchor_channel = 10;
   */
  openingAnchorChannel?: boolean;

  constructor(data?: PartialMessage<UtxopsbtRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.UtxopsbtRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "satoshi", kind: "message", T: Amount },
    { no: 2, name: "feerate", kind: "message", T: Feerate },
    { no: 3, name: "startweight", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 4, name: "utxos", kind: "message", T: Outpoint, repeated: true },
    { no: 5, name: "reserve", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 8, name: "reservedok", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 6, name: "locktime", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 7, name: "min_witness_weight", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 9, name: "excess_as_change", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 10, name: "opening_anchor_channel", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UtxopsbtRequest {
    return new UtxopsbtRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UtxopsbtRequest {
    return new UtxopsbtRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UtxopsbtRequest {
    return new UtxopsbtRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UtxopsbtRequest | PlainMessage<UtxopsbtRequest> | undefined, b: UtxopsbtRequest | PlainMessage<UtxopsbtRequest> | undefined): boolean {
    return proto3.util.equals(UtxopsbtRequest, a, b);
  }
}

/**
 * @generated from message cln.UtxopsbtResponse
 */
export class UtxopsbtResponse extends Message<UtxopsbtResponse> {
  /**
   * @generated from field: string psbt = 1;
   */
  psbt = "";

  /**
   * @generated from field: uint32 feerate_per_kw = 2;
   */
  feeratePerKw = 0;

  /**
   * @generated from field: uint32 estimated_final_weight = 3;
   */
  estimatedFinalWeight = 0;

  /**
   * @generated from field: cln.Amount excess_msat = 4;
   */
  excessMsat?: Amount;

  /**
   * @generated from field: optional uint32 change_outnum = 5;
   */
  changeOutnum?: number;

  /**
   * @generated from field: repeated cln.UtxopsbtReservations reservations = 6;
   */
  reservations: UtxopsbtReservations[] = [];

  constructor(data?: PartialMessage<UtxopsbtResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.UtxopsbtResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "psbt", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "feerate_per_kw", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 3, name: "estimated_final_weight", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 4, name: "excess_msat", kind: "message", T: Amount },
    { no: 5, name: "change_outnum", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 6, name: "reservations", kind: "message", T: UtxopsbtReservations, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UtxopsbtResponse {
    return new UtxopsbtResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UtxopsbtResponse {
    return new UtxopsbtResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UtxopsbtResponse {
    return new UtxopsbtResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UtxopsbtResponse | PlainMessage<UtxopsbtResponse> | undefined, b: UtxopsbtResponse | PlainMessage<UtxopsbtResponse> | undefined): boolean {
    return proto3.util.equals(UtxopsbtResponse, a, b);
  }
}

/**
 * @generated from message cln.UtxopsbtReservations
 */
export class UtxopsbtReservations extends Message<UtxopsbtReservations> {
  /**
   * @generated from field: bytes txid = 1;
   */
  txid = new Uint8Array(0);

  /**
   * @generated from field: uint32 vout = 2;
   */
  vout = 0;

  /**
   * @generated from field: bool was_reserved = 3;
   */
  wasReserved = false;

  /**
   * @generated from field: bool reserved = 4;
   */
  reserved = false;

  /**
   * @generated from field: uint32 reserved_to_block = 5;
   */
  reservedToBlock = 0;

  constructor(data?: PartialMessage<UtxopsbtReservations>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.UtxopsbtReservations";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "txid", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 2, name: "vout", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 3, name: "was_reserved", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "reserved", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 5, name: "reserved_to_block", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UtxopsbtReservations {
    return new UtxopsbtReservations().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UtxopsbtReservations {
    return new UtxopsbtReservations().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UtxopsbtReservations {
    return new UtxopsbtReservations().fromJsonString(jsonString, options);
  }

  static equals(a: UtxopsbtReservations | PlainMessage<UtxopsbtReservations> | undefined, b: UtxopsbtReservations | PlainMessage<UtxopsbtReservations> | undefined): boolean {
    return proto3.util.equals(UtxopsbtReservations, a, b);
  }
}

/**
 * @generated from message cln.TxdiscardRequest
 */
export class TxdiscardRequest extends Message<TxdiscardRequest> {
  /**
   * @generated from field: bytes txid = 1;
   */
  txid = new Uint8Array(0);

  constructor(data?: PartialMessage<TxdiscardRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.TxdiscardRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "txid", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TxdiscardRequest {
    return new TxdiscardRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TxdiscardRequest {
    return new TxdiscardRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TxdiscardRequest {
    return new TxdiscardRequest().fromJsonString(jsonString, options);
  }

  static equals(a: TxdiscardRequest | PlainMessage<TxdiscardRequest> | undefined, b: TxdiscardRequest | PlainMessage<TxdiscardRequest> | undefined): boolean {
    return proto3.util.equals(TxdiscardRequest, a, b);
  }
}

/**
 * @generated from message cln.TxdiscardResponse
 */
export class TxdiscardResponse extends Message<TxdiscardResponse> {
  /**
   * @generated from field: bytes unsigned_tx = 1;
   */
  unsignedTx = new Uint8Array(0);

  /**
   * @generated from field: bytes txid = 2;
   */
  txid = new Uint8Array(0);

  constructor(data?: PartialMessage<TxdiscardResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.TxdiscardResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "unsigned_tx", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 2, name: "txid", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TxdiscardResponse {
    return new TxdiscardResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TxdiscardResponse {
    return new TxdiscardResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TxdiscardResponse {
    return new TxdiscardResponse().fromJsonString(jsonString, options);
  }

  static equals(a: TxdiscardResponse | PlainMessage<TxdiscardResponse> | undefined, b: TxdiscardResponse | PlainMessage<TxdiscardResponse> | undefined): boolean {
    return proto3.util.equals(TxdiscardResponse, a, b);
  }
}

/**
 * @generated from message cln.TxprepareRequest
 */
export class TxprepareRequest extends Message<TxprepareRequest> {
  /**
   * @generated from field: repeated cln.OutputDesc outputs = 5;
   */
  outputs: OutputDesc[] = [];

  /**
   * @generated from field: optional cln.Feerate feerate = 2;
   */
  feerate?: Feerate;

  /**
   * @generated from field: optional uint32 minconf = 3;
   */
  minconf?: number;

  /**
   * @generated from field: repeated cln.Outpoint utxos = 4;
   */
  utxos: Outpoint[] = [];

  constructor(data?: PartialMessage<TxprepareRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.TxprepareRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 5, name: "outputs", kind: "message", T: OutputDesc, repeated: true },
    { no: 2, name: "feerate", kind: "message", T: Feerate, opt: true },
    { no: 3, name: "minconf", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 4, name: "utxos", kind: "message", T: Outpoint, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TxprepareRequest {
    return new TxprepareRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TxprepareRequest {
    return new TxprepareRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TxprepareRequest {
    return new TxprepareRequest().fromJsonString(jsonString, options);
  }

  static equals(a: TxprepareRequest | PlainMessage<TxprepareRequest> | undefined, b: TxprepareRequest | PlainMessage<TxprepareRequest> | undefined): boolean {
    return proto3.util.equals(TxprepareRequest, a, b);
  }
}

/**
 * @generated from message cln.TxprepareResponse
 */
export class TxprepareResponse extends Message<TxprepareResponse> {
  /**
   * @generated from field: string psbt = 1;
   */
  psbt = "";

  /**
   * @generated from field: bytes unsigned_tx = 2;
   */
  unsignedTx = new Uint8Array(0);

  /**
   * @generated from field: bytes txid = 3;
   */
  txid = new Uint8Array(0);

  constructor(data?: PartialMessage<TxprepareResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.TxprepareResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "psbt", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "unsigned_tx", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 3, name: "txid", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TxprepareResponse {
    return new TxprepareResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TxprepareResponse {
    return new TxprepareResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TxprepareResponse {
    return new TxprepareResponse().fromJsonString(jsonString, options);
  }

  static equals(a: TxprepareResponse | PlainMessage<TxprepareResponse> | undefined, b: TxprepareResponse | PlainMessage<TxprepareResponse> | undefined): boolean {
    return proto3.util.equals(TxprepareResponse, a, b);
  }
}

/**
 * @generated from message cln.TxsendRequest
 */
export class TxsendRequest extends Message<TxsendRequest> {
  /**
   * @generated from field: bytes txid = 1;
   */
  txid = new Uint8Array(0);

  constructor(data?: PartialMessage<TxsendRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.TxsendRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "txid", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TxsendRequest {
    return new TxsendRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TxsendRequest {
    return new TxsendRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TxsendRequest {
    return new TxsendRequest().fromJsonString(jsonString, options);
  }

  static equals(a: TxsendRequest | PlainMessage<TxsendRequest> | undefined, b: TxsendRequest | PlainMessage<TxsendRequest> | undefined): boolean {
    return proto3.util.equals(TxsendRequest, a, b);
  }
}

/**
 * @generated from message cln.TxsendResponse
 */
export class TxsendResponse extends Message<TxsendResponse> {
  /**
   * @generated from field: string psbt = 1;
   */
  psbt = "";

  /**
   * @generated from field: bytes tx = 2;
   */
  tx = new Uint8Array(0);

  /**
   * @generated from field: bytes txid = 3;
   */
  txid = new Uint8Array(0);

  constructor(data?: PartialMessage<TxsendResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.TxsendResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "psbt", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "tx", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 3, name: "txid", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TxsendResponse {
    return new TxsendResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TxsendResponse {
    return new TxsendResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TxsendResponse {
    return new TxsendResponse().fromJsonString(jsonString, options);
  }

  static equals(a: TxsendResponse | PlainMessage<TxsendResponse> | undefined, b: TxsendResponse | PlainMessage<TxsendResponse> | undefined): boolean {
    return proto3.util.equals(TxsendResponse, a, b);
  }
}

/**
 * @generated from message cln.ListpeerchannelsRequest
 */
export class ListpeerchannelsRequest extends Message<ListpeerchannelsRequest> {
  /**
   * @generated from field: optional bytes id = 1;
   */
  id?: Uint8Array;

  constructor(data?: PartialMessage<ListpeerchannelsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.ListpeerchannelsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListpeerchannelsRequest {
    return new ListpeerchannelsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListpeerchannelsRequest {
    return new ListpeerchannelsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListpeerchannelsRequest {
    return new ListpeerchannelsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListpeerchannelsRequest | PlainMessage<ListpeerchannelsRequest> | undefined, b: ListpeerchannelsRequest | PlainMessage<ListpeerchannelsRequest> | undefined): boolean {
    return proto3.util.equals(ListpeerchannelsRequest, a, b);
  }
}

/**
 * @generated from message cln.ListpeerchannelsResponse
 */
export class ListpeerchannelsResponse extends Message<ListpeerchannelsResponse> {
  /**
   * @generated from field: repeated cln.ListpeerchannelsChannels channels = 1;
   */
  channels: ListpeerchannelsChannels[] = [];

  constructor(data?: PartialMessage<ListpeerchannelsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.ListpeerchannelsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "channels", kind: "message", T: ListpeerchannelsChannels, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListpeerchannelsResponse {
    return new ListpeerchannelsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListpeerchannelsResponse {
    return new ListpeerchannelsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListpeerchannelsResponse {
    return new ListpeerchannelsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListpeerchannelsResponse | PlainMessage<ListpeerchannelsResponse> | undefined, b: ListpeerchannelsResponse | PlainMessage<ListpeerchannelsResponse> | undefined): boolean {
    return proto3.util.equals(ListpeerchannelsResponse, a, b);
  }
}

/**
 * @generated from message cln.ListpeerchannelsChannels
 */
export class ListpeerchannelsChannels extends Message<ListpeerchannelsChannels> {
  /**
   * @generated from field: optional bytes peer_id = 1;
   */
  peerId?: Uint8Array;

  /**
   * @generated from field: optional bool peer_connected = 2;
   */
  peerConnected?: boolean;

  /**
   * @generated from field: optional cln.ListpeerchannelsChannels.ListpeerchannelsChannelsState state = 3;
   */
  state?: ListpeerchannelsChannels_ListpeerchannelsChannelsState;

  /**
   * @generated from field: optional bytes scratch_txid = 4;
   */
  scratchTxid?: Uint8Array;

  /**
   * @generated from field: optional cln.ListpeerchannelsChannelsFeerate feerate = 6;
   */
  feerate?: ListpeerchannelsChannelsFeerate;

  /**
   * @generated from field: optional string owner = 7;
   */
  owner?: string;

  /**
   * @generated from field: optional string short_channel_id = 8;
   */
  shortChannelId?: string;

  /**
   * @generated from field: optional bytes channel_id = 9;
   */
  channelId?: Uint8Array;

  /**
   * @generated from field: optional bytes funding_txid = 10;
   */
  fundingTxid?: Uint8Array;

  /**
   * @generated from field: optional uint32 funding_outnum = 11;
   */
  fundingOutnum?: number;

  /**
   * @generated from field: optional string initial_feerate = 12;
   */
  initialFeerate?: string;

  /**
   * @generated from field: optional string last_feerate = 13;
   */
  lastFeerate?: string;

  /**
   * @generated from field: optional string next_feerate = 14;
   */
  nextFeerate?: string;

  /**
   * @generated from field: optional uint32 next_fee_step = 15;
   */
  nextFeeStep?: number;

  /**
   * @generated from field: repeated cln.ListpeerchannelsChannelsInflight inflight = 16;
   */
  inflight: ListpeerchannelsChannelsInflight[] = [];

  /**
   * @generated from field: optional bytes close_to = 17;
   */
  closeTo?: Uint8Array;

  /**
   * @generated from field: optional bool private = 18;
   */
  private?: boolean;

  /**
   * @generated from field: optional cln.ChannelSide opener = 19;
   */
  opener?: ChannelSide;

  /**
   * @generated from field: optional cln.ChannelSide closer = 20;
   */
  closer?: ChannelSide;

  /**
   * @generated from field: optional cln.ListpeerchannelsChannelsFunding funding = 22;
   */
  funding?: ListpeerchannelsChannelsFunding;

  /**
   * @generated from field: optional cln.Amount to_us_msat = 23;
   */
  toUsMsat?: Amount;

  /**
   * @generated from field: optional cln.Amount min_to_us_msat = 24;
   */
  minToUsMsat?: Amount;

  /**
   * @generated from field: optional cln.Amount max_to_us_msat = 25;
   */
  maxToUsMsat?: Amount;

  /**
   * @generated from field: optional cln.Amount total_msat = 26;
   */
  totalMsat?: Amount;

  /**
   * @generated from field: optional cln.Amount fee_base_msat = 27;
   */
  feeBaseMsat?: Amount;

  /**
   * @generated from field: optional uint32 fee_proportional_millionths = 28;
   */
  feeProportionalMillionths?: number;

  /**
   * @generated from field: optional cln.Amount dust_limit_msat = 29;
   */
  dustLimitMsat?: Amount;

  /**
   * @generated from field: optional cln.Amount max_total_htlc_in_msat = 30;
   */
  maxTotalHtlcInMsat?: Amount;

  /**
   * @generated from field: optional cln.Amount their_reserve_msat = 31;
   */
  theirReserveMsat?: Amount;

  /**
   * @generated from field: optional cln.Amount our_reserve_msat = 32;
   */
  ourReserveMsat?: Amount;

  /**
   * @generated from field: optional cln.Amount spendable_msat = 33;
   */
  spendableMsat?: Amount;

  /**
   * @generated from field: optional cln.Amount receivable_msat = 34;
   */
  receivableMsat?: Amount;

  /**
   * @generated from field: optional cln.Amount minimum_htlc_in_msat = 35;
   */
  minimumHtlcInMsat?: Amount;

  /**
   * @generated from field: optional cln.Amount minimum_htlc_out_msat = 36;
   */
  minimumHtlcOutMsat?: Amount;

  /**
   * @generated from field: optional cln.Amount maximum_htlc_out_msat = 37;
   */
  maximumHtlcOutMsat?: Amount;

  /**
   * @generated from field: optional uint32 their_to_self_delay = 38;
   */
  theirToSelfDelay?: number;

  /**
   * @generated from field: optional uint32 our_to_self_delay = 39;
   */
  ourToSelfDelay?: number;

  /**
   * @generated from field: optional uint32 max_accepted_htlcs = 40;
   */
  maxAcceptedHtlcs?: number;

  /**
   * @generated from field: optional cln.ListpeerchannelsChannelsAlias alias = 41;
   */
  alias?: ListpeerchannelsChannelsAlias;

  /**
   * @generated from field: repeated string status = 43;
   */
  status: string[] = [];

  /**
   * @generated from field: optional uint64 in_payments_offered = 44;
   */
  inPaymentsOffered?: bigint;

  /**
   * @generated from field: optional cln.Amount in_offered_msat = 45;
   */
  inOfferedMsat?: Amount;

  /**
   * @generated from field: optional uint64 in_payments_fulfilled = 46;
   */
  inPaymentsFulfilled?: bigint;

  /**
   * @generated from field: optional cln.Amount in_fulfilled_msat = 47;
   */
  inFulfilledMsat?: Amount;

  /**
   * @generated from field: optional uint64 out_payments_offered = 48;
   */
  outPaymentsOffered?: bigint;

  /**
   * @generated from field: optional cln.Amount out_offered_msat = 49;
   */
  outOfferedMsat?: Amount;

  /**
   * @generated from field: optional uint64 out_payments_fulfilled = 50;
   */
  outPaymentsFulfilled?: bigint;

  /**
   * @generated from field: optional cln.Amount out_fulfilled_msat = 51;
   */
  outFulfilledMsat?: Amount;

  /**
   * @generated from field: repeated cln.ListpeerchannelsChannelsHtlcs htlcs = 52;
   */
  htlcs: ListpeerchannelsChannelsHtlcs[] = [];

  /**
   * @generated from field: optional string close_to_addr = 53;
   */
  closeToAddr?: string;

  constructor(data?: PartialMessage<ListpeerchannelsChannels>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.ListpeerchannelsChannels";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "peer_id", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 2, name: "peer_connected", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 3, name: "state", kind: "enum", T: proto3.getEnumType(ListpeerchannelsChannels_ListpeerchannelsChannelsState), opt: true },
    { no: 4, name: "scratch_txid", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 6, name: "feerate", kind: "message", T: ListpeerchannelsChannelsFeerate, opt: true },
    { no: 7, name: "owner", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 8, name: "short_channel_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 9, name: "channel_id", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 10, name: "funding_txid", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 11, name: "funding_outnum", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 12, name: "initial_feerate", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 13, name: "last_feerate", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 14, name: "next_feerate", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 15, name: "next_fee_step", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 16, name: "inflight", kind: "message", T: ListpeerchannelsChannelsInflight, repeated: true },
    { no: 17, name: "close_to", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 18, name: "private", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 19, name: "opener", kind: "enum", T: proto3.getEnumType(ChannelSide), opt: true },
    { no: 20, name: "closer", kind: "enum", T: proto3.getEnumType(ChannelSide), opt: true },
    { no: 22, name: "funding", kind: "message", T: ListpeerchannelsChannelsFunding, opt: true },
    { no: 23, name: "to_us_msat", kind: "message", T: Amount, opt: true },
    { no: 24, name: "min_to_us_msat", kind: "message", T: Amount, opt: true },
    { no: 25, name: "max_to_us_msat", kind: "message", T: Amount, opt: true },
    { no: 26, name: "total_msat", kind: "message", T: Amount, opt: true },
    { no: 27, name: "fee_base_msat", kind: "message", T: Amount, opt: true },
    { no: 28, name: "fee_proportional_millionths", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 29, name: "dust_limit_msat", kind: "message", T: Amount, opt: true },
    { no: 30, name: "max_total_htlc_in_msat", kind: "message", T: Amount, opt: true },
    { no: 31, name: "their_reserve_msat", kind: "message", T: Amount, opt: true },
    { no: 32, name: "our_reserve_msat", kind: "message", T: Amount, opt: true },
    { no: 33, name: "spendable_msat", kind: "message", T: Amount, opt: true },
    { no: 34, name: "receivable_msat", kind: "message", T: Amount, opt: true },
    { no: 35, name: "minimum_htlc_in_msat", kind: "message", T: Amount, opt: true },
    { no: 36, name: "minimum_htlc_out_msat", kind: "message", T: Amount, opt: true },
    { no: 37, name: "maximum_htlc_out_msat", kind: "message", T: Amount, opt: true },
    { no: 38, name: "their_to_self_delay", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 39, name: "our_to_self_delay", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 40, name: "max_accepted_htlcs", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 41, name: "alias", kind: "message", T: ListpeerchannelsChannelsAlias, opt: true },
    { no: 43, name: "status", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 44, name: "in_payments_offered", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 45, name: "in_offered_msat", kind: "message", T: Amount, opt: true },
    { no: 46, name: "in_payments_fulfilled", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 47, name: "in_fulfilled_msat", kind: "message", T: Amount, opt: true },
    { no: 48, name: "out_payments_offered", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 49, name: "out_offered_msat", kind: "message", T: Amount, opt: true },
    { no: 50, name: "out_payments_fulfilled", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 51, name: "out_fulfilled_msat", kind: "message", T: Amount, opt: true },
    { no: 52, name: "htlcs", kind: "message", T: ListpeerchannelsChannelsHtlcs, repeated: true },
    { no: 53, name: "close_to_addr", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListpeerchannelsChannels {
    return new ListpeerchannelsChannels().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListpeerchannelsChannels {
    return new ListpeerchannelsChannels().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListpeerchannelsChannels {
    return new ListpeerchannelsChannels().fromJsonString(jsonString, options);
  }

  static equals(a: ListpeerchannelsChannels | PlainMessage<ListpeerchannelsChannels> | undefined, b: ListpeerchannelsChannels | PlainMessage<ListpeerchannelsChannels> | undefined): boolean {
    return proto3.util.equals(ListpeerchannelsChannels, a, b);
  }
}

/**
 * ListPeerChannels.channels[].state
 *
 * @generated from enum cln.ListpeerchannelsChannels.ListpeerchannelsChannelsState
 */
export enum ListpeerchannelsChannels_ListpeerchannelsChannelsState {
  /**
   * @generated from enum value: OPENINGD = 0;
   */
  OPENINGD = 0,

  /**
   * @generated from enum value: CHANNELD_AWAITING_LOCKIN = 1;
   */
  CHANNELD_AWAITING_LOCKIN = 1,

  /**
   * @generated from enum value: CHANNELD_NORMAL = 2;
   */
  CHANNELD_NORMAL = 2,

  /**
   * @generated from enum value: CHANNELD_SHUTTING_DOWN = 3;
   */
  CHANNELD_SHUTTING_DOWN = 3,

  /**
   * @generated from enum value: CLOSINGD_SIGEXCHANGE = 4;
   */
  CLOSINGD_SIGEXCHANGE = 4,

  /**
   * @generated from enum value: CLOSINGD_COMPLETE = 5;
   */
  CLOSINGD_COMPLETE = 5,

  /**
   * @generated from enum value: AWAITING_UNILATERAL = 6;
   */
  AWAITING_UNILATERAL = 6,

  /**
   * @generated from enum value: FUNDING_SPEND_SEEN = 7;
   */
  FUNDING_SPEND_SEEN = 7,

  /**
   * @generated from enum value: ONCHAIN = 8;
   */
  ONCHAIN = 8,

  /**
   * @generated from enum value: DUALOPEND_OPEN_INIT = 9;
   */
  DUALOPEND_OPEN_INIT = 9,

  /**
   * @generated from enum value: DUALOPEND_AWAITING_LOCKIN = 10;
   */
  DUALOPEND_AWAITING_LOCKIN = 10,
}
// Retrieve enum metadata with: proto3.getEnumType(ListpeerchannelsChannels_ListpeerchannelsChannelsState)
proto3.util.setEnumType(ListpeerchannelsChannels_ListpeerchannelsChannelsState, "cln.ListpeerchannelsChannels.ListpeerchannelsChannelsState", [
  { no: 0, name: "OPENINGD" },
  { no: 1, name: "CHANNELD_AWAITING_LOCKIN" },
  { no: 2, name: "CHANNELD_NORMAL" },
  { no: 3, name: "CHANNELD_SHUTTING_DOWN" },
  { no: 4, name: "CLOSINGD_SIGEXCHANGE" },
  { no: 5, name: "CLOSINGD_COMPLETE" },
  { no: 6, name: "AWAITING_UNILATERAL" },
  { no: 7, name: "FUNDING_SPEND_SEEN" },
  { no: 8, name: "ONCHAIN" },
  { no: 9, name: "DUALOPEND_OPEN_INIT" },
  { no: 10, name: "DUALOPEND_AWAITING_LOCKIN" },
]);

/**
 * @generated from message cln.ListpeerchannelsChannelsFeerate
 */
export class ListpeerchannelsChannelsFeerate extends Message<ListpeerchannelsChannelsFeerate> {
  /**
   * @generated from field: optional uint32 perkw = 1;
   */
  perkw?: number;

  /**
   * @generated from field: optional uint32 perkb = 2;
   */
  perkb?: number;

  constructor(data?: PartialMessage<ListpeerchannelsChannelsFeerate>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.ListpeerchannelsChannelsFeerate";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "perkw", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 2, name: "perkb", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListpeerchannelsChannelsFeerate {
    return new ListpeerchannelsChannelsFeerate().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListpeerchannelsChannelsFeerate {
    return new ListpeerchannelsChannelsFeerate().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListpeerchannelsChannelsFeerate {
    return new ListpeerchannelsChannelsFeerate().fromJsonString(jsonString, options);
  }

  static equals(a: ListpeerchannelsChannelsFeerate | PlainMessage<ListpeerchannelsChannelsFeerate> | undefined, b: ListpeerchannelsChannelsFeerate | PlainMessage<ListpeerchannelsChannelsFeerate> | undefined): boolean {
    return proto3.util.equals(ListpeerchannelsChannelsFeerate, a, b);
  }
}

/**
 * @generated from message cln.ListpeerchannelsChannelsInflight
 */
export class ListpeerchannelsChannelsInflight extends Message<ListpeerchannelsChannelsInflight> {
  /**
   * @generated from field: optional bytes funding_txid = 1;
   */
  fundingTxid?: Uint8Array;

  /**
   * @generated from field: optional uint32 funding_outnum = 2;
   */
  fundingOutnum?: number;

  /**
   * @generated from field: optional string feerate = 3;
   */
  feerate?: string;

  /**
   * @generated from field: optional cln.Amount total_funding_msat = 4;
   */
  totalFundingMsat?: Amount;

  /**
   * @generated from field: optional cln.Amount our_funding_msat = 5;
   */
  ourFundingMsat?: Amount;

  /**
   * @generated from field: optional bytes scratch_txid = 6;
   */
  scratchTxid?: Uint8Array;

  constructor(data?: PartialMessage<ListpeerchannelsChannelsInflight>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.ListpeerchannelsChannelsInflight";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "funding_txid", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 2, name: "funding_outnum", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 3, name: "feerate", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "total_funding_msat", kind: "message", T: Amount, opt: true },
    { no: 5, name: "our_funding_msat", kind: "message", T: Amount, opt: true },
    { no: 6, name: "scratch_txid", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListpeerchannelsChannelsInflight {
    return new ListpeerchannelsChannelsInflight().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListpeerchannelsChannelsInflight {
    return new ListpeerchannelsChannelsInflight().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListpeerchannelsChannelsInflight {
    return new ListpeerchannelsChannelsInflight().fromJsonString(jsonString, options);
  }

  static equals(a: ListpeerchannelsChannelsInflight | PlainMessage<ListpeerchannelsChannelsInflight> | undefined, b: ListpeerchannelsChannelsInflight | PlainMessage<ListpeerchannelsChannelsInflight> | undefined): boolean {
    return proto3.util.equals(ListpeerchannelsChannelsInflight, a, b);
  }
}

/**
 * @generated from message cln.ListpeerchannelsChannelsFunding
 */
export class ListpeerchannelsChannelsFunding extends Message<ListpeerchannelsChannelsFunding> {
  /**
   * @generated from field: optional cln.Amount pushed_msat = 1;
   */
  pushedMsat?: Amount;

  /**
   * @generated from field: optional cln.Amount local_funds_msat = 2;
   */
  localFundsMsat?: Amount;

  /**
   * @generated from field: optional cln.Amount remote_funds_msat = 3;
   */
  remoteFundsMsat?: Amount;

  /**
   * @generated from field: optional cln.Amount fee_paid_msat = 4;
   */
  feePaidMsat?: Amount;

  /**
   * @generated from field: optional cln.Amount fee_rcvd_msat = 5;
   */
  feeRcvdMsat?: Amount;

  constructor(data?: PartialMessage<ListpeerchannelsChannelsFunding>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.ListpeerchannelsChannelsFunding";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pushed_msat", kind: "message", T: Amount, opt: true },
    { no: 2, name: "local_funds_msat", kind: "message", T: Amount, opt: true },
    { no: 3, name: "remote_funds_msat", kind: "message", T: Amount, opt: true },
    { no: 4, name: "fee_paid_msat", kind: "message", T: Amount, opt: true },
    { no: 5, name: "fee_rcvd_msat", kind: "message", T: Amount, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListpeerchannelsChannelsFunding {
    return new ListpeerchannelsChannelsFunding().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListpeerchannelsChannelsFunding {
    return new ListpeerchannelsChannelsFunding().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListpeerchannelsChannelsFunding {
    return new ListpeerchannelsChannelsFunding().fromJsonString(jsonString, options);
  }

  static equals(a: ListpeerchannelsChannelsFunding | PlainMessage<ListpeerchannelsChannelsFunding> | undefined, b: ListpeerchannelsChannelsFunding | PlainMessage<ListpeerchannelsChannelsFunding> | undefined): boolean {
    return proto3.util.equals(ListpeerchannelsChannelsFunding, a, b);
  }
}

/**
 * @generated from message cln.ListpeerchannelsChannelsAlias
 */
export class ListpeerchannelsChannelsAlias extends Message<ListpeerchannelsChannelsAlias> {
  /**
   * @generated from field: optional string local = 1;
   */
  local?: string;

  /**
   * @generated from field: optional string remote = 2;
   */
  remote?: string;

  constructor(data?: PartialMessage<ListpeerchannelsChannelsAlias>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.ListpeerchannelsChannelsAlias";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "local", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "remote", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListpeerchannelsChannelsAlias {
    return new ListpeerchannelsChannelsAlias().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListpeerchannelsChannelsAlias {
    return new ListpeerchannelsChannelsAlias().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListpeerchannelsChannelsAlias {
    return new ListpeerchannelsChannelsAlias().fromJsonString(jsonString, options);
  }

  static equals(a: ListpeerchannelsChannelsAlias | PlainMessage<ListpeerchannelsChannelsAlias> | undefined, b: ListpeerchannelsChannelsAlias | PlainMessage<ListpeerchannelsChannelsAlias> | undefined): boolean {
    return proto3.util.equals(ListpeerchannelsChannelsAlias, a, b);
  }
}

/**
 * @generated from message cln.ListpeerchannelsChannelsHtlcs
 */
export class ListpeerchannelsChannelsHtlcs extends Message<ListpeerchannelsChannelsHtlcs> {
  /**
   * @generated from field: optional cln.ListpeerchannelsChannelsHtlcs.ListpeerchannelsChannelsHtlcsDirection direction = 1;
   */
  direction?: ListpeerchannelsChannelsHtlcs_ListpeerchannelsChannelsHtlcsDirection;

  /**
   * @generated from field: optional uint64 id = 2;
   */
  id?: bigint;

  /**
   * @generated from field: optional cln.Amount amount_msat = 3;
   */
  amountMsat?: Amount;

  /**
   * @generated from field: optional uint32 expiry = 4;
   */
  expiry?: number;

  /**
   * @generated from field: optional bytes payment_hash = 5;
   */
  paymentHash?: Uint8Array;

  /**
   * @generated from field: optional bool local_trimmed = 6;
   */
  localTrimmed?: boolean;

  /**
   * @generated from field: optional string status = 7;
   */
  status?: string;

  /**
   * @generated from field: optional cln.HtlcState state = 8;
   */
  state?: HtlcState;

  constructor(data?: PartialMessage<ListpeerchannelsChannelsHtlcs>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.ListpeerchannelsChannelsHtlcs";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "direction", kind: "enum", T: proto3.getEnumType(ListpeerchannelsChannelsHtlcs_ListpeerchannelsChannelsHtlcsDirection), opt: true },
    { no: 2, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 3, name: "amount_msat", kind: "message", T: Amount, opt: true },
    { no: 4, name: "expiry", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 5, name: "payment_hash", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 6, name: "local_trimmed", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 7, name: "status", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 8, name: "state", kind: "enum", T: proto3.getEnumType(HtlcState), opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListpeerchannelsChannelsHtlcs {
    return new ListpeerchannelsChannelsHtlcs().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListpeerchannelsChannelsHtlcs {
    return new ListpeerchannelsChannelsHtlcs().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListpeerchannelsChannelsHtlcs {
    return new ListpeerchannelsChannelsHtlcs().fromJsonString(jsonString, options);
  }

  static equals(a: ListpeerchannelsChannelsHtlcs | PlainMessage<ListpeerchannelsChannelsHtlcs> | undefined, b: ListpeerchannelsChannelsHtlcs | PlainMessage<ListpeerchannelsChannelsHtlcs> | undefined): boolean {
    return proto3.util.equals(ListpeerchannelsChannelsHtlcs, a, b);
  }
}

/**
 * ListPeerChannels.channels[].htlcs[].direction
 *
 * @generated from enum cln.ListpeerchannelsChannelsHtlcs.ListpeerchannelsChannelsHtlcsDirection
 */
export enum ListpeerchannelsChannelsHtlcs_ListpeerchannelsChannelsHtlcsDirection {
  /**
   * @generated from enum value: IN = 0;
   */
  IN = 0,

  /**
   * @generated from enum value: OUT = 1;
   */
  OUT = 1,
}
// Retrieve enum metadata with: proto3.getEnumType(ListpeerchannelsChannelsHtlcs_ListpeerchannelsChannelsHtlcsDirection)
proto3.util.setEnumType(ListpeerchannelsChannelsHtlcs_ListpeerchannelsChannelsHtlcsDirection, "cln.ListpeerchannelsChannelsHtlcs.ListpeerchannelsChannelsHtlcsDirection", [
  { no: 0, name: "IN" },
  { no: 1, name: "OUT" },
]);

/**
 * @generated from message cln.ListclosedchannelsRequest
 */
export class ListclosedchannelsRequest extends Message<ListclosedchannelsRequest> {
  /**
   * @generated from field: optional bytes id = 1;
   */
  id?: Uint8Array;

  constructor(data?: PartialMessage<ListclosedchannelsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.ListclosedchannelsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListclosedchannelsRequest {
    return new ListclosedchannelsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListclosedchannelsRequest {
    return new ListclosedchannelsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListclosedchannelsRequest {
    return new ListclosedchannelsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListclosedchannelsRequest | PlainMessage<ListclosedchannelsRequest> | undefined, b: ListclosedchannelsRequest | PlainMessage<ListclosedchannelsRequest> | undefined): boolean {
    return proto3.util.equals(ListclosedchannelsRequest, a, b);
  }
}

/**
 * @generated from message cln.ListclosedchannelsResponse
 */
export class ListclosedchannelsResponse extends Message<ListclosedchannelsResponse> {
  /**
   * @generated from field: repeated cln.ListclosedchannelsClosedchannels closedchannels = 1;
   */
  closedchannels: ListclosedchannelsClosedchannels[] = [];

  constructor(data?: PartialMessage<ListclosedchannelsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.ListclosedchannelsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "closedchannels", kind: "message", T: ListclosedchannelsClosedchannels, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListclosedchannelsResponse {
    return new ListclosedchannelsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListclosedchannelsResponse {
    return new ListclosedchannelsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListclosedchannelsResponse {
    return new ListclosedchannelsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListclosedchannelsResponse | PlainMessage<ListclosedchannelsResponse> | undefined, b: ListclosedchannelsResponse | PlainMessage<ListclosedchannelsResponse> | undefined): boolean {
    return proto3.util.equals(ListclosedchannelsResponse, a, b);
  }
}

/**
 * @generated from message cln.ListclosedchannelsClosedchannels
 */
export class ListclosedchannelsClosedchannels extends Message<ListclosedchannelsClosedchannels> {
  /**
   * @generated from field: optional bytes peer_id = 1;
   */
  peerId?: Uint8Array;

  /**
   * @generated from field: bytes channel_id = 2;
   */
  channelId = new Uint8Array(0);

  /**
   * @generated from field: optional string short_channel_id = 3;
   */
  shortChannelId?: string;

  /**
   * @generated from field: optional cln.ListclosedchannelsClosedchannelsAlias alias = 4;
   */
  alias?: ListclosedchannelsClosedchannelsAlias;

  /**
   * @generated from field: cln.ChannelSide opener = 5;
   */
  opener = ChannelSide.LOCAL;

  /**
   * @generated from field: optional cln.ChannelSide closer = 6;
   */
  closer?: ChannelSide;

  /**
   * @generated from field: bool private = 7;
   */
  private = false;

  /**
   * @generated from field: uint64 total_local_commitments = 9;
   */
  totalLocalCommitments = protoInt64.zero;

  /**
   * @generated from field: uint64 total_remote_commitments = 10;
   */
  totalRemoteCommitments = protoInt64.zero;

  /**
   * @generated from field: uint64 total_htlcs_sent = 11;
   */
  totalHtlcsSent = protoInt64.zero;

  /**
   * @generated from field: bytes funding_txid = 12;
   */
  fundingTxid = new Uint8Array(0);

  /**
   * @generated from field: uint32 funding_outnum = 13;
   */
  fundingOutnum = 0;

  /**
   * @generated from field: bool leased = 14;
   */
  leased = false;

  /**
   * @generated from field: optional cln.Amount funding_fee_paid_msat = 15;
   */
  fundingFeePaidMsat?: Amount;

  /**
   * @generated from field: optional cln.Amount funding_fee_rcvd_msat = 16;
   */
  fundingFeeRcvdMsat?: Amount;

  /**
   * @generated from field: optional cln.Amount funding_pushed_msat = 17;
   */
  fundingPushedMsat?: Amount;

  /**
   * @generated from field: cln.Amount total_msat = 18;
   */
  totalMsat?: Amount;

  /**
   * @generated from field: cln.Amount final_to_us_msat = 19;
   */
  finalToUsMsat?: Amount;

  /**
   * @generated from field: cln.Amount min_to_us_msat = 20;
   */
  minToUsMsat?: Amount;

  /**
   * @generated from field: cln.Amount max_to_us_msat = 21;
   */
  maxToUsMsat?: Amount;

  /**
   * @generated from field: optional bytes last_commitment_txid = 22;
   */
  lastCommitmentTxid?: Uint8Array;

  /**
   * @generated from field: optional cln.Amount last_commitment_fee_msat = 23;
   */
  lastCommitmentFeeMsat?: Amount;

  /**
   * @generated from field: cln.ListclosedchannelsClosedchannels.ListclosedchannelsClosedchannelsClose_cause close_cause = 24;
   */
  closeCause = ListclosedchannelsClosedchannels_ListclosedchannelsClosedchannelsClose_cause.UNKNOWN;

  constructor(data?: PartialMessage<ListclosedchannelsClosedchannels>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.ListclosedchannelsClosedchannels";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "peer_id", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 2, name: "channel_id", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 3, name: "short_channel_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "alias", kind: "message", T: ListclosedchannelsClosedchannelsAlias, opt: true },
    { no: 5, name: "opener", kind: "enum", T: proto3.getEnumType(ChannelSide) },
    { no: 6, name: "closer", kind: "enum", T: proto3.getEnumType(ChannelSide), opt: true },
    { no: 7, name: "private", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 9, name: "total_local_commitments", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "total_remote_commitments", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "total_htlcs_sent", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "funding_txid", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 13, name: "funding_outnum", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 14, name: "leased", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 15, name: "funding_fee_paid_msat", kind: "message", T: Amount, opt: true },
    { no: 16, name: "funding_fee_rcvd_msat", kind: "message", T: Amount, opt: true },
    { no: 17, name: "funding_pushed_msat", kind: "message", T: Amount, opt: true },
    { no: 18, name: "total_msat", kind: "message", T: Amount },
    { no: 19, name: "final_to_us_msat", kind: "message", T: Amount },
    { no: 20, name: "min_to_us_msat", kind: "message", T: Amount },
    { no: 21, name: "max_to_us_msat", kind: "message", T: Amount },
    { no: 22, name: "last_commitment_txid", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 23, name: "last_commitment_fee_msat", kind: "message", T: Amount, opt: true },
    { no: 24, name: "close_cause", kind: "enum", T: proto3.getEnumType(ListclosedchannelsClosedchannels_ListclosedchannelsClosedchannelsClose_cause) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListclosedchannelsClosedchannels {
    return new ListclosedchannelsClosedchannels().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListclosedchannelsClosedchannels {
    return new ListclosedchannelsClosedchannels().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListclosedchannelsClosedchannels {
    return new ListclosedchannelsClosedchannels().fromJsonString(jsonString, options);
  }

  static equals(a: ListclosedchannelsClosedchannels | PlainMessage<ListclosedchannelsClosedchannels> | undefined, b: ListclosedchannelsClosedchannels | PlainMessage<ListclosedchannelsClosedchannels> | undefined): boolean {
    return proto3.util.equals(ListclosedchannelsClosedchannels, a, b);
  }
}

/**
 * ListClosedChannels.closedchannels[].close_cause
 *
 * @generated from enum cln.ListclosedchannelsClosedchannels.ListclosedchannelsClosedchannelsClose_cause
 */
export enum ListclosedchannelsClosedchannels_ListclosedchannelsClosedchannelsClose_cause {
  /**
   * @generated from enum value: UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * @generated from enum value: LOCAL = 1;
   */
  LOCAL = 1,

  /**
   * @generated from enum value: USER = 2;
   */
  USER = 2,

  /**
   * @generated from enum value: REMOTE = 3;
   */
  REMOTE = 3,

  /**
   * @generated from enum value: PROTOCOL = 4;
   */
  PROTOCOL = 4,

  /**
   * @generated from enum value: ONCHAIN = 5;
   */
  ONCHAIN = 5,
}
// Retrieve enum metadata with: proto3.getEnumType(ListclosedchannelsClosedchannels_ListclosedchannelsClosedchannelsClose_cause)
proto3.util.setEnumType(ListclosedchannelsClosedchannels_ListclosedchannelsClosedchannelsClose_cause, "cln.ListclosedchannelsClosedchannels.ListclosedchannelsClosedchannelsClose_cause", [
  { no: 0, name: "UNKNOWN" },
  { no: 1, name: "LOCAL" },
  { no: 2, name: "USER" },
  { no: 3, name: "REMOTE" },
  { no: 4, name: "PROTOCOL" },
  { no: 5, name: "ONCHAIN" },
]);

/**
 * @generated from message cln.ListclosedchannelsClosedchannelsAlias
 */
export class ListclosedchannelsClosedchannelsAlias extends Message<ListclosedchannelsClosedchannelsAlias> {
  /**
   * @generated from field: optional string local = 1;
   */
  local?: string;

  /**
   * @generated from field: optional string remote = 2;
   */
  remote?: string;

  constructor(data?: PartialMessage<ListclosedchannelsClosedchannelsAlias>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.ListclosedchannelsClosedchannelsAlias";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "local", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "remote", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListclosedchannelsClosedchannelsAlias {
    return new ListclosedchannelsClosedchannelsAlias().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListclosedchannelsClosedchannelsAlias {
    return new ListclosedchannelsClosedchannelsAlias().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListclosedchannelsClosedchannelsAlias {
    return new ListclosedchannelsClosedchannelsAlias().fromJsonString(jsonString, options);
  }

  static equals(a: ListclosedchannelsClosedchannelsAlias | PlainMessage<ListclosedchannelsClosedchannelsAlias> | undefined, b: ListclosedchannelsClosedchannelsAlias | PlainMessage<ListclosedchannelsClosedchannelsAlias> | undefined): boolean {
    return proto3.util.equals(ListclosedchannelsClosedchannelsAlias, a, b);
  }
}

/**
 * @generated from message cln.DecodepayRequest
 */
export class DecodepayRequest extends Message<DecodepayRequest> {
  /**
   * @generated from field: string bolt11 = 1;
   */
  bolt11 = "";

  /**
   * @generated from field: optional string description = 2;
   */
  description?: string;

  constructor(data?: PartialMessage<DecodepayRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.DecodepayRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "bolt11", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DecodepayRequest {
    return new DecodepayRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DecodepayRequest {
    return new DecodepayRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DecodepayRequest {
    return new DecodepayRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DecodepayRequest | PlainMessage<DecodepayRequest> | undefined, b: DecodepayRequest | PlainMessage<DecodepayRequest> | undefined): boolean {
    return proto3.util.equals(DecodepayRequest, a, b);
  }
}

/**
 * @generated from message cln.DecodepayResponse
 */
export class DecodepayResponse extends Message<DecodepayResponse> {
  /**
   * @generated from field: string currency = 1;
   */
  currency = "";

  /**
   * @generated from field: uint64 created_at = 2;
   */
  createdAt = protoInt64.zero;

  /**
   * @generated from field: uint64 expiry = 3;
   */
  expiry = protoInt64.zero;

  /**
   * @generated from field: bytes payee = 4;
   */
  payee = new Uint8Array(0);

  /**
   * @generated from field: optional cln.Amount amount_msat = 5;
   */
  amountMsat?: Amount;

  /**
   * @generated from field: bytes payment_hash = 6;
   */
  paymentHash = new Uint8Array(0);

  /**
   * @generated from field: string signature = 7;
   */
  signature = "";

  /**
   * @generated from field: optional string description = 8;
   */
  description?: string;

  /**
   * @generated from field: optional bytes description_hash = 9;
   */
  descriptionHash?: Uint8Array;

  /**
   * @generated from field: uint32 min_final_cltv_expiry = 10;
   */
  minFinalCltvExpiry = 0;

  /**
   * @generated from field: optional bytes payment_secret = 11;
   */
  paymentSecret?: Uint8Array;

  /**
   * @generated from field: optional bytes features = 12;
   */
  features?: Uint8Array;

  /**
   * @generated from field: optional bytes payment_metadata = 13;
   */
  paymentMetadata?: Uint8Array;

  /**
   * @generated from field: repeated cln.DecodepayFallbacks fallbacks = 14;
   */
  fallbacks: DecodepayFallbacks[] = [];

  /**
   * @generated from field: repeated cln.DecodepayExtra extra = 16;
   */
  extra: DecodepayExtra[] = [];

  constructor(data?: PartialMessage<DecodepayResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.DecodepayResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "currency", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "created_at", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "expiry", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "payee", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 5, name: "amount_msat", kind: "message", T: Amount, opt: true },
    { no: 6, name: "payment_hash", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 7, name: "signature", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 9, name: "description_hash", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 10, name: "min_final_cltv_expiry", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 11, name: "payment_secret", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 12, name: "features", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 13, name: "payment_metadata", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 14, name: "fallbacks", kind: "message", T: DecodepayFallbacks, repeated: true },
    { no: 16, name: "extra", kind: "message", T: DecodepayExtra, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DecodepayResponse {
    return new DecodepayResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DecodepayResponse {
    return new DecodepayResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DecodepayResponse {
    return new DecodepayResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DecodepayResponse | PlainMessage<DecodepayResponse> | undefined, b: DecodepayResponse | PlainMessage<DecodepayResponse> | undefined): boolean {
    return proto3.util.equals(DecodepayResponse, a, b);
  }
}

/**
 * @generated from message cln.DecodepayFallbacks
 */
export class DecodepayFallbacks extends Message<DecodepayFallbacks> {
  /**
   * @generated from field: cln.DecodepayFallbacks.DecodepayFallbacksType item_type = 1;
   */
  itemType = DecodepayFallbacks_DecodepayFallbacksType.P2PKH;

  /**
   * @generated from field: optional string addr = 2;
   */
  addr?: string;

  /**
   * @generated from field: bytes hex = 3;
   */
  hex = new Uint8Array(0);

  constructor(data?: PartialMessage<DecodepayFallbacks>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.DecodepayFallbacks";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "item_type", kind: "enum", T: proto3.getEnumType(DecodepayFallbacks_DecodepayFallbacksType) },
    { no: 2, name: "addr", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "hex", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DecodepayFallbacks {
    return new DecodepayFallbacks().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DecodepayFallbacks {
    return new DecodepayFallbacks().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DecodepayFallbacks {
    return new DecodepayFallbacks().fromJsonString(jsonString, options);
  }

  static equals(a: DecodepayFallbacks | PlainMessage<DecodepayFallbacks> | undefined, b: DecodepayFallbacks | PlainMessage<DecodepayFallbacks> | undefined): boolean {
    return proto3.util.equals(DecodepayFallbacks, a, b);
  }
}

/**
 * DecodePay.fallbacks[].type
 *
 * @generated from enum cln.DecodepayFallbacks.DecodepayFallbacksType
 */
export enum DecodepayFallbacks_DecodepayFallbacksType {
  /**
   * @generated from enum value: P2PKH = 0;
   */
  P2PKH = 0,

  /**
   * @generated from enum value: P2SH = 1;
   */
  P2SH = 1,

  /**
   * @generated from enum value: P2WPKH = 2;
   */
  P2WPKH = 2,

  /**
   * @generated from enum value: P2WSH = 3;
   */
  P2WSH = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(DecodepayFallbacks_DecodepayFallbacksType)
proto3.util.setEnumType(DecodepayFallbacks_DecodepayFallbacksType, "cln.DecodepayFallbacks.DecodepayFallbacksType", [
  { no: 0, name: "P2PKH" },
  { no: 1, name: "P2SH" },
  { no: 2, name: "P2WPKH" },
  { no: 3, name: "P2WSH" },
]);

/**
 * @generated from message cln.DecodepayExtra
 */
export class DecodepayExtra extends Message<DecodepayExtra> {
  /**
   * @generated from field: string tag = 1;
   */
  tag = "";

  /**
   * @generated from field: string data = 2;
   */
  data = "";

  constructor(data?: PartialMessage<DecodepayExtra>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.DecodepayExtra";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "tag", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "data", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DecodepayExtra {
    return new DecodepayExtra().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DecodepayExtra {
    return new DecodepayExtra().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DecodepayExtra {
    return new DecodepayExtra().fromJsonString(jsonString, options);
  }

  static equals(a: DecodepayExtra | PlainMessage<DecodepayExtra> | undefined, b: DecodepayExtra | PlainMessage<DecodepayExtra> | undefined): boolean {
    return proto3.util.equals(DecodepayExtra, a, b);
  }
}

/**
 * @generated from message cln.DecodeRequest
 */
export class DecodeRequest extends Message<DecodeRequest> {
  /**
   * @generated from field: string string = 1;
   */
  string = "";

  constructor(data?: PartialMessage<DecodeRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.DecodeRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "string", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DecodeRequest {
    return new DecodeRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DecodeRequest {
    return new DecodeRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DecodeRequest {
    return new DecodeRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DecodeRequest | PlainMessage<DecodeRequest> | undefined, b: DecodeRequest | PlainMessage<DecodeRequest> | undefined): boolean {
    return proto3.util.equals(DecodeRequest, a, b);
  }
}

/**
 * @generated from message cln.DecodeResponse
 */
export class DecodeResponse extends Message<DecodeResponse> {
  /**
   * @generated from field: cln.DecodeResponse.DecodeType item_type = 1;
   */
  itemType = DecodeResponse_DecodeType.BOLT12_OFFER;

  /**
   * @generated from field: bool valid = 2;
   */
  valid = false;

  /**
   * @generated from field: optional bytes offer_id = 3;
   */
  offerId?: Uint8Array;

  /**
   * @generated from field: repeated bytes offer_chains = 4;
   */
  offerChains: Uint8Array[] = [];

  /**
   * @generated from field: optional bytes offer_metadata = 5;
   */
  offerMetadata?: Uint8Array;

  /**
   * @generated from field: optional string offer_currency = 6;
   */
  offerCurrency?: string;

  /**
   * @generated from field: optional string warning_unknown_offer_currency = 7;
   */
  warningUnknownOfferCurrency?: string;

  /**
   * @generated from field: optional uint32 currency_minor_unit = 8;
   */
  currencyMinorUnit?: number;

  /**
   * @generated from field: optional uint64 offer_amount = 9;
   */
  offerAmount?: bigint;

  /**
   * @generated from field: optional cln.Amount offer_amount_msat = 10;
   */
  offerAmountMsat?: Amount;

  /**
   * @generated from field: optional string offer_description = 11;
   */
  offerDescription?: string;

  /**
   * @generated from field: optional string offer_issuer = 12;
   */
  offerIssuer?: string;

  /**
   * @generated from field: optional bytes offer_features = 13;
   */
  offerFeatures?: Uint8Array;

  /**
   * @generated from field: optional uint64 offer_absolute_expiry = 14;
   */
  offerAbsoluteExpiry?: bigint;

  /**
   * @generated from field: optional uint64 offer_quantity_max = 15;
   */
  offerQuantityMax?: bigint;

  /**
   * @generated from field: repeated cln.DecodeOffer_paths offer_paths = 16;
   */
  offerPaths: DecodeOffer_paths[] = [];

  /**
   * @generated from field: optional bytes offer_node_id = 17;
   */
  offerNodeId?: Uint8Array;

  /**
   * @generated from field: optional string warning_missing_offer_node_id = 20;
   */
  warningMissingOfferNodeId?: string;

  /**
   * @generated from field: optional string warning_invalid_offer_description = 21;
   */
  warningInvalidOfferDescription?: string;

  /**
   * @generated from field: optional string warning_missing_offer_description = 22;
   */
  warningMissingOfferDescription?: string;

  /**
   * @generated from field: optional string warning_invalid_offer_currency = 23;
   */
  warningInvalidOfferCurrency?: string;

  /**
   * @generated from field: optional string warning_invalid_offer_issuer = 24;
   */
  warningInvalidOfferIssuer?: string;

  /**
   * @generated from field: optional bytes invreq_metadata = 25;
   */
  invreqMetadata?: Uint8Array;

  /**
   * @generated from field: optional bytes invreq_payer_id = 26;
   */
  invreqPayerId?: Uint8Array;

  /**
   * @generated from field: optional bytes invreq_chain = 27;
   */
  invreqChain?: Uint8Array;

  /**
   * @generated from field: optional cln.Amount invreq_amount_msat = 28;
   */
  invreqAmountMsat?: Amount;

  /**
   * @generated from field: optional bytes invreq_features = 29;
   */
  invreqFeatures?: Uint8Array;

  /**
   * @generated from field: optional uint64 invreq_quantity = 30;
   */
  invreqQuantity?: bigint;

  /**
   * @generated from field: optional string invreq_payer_note = 31;
   */
  invreqPayerNote?: string;

  /**
   * @generated from field: optional uint32 invreq_recurrence_counter = 32;
   */
  invreqRecurrenceCounter?: number;

  /**
   * @generated from field: optional uint32 invreq_recurrence_start = 33;
   */
  invreqRecurrenceStart?: number;

  /**
   * @generated from field: optional string warning_missing_invreq_metadata = 35;
   */
  warningMissingInvreqMetadata?: string;

  /**
   * @generated from field: optional string warning_missing_invreq_payer_id = 36;
   */
  warningMissingInvreqPayerId?: string;

  /**
   * @generated from field: optional string warning_invalid_invreq_payer_note = 37;
   */
  warningInvalidInvreqPayerNote?: string;

  /**
   * @generated from field: optional string warning_missing_invoice_request_signature = 38;
   */
  warningMissingInvoiceRequestSignature?: string;

  /**
   * @generated from field: optional string warning_invalid_invoice_request_signature = 39;
   */
  warningInvalidInvoiceRequestSignature?: string;

  /**
   * @generated from field: optional uint64 invoice_created_at = 41;
   */
  invoiceCreatedAt?: bigint;

  /**
   * @generated from field: optional uint32 invoice_relative_expiry = 42;
   */
  invoiceRelativeExpiry?: number;

  /**
   * @generated from field: optional bytes invoice_payment_hash = 43;
   */
  invoicePaymentHash?: Uint8Array;

  /**
   * @generated from field: optional cln.Amount invoice_amount_msat = 44;
   */
  invoiceAmountMsat?: Amount;

  /**
   * @generated from field: repeated cln.DecodeInvoice_fallbacks invoice_fallbacks = 45;
   */
  invoiceFallbacks: DecodeInvoice_fallbacks[] = [];

  /**
   * @generated from field: optional bytes invoice_features = 46;
   */
  invoiceFeatures?: Uint8Array;

  /**
   * @generated from field: optional bytes invoice_node_id = 47;
   */
  invoiceNodeId?: Uint8Array;

  /**
   * @generated from field: optional uint64 invoice_recurrence_basetime = 48;
   */
  invoiceRecurrenceBasetime?: bigint;

  /**
   * @generated from field: optional string warning_missing_invoice_paths = 50;
   */
  warningMissingInvoicePaths?: string;

  /**
   * @generated from field: optional string warning_missing_invoice_blindedpay = 51;
   */
  warningMissingInvoiceBlindedpay?: string;

  /**
   * @generated from field: optional string warning_missing_invoice_created_at = 52;
   */
  warningMissingInvoiceCreatedAt?: string;

  /**
   * @generated from field: optional string warning_missing_invoice_payment_hash = 53;
   */
  warningMissingInvoicePaymentHash?: string;

  /**
   * @generated from field: optional string warning_missing_invoice_amount = 54;
   */
  warningMissingInvoiceAmount?: string;

  /**
   * @generated from field: optional string warning_missing_invoice_recurrence_basetime = 55;
   */
  warningMissingInvoiceRecurrenceBasetime?: string;

  /**
   * @generated from field: optional string warning_missing_invoice_node_id = 56;
   */
  warningMissingInvoiceNodeId?: string;

  /**
   * @generated from field: optional string warning_missing_invoice_signature = 57;
   */
  warningMissingInvoiceSignature?: string;

  /**
   * @generated from field: optional string warning_invalid_invoice_signature = 58;
   */
  warningInvalidInvoiceSignature?: string;

  /**
   * @generated from field: repeated cln.DecodeFallbacks fallbacks = 59;
   */
  fallbacks: DecodeFallbacks[] = [];

  /**
   * @generated from field: optional uint64 created_at = 60;
   */
  createdAt?: bigint;

  /**
   * @generated from field: optional uint64 expiry = 61;
   */
  expiry?: bigint;

  /**
   * @generated from field: optional bytes payee = 62;
   */
  payee?: Uint8Array;

  /**
   * @generated from field: optional bytes payment_hash = 63;
   */
  paymentHash?: Uint8Array;

  /**
   * @generated from field: optional bytes description_hash = 64;
   */
  descriptionHash?: Uint8Array;

  /**
   * @generated from field: optional uint32 min_final_cltv_expiry = 65;
   */
  minFinalCltvExpiry?: number;

  /**
   * @generated from field: optional bytes payment_secret = 66;
   */
  paymentSecret?: Uint8Array;

  /**
   * @generated from field: optional bytes payment_metadata = 67;
   */
  paymentMetadata?: Uint8Array;

  /**
   * @generated from field: repeated cln.DecodeExtra extra = 69;
   */
  extra: DecodeExtra[] = [];

  /**
   * @generated from field: optional string unique_id = 70;
   */
  uniqueId?: string;

  /**
   * @generated from field: optional string version = 71;
   */
  version?: string;

  /**
   * @generated from field: optional string string = 72;
   */
  string?: string;

  /**
   * @generated from field: repeated cln.DecodeRestrictions restrictions = 73;
   */
  restrictions: DecodeRestrictions[] = [];

  /**
   * @generated from field: optional string warning_rune_invalid_utf8 = 74;
   */
  warningRuneInvalidUtf8?: string;

  /**
   * @generated from field: optional bytes hex = 75;
   */
  hex?: Uint8Array;

  constructor(data?: PartialMessage<DecodeResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.DecodeResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "item_type", kind: "enum", T: proto3.getEnumType(DecodeResponse_DecodeType) },
    { no: 2, name: "valid", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 3, name: "offer_id", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 4, name: "offer_chains", kind: "scalar", T: 12 /* ScalarType.BYTES */, repeated: true },
    { no: 5, name: "offer_metadata", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 6, name: "offer_currency", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 7, name: "warning_unknown_offer_currency", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 8, name: "currency_minor_unit", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 9, name: "offer_amount", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 10, name: "offer_amount_msat", kind: "message", T: Amount, opt: true },
    { no: 11, name: "offer_description", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 12, name: "offer_issuer", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 13, name: "offer_features", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 14, name: "offer_absolute_expiry", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 15, name: "offer_quantity_max", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 16, name: "offer_paths", kind: "message", T: DecodeOffer_paths, repeated: true },
    { no: 17, name: "offer_node_id", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 20, name: "warning_missing_offer_node_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 21, name: "warning_invalid_offer_description", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 22, name: "warning_missing_offer_description", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 23, name: "warning_invalid_offer_currency", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 24, name: "warning_invalid_offer_issuer", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 25, name: "invreq_metadata", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 26, name: "invreq_payer_id", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 27, name: "invreq_chain", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 28, name: "invreq_amount_msat", kind: "message", T: Amount, opt: true },
    { no: 29, name: "invreq_features", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 30, name: "invreq_quantity", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 31, name: "invreq_payer_note", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 32, name: "invreq_recurrence_counter", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 33, name: "invreq_recurrence_start", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 35, name: "warning_missing_invreq_metadata", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 36, name: "warning_missing_invreq_payer_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 37, name: "warning_invalid_invreq_payer_note", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 38, name: "warning_missing_invoice_request_signature", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 39, name: "warning_invalid_invoice_request_signature", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 41, name: "invoice_created_at", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 42, name: "invoice_relative_expiry", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 43, name: "invoice_payment_hash", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 44, name: "invoice_amount_msat", kind: "message", T: Amount, opt: true },
    { no: 45, name: "invoice_fallbacks", kind: "message", T: DecodeInvoice_fallbacks, repeated: true },
    { no: 46, name: "invoice_features", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 47, name: "invoice_node_id", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 48, name: "invoice_recurrence_basetime", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 50, name: "warning_missing_invoice_paths", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 51, name: "warning_missing_invoice_blindedpay", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 52, name: "warning_missing_invoice_created_at", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 53, name: "warning_missing_invoice_payment_hash", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 54, name: "warning_missing_invoice_amount", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 55, name: "warning_missing_invoice_recurrence_basetime", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 56, name: "warning_missing_invoice_node_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 57, name: "warning_missing_invoice_signature", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 58, name: "warning_invalid_invoice_signature", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 59, name: "fallbacks", kind: "message", T: DecodeFallbacks, repeated: true },
    { no: 60, name: "created_at", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 61, name: "expiry", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 62, name: "payee", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 63, name: "payment_hash", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 64, name: "description_hash", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 65, name: "min_final_cltv_expiry", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 66, name: "payment_secret", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 67, name: "payment_metadata", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 69, name: "extra", kind: "message", T: DecodeExtra, repeated: true },
    { no: 70, name: "unique_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 71, name: "version", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 72, name: "string", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 73, name: "restrictions", kind: "message", T: DecodeRestrictions, repeated: true },
    { no: 74, name: "warning_rune_invalid_utf8", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 75, name: "hex", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DecodeResponse {
    return new DecodeResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DecodeResponse {
    return new DecodeResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DecodeResponse {
    return new DecodeResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DecodeResponse | PlainMessage<DecodeResponse> | undefined, b: DecodeResponse | PlainMessage<DecodeResponse> | undefined): boolean {
    return proto3.util.equals(DecodeResponse, a, b);
  }
}

/**
 * Decode.type
 *
 * @generated from enum cln.DecodeResponse.DecodeType
 */
export enum DecodeResponse_DecodeType {
  /**
   * @generated from enum value: BOLT12_OFFER = 0;
   */
  BOLT12_OFFER = 0,

  /**
   * @generated from enum value: BOLT12_INVOICE = 1;
   */
  BOLT12_INVOICE = 1,

  /**
   * @generated from enum value: BOLT12_INVOICE_REQUEST = 2;
   */
  BOLT12_INVOICE_REQUEST = 2,

  /**
   * @generated from enum value: BOLT11_INVOICE = 3;
   */
  BOLT11_INVOICE = 3,

  /**
   * @generated from enum value: RUNE = 4;
   */
  RUNE = 4,
}
// Retrieve enum metadata with: proto3.getEnumType(DecodeResponse_DecodeType)
proto3.util.setEnumType(DecodeResponse_DecodeType, "cln.DecodeResponse.DecodeType", [
  { no: 0, name: "BOLT12_OFFER" },
  { no: 1, name: "BOLT12_INVOICE" },
  { no: 2, name: "BOLT12_INVOICE_REQUEST" },
  { no: 3, name: "BOLT11_INVOICE" },
  { no: 4, name: "RUNE" },
]);

/**
 * @generated from message cln.DecodeOffer_paths
 */
export class DecodeOffer_paths extends Message<DecodeOffer_paths> {
  /**
   * @generated from field: bytes first_node_id = 1;
   */
  firstNodeId = new Uint8Array(0);

  /**
   * @generated from field: bytes blinding = 2;
   */
  blinding = new Uint8Array(0);

  constructor(data?: PartialMessage<DecodeOffer_paths>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.DecodeOffer_paths";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "first_node_id", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 2, name: "blinding", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DecodeOffer_paths {
    return new DecodeOffer_paths().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DecodeOffer_paths {
    return new DecodeOffer_paths().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DecodeOffer_paths {
    return new DecodeOffer_paths().fromJsonString(jsonString, options);
  }

  static equals(a: DecodeOffer_paths | PlainMessage<DecodeOffer_paths> | undefined, b: DecodeOffer_paths | PlainMessage<DecodeOffer_paths> | undefined): boolean {
    return proto3.util.equals(DecodeOffer_paths, a, b);
  }
}

/**
 * @generated from message cln.DecodeOffer_recurrencePaywindow
 */
export class DecodeOffer_recurrencePaywindow extends Message<DecodeOffer_recurrencePaywindow> {
  /**
   * @generated from field: uint32 seconds_before = 1;
   */
  secondsBefore = 0;

  /**
   * @generated from field: uint32 seconds_after = 2;
   */
  secondsAfter = 0;

  /**
   * @generated from field: optional bool proportional_amount = 3;
   */
  proportionalAmount?: boolean;

  constructor(data?: PartialMessage<DecodeOffer_recurrencePaywindow>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.DecodeOffer_recurrencePaywindow";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "seconds_before", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 2, name: "seconds_after", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 3, name: "proportional_amount", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DecodeOffer_recurrencePaywindow {
    return new DecodeOffer_recurrencePaywindow().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DecodeOffer_recurrencePaywindow {
    return new DecodeOffer_recurrencePaywindow().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DecodeOffer_recurrencePaywindow {
    return new DecodeOffer_recurrencePaywindow().fromJsonString(jsonString, options);
  }

  static equals(a: DecodeOffer_recurrencePaywindow | PlainMessage<DecodeOffer_recurrencePaywindow> | undefined, b: DecodeOffer_recurrencePaywindow | PlainMessage<DecodeOffer_recurrencePaywindow> | undefined): boolean {
    return proto3.util.equals(DecodeOffer_recurrencePaywindow, a, b);
  }
}

/**
 * @generated from message cln.DecodeInvoice_pathsPath
 */
export class DecodeInvoice_pathsPath extends Message<DecodeInvoice_pathsPath> {
  /**
   * @generated from field: bytes blinded_node_id = 1;
   */
  blindedNodeId = new Uint8Array(0);

  /**
   * @generated from field: bytes encrypted_recipient_data = 2;
   */
  encryptedRecipientData = new Uint8Array(0);

  constructor(data?: PartialMessage<DecodeInvoice_pathsPath>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.DecodeInvoice_pathsPath";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "blinded_node_id", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 2, name: "encrypted_recipient_data", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DecodeInvoice_pathsPath {
    return new DecodeInvoice_pathsPath().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DecodeInvoice_pathsPath {
    return new DecodeInvoice_pathsPath().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DecodeInvoice_pathsPath {
    return new DecodeInvoice_pathsPath().fromJsonString(jsonString, options);
  }

  static equals(a: DecodeInvoice_pathsPath | PlainMessage<DecodeInvoice_pathsPath> | undefined, b: DecodeInvoice_pathsPath | PlainMessage<DecodeInvoice_pathsPath> | undefined): boolean {
    return proto3.util.equals(DecodeInvoice_pathsPath, a, b);
  }
}

/**
 * @generated from message cln.DecodeInvoice_fallbacks
 */
export class DecodeInvoice_fallbacks extends Message<DecodeInvoice_fallbacks> {
  /**
   * @generated from field: uint32 version = 1;
   */
  version = 0;

  /**
   * @generated from field: bytes hex = 2;
   */
  hex = new Uint8Array(0);

  /**
   * @generated from field: optional string address = 3;
   */
  address?: string;

  constructor(data?: PartialMessage<DecodeInvoice_fallbacks>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.DecodeInvoice_fallbacks";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "version", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 2, name: "hex", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 3, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DecodeInvoice_fallbacks {
    return new DecodeInvoice_fallbacks().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DecodeInvoice_fallbacks {
    return new DecodeInvoice_fallbacks().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DecodeInvoice_fallbacks {
    return new DecodeInvoice_fallbacks().fromJsonString(jsonString, options);
  }

  static equals(a: DecodeInvoice_fallbacks | PlainMessage<DecodeInvoice_fallbacks> | undefined, b: DecodeInvoice_fallbacks | PlainMessage<DecodeInvoice_fallbacks> | undefined): boolean {
    return proto3.util.equals(DecodeInvoice_fallbacks, a, b);
  }
}

/**
 * @generated from message cln.DecodeFallbacks
 */
export class DecodeFallbacks extends Message<DecodeFallbacks> {
  /**
   * @generated from field: optional string warning_invoice_fallbacks_version_invalid = 1;
   */
  warningInvoiceFallbacksVersionInvalid?: string;

  constructor(data?: PartialMessage<DecodeFallbacks>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.DecodeFallbacks";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "warning_invoice_fallbacks_version_invalid", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DecodeFallbacks {
    return new DecodeFallbacks().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DecodeFallbacks {
    return new DecodeFallbacks().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DecodeFallbacks {
    return new DecodeFallbacks().fromJsonString(jsonString, options);
  }

  static equals(a: DecodeFallbacks | PlainMessage<DecodeFallbacks> | undefined, b: DecodeFallbacks | PlainMessage<DecodeFallbacks> | undefined): boolean {
    return proto3.util.equals(DecodeFallbacks, a, b);
  }
}

/**
 * @generated from message cln.DecodeExtra
 */
export class DecodeExtra extends Message<DecodeExtra> {
  /**
   * @generated from field: string tag = 1;
   */
  tag = "";

  /**
   * @generated from field: string data = 2;
   */
  data = "";

  constructor(data?: PartialMessage<DecodeExtra>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.DecodeExtra";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "tag", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "data", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DecodeExtra {
    return new DecodeExtra().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DecodeExtra {
    return new DecodeExtra().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DecodeExtra {
    return new DecodeExtra().fromJsonString(jsonString, options);
  }

  static equals(a: DecodeExtra | PlainMessage<DecodeExtra> | undefined, b: DecodeExtra | PlainMessage<DecodeExtra> | undefined): boolean {
    return proto3.util.equals(DecodeExtra, a, b);
  }
}

/**
 * @generated from message cln.DecodeRestrictions
 */
export class DecodeRestrictions extends Message<DecodeRestrictions> {
  /**
   * @generated from field: repeated string alternatives = 1;
   */
  alternatives: string[] = [];

  /**
   * @generated from field: string summary = 2;
   */
  summary = "";

  constructor(data?: PartialMessage<DecodeRestrictions>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.DecodeRestrictions";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "alternatives", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 2, name: "summary", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DecodeRestrictions {
    return new DecodeRestrictions().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DecodeRestrictions {
    return new DecodeRestrictions().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DecodeRestrictions {
    return new DecodeRestrictions().fromJsonString(jsonString, options);
  }

  static equals(a: DecodeRestrictions | PlainMessage<DecodeRestrictions> | undefined, b: DecodeRestrictions | PlainMessage<DecodeRestrictions> | undefined): boolean {
    return proto3.util.equals(DecodeRestrictions, a, b);
  }
}

/**
 * @generated from message cln.DisconnectRequest
 */
export class DisconnectRequest extends Message<DisconnectRequest> {
  /**
   * @generated from field: bytes id = 1;
   */
  id = new Uint8Array(0);

  /**
   * @generated from field: optional bool force = 2;
   */
  force?: boolean;

  constructor(data?: PartialMessage<DisconnectRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.DisconnectRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 2, name: "force", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DisconnectRequest {
    return new DisconnectRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DisconnectRequest {
    return new DisconnectRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DisconnectRequest {
    return new DisconnectRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DisconnectRequest | PlainMessage<DisconnectRequest> | undefined, b: DisconnectRequest | PlainMessage<DisconnectRequest> | undefined): boolean {
    return proto3.util.equals(DisconnectRequest, a, b);
  }
}

/**
 * @generated from message cln.DisconnectResponse
 */
export class DisconnectResponse extends Message<DisconnectResponse> {
  constructor(data?: PartialMessage<DisconnectResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.DisconnectResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DisconnectResponse {
    return new DisconnectResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DisconnectResponse {
    return new DisconnectResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DisconnectResponse {
    return new DisconnectResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DisconnectResponse | PlainMessage<DisconnectResponse> | undefined, b: DisconnectResponse | PlainMessage<DisconnectResponse> | undefined): boolean {
    return proto3.util.equals(DisconnectResponse, a, b);
  }
}

/**
 * @generated from message cln.FeeratesRequest
 */
export class FeeratesRequest extends Message<FeeratesRequest> {
  /**
   * @generated from field: cln.FeeratesRequest.FeeratesStyle style = 1;
   */
  style = FeeratesRequest_FeeratesStyle.PERKB;

  constructor(data?: PartialMessage<FeeratesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.FeeratesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "style", kind: "enum", T: proto3.getEnumType(FeeratesRequest_FeeratesStyle) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FeeratesRequest {
    return new FeeratesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FeeratesRequest {
    return new FeeratesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FeeratesRequest {
    return new FeeratesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: FeeratesRequest | PlainMessage<FeeratesRequest> | undefined, b: FeeratesRequest | PlainMessage<FeeratesRequest> | undefined): boolean {
    return proto3.util.equals(FeeratesRequest, a, b);
  }
}

/**
 * Feerates.style
 *
 * @generated from enum cln.FeeratesRequest.FeeratesStyle
 */
export enum FeeratesRequest_FeeratesStyle {
  /**
   * @generated from enum value: PERKB = 0;
   */
  PERKB = 0,

  /**
   * @generated from enum value: PERKW = 1;
   */
  PERKW = 1,
}
// Retrieve enum metadata with: proto3.getEnumType(FeeratesRequest_FeeratesStyle)
proto3.util.setEnumType(FeeratesRequest_FeeratesStyle, "cln.FeeratesRequest.FeeratesStyle", [
  { no: 0, name: "PERKB" },
  { no: 1, name: "PERKW" },
]);

/**
 * @generated from message cln.FeeratesResponse
 */
export class FeeratesResponse extends Message<FeeratesResponse> {
  /**
   * @generated from field: optional string warning_missing_feerates = 1;
   */
  warningMissingFeerates?: string;

  /**
   * @generated from field: optional cln.FeeratesPerkb perkb = 2;
   */
  perkb?: FeeratesPerkb;

  /**
   * @generated from field: optional cln.FeeratesPerkw perkw = 3;
   */
  perkw?: FeeratesPerkw;

  /**
   * @generated from field: optional cln.FeeratesOnchain_fee_estimates onchain_fee_estimates = 4;
   */
  onchainFeeEstimates?: FeeratesOnchain_fee_estimates;

  constructor(data?: PartialMessage<FeeratesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.FeeratesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "warning_missing_feerates", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "perkb", kind: "message", T: FeeratesPerkb, opt: true },
    { no: 3, name: "perkw", kind: "message", T: FeeratesPerkw, opt: true },
    { no: 4, name: "onchain_fee_estimates", kind: "message", T: FeeratesOnchain_fee_estimates, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FeeratesResponse {
    return new FeeratesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FeeratesResponse {
    return new FeeratesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FeeratesResponse {
    return new FeeratesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: FeeratesResponse | PlainMessage<FeeratesResponse> | undefined, b: FeeratesResponse | PlainMessage<FeeratesResponse> | undefined): boolean {
    return proto3.util.equals(FeeratesResponse, a, b);
  }
}

/**
 * @generated from message cln.FeeratesPerkb
 */
export class FeeratesPerkb extends Message<FeeratesPerkb> {
  /**
   * @generated from field: uint32 min_acceptable = 1;
   */
  minAcceptable = 0;

  /**
   * @generated from field: uint32 max_acceptable = 2;
   */
  maxAcceptable = 0;

  /**
   * @generated from field: optional uint32 floor = 10;
   */
  floor?: number;

  /**
   * @generated from field: repeated cln.FeeratesPerkbEstimates estimates = 9;
   */
  estimates: FeeratesPerkbEstimates[] = [];

  /**
   * @generated from field: optional uint32 opening = 3;
   */
  opening?: number;

  /**
   * @generated from field: optional uint32 mutual_close = 4;
   */
  mutualClose?: number;

  /**
   * @generated from field: optional uint32 unilateral_close = 5;
   */
  unilateralClose?: number;

  /**
   * @generated from field: optional uint32 unilateral_anchor_close = 11;
   */
  unilateralAnchorClose?: number;

  /**
   * @generated from field: optional uint32 delayed_to_us = 6;
   */
  delayedToUs?: number;

  /**
   * @generated from field: optional uint32 htlc_resolution = 7;
   */
  htlcResolution?: number;

  /**
   * @generated from field: optional uint32 penalty = 8;
   */
  penalty?: number;

  constructor(data?: PartialMessage<FeeratesPerkb>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.FeeratesPerkb";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "min_acceptable", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 2, name: "max_acceptable", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 10, name: "floor", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 9, name: "estimates", kind: "message", T: FeeratesPerkbEstimates, repeated: true },
    { no: 3, name: "opening", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 4, name: "mutual_close", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 5, name: "unilateral_close", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 11, name: "unilateral_anchor_close", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 6, name: "delayed_to_us", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 7, name: "htlc_resolution", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 8, name: "penalty", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FeeratesPerkb {
    return new FeeratesPerkb().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FeeratesPerkb {
    return new FeeratesPerkb().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FeeratesPerkb {
    return new FeeratesPerkb().fromJsonString(jsonString, options);
  }

  static equals(a: FeeratesPerkb | PlainMessage<FeeratesPerkb> | undefined, b: FeeratesPerkb | PlainMessage<FeeratesPerkb> | undefined): boolean {
    return proto3.util.equals(FeeratesPerkb, a, b);
  }
}

/**
 * @generated from message cln.FeeratesPerkbEstimates
 */
export class FeeratesPerkbEstimates extends Message<FeeratesPerkbEstimates> {
  /**
   * @generated from field: optional uint32 blockcount = 1;
   */
  blockcount?: number;

  /**
   * @generated from field: optional uint32 feerate = 2;
   */
  feerate?: number;

  /**
   * @generated from field: optional uint32 smoothed_feerate = 3;
   */
  smoothedFeerate?: number;

  constructor(data?: PartialMessage<FeeratesPerkbEstimates>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.FeeratesPerkbEstimates";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "blockcount", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 2, name: "feerate", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 3, name: "smoothed_feerate", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FeeratesPerkbEstimates {
    return new FeeratesPerkbEstimates().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FeeratesPerkbEstimates {
    return new FeeratesPerkbEstimates().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FeeratesPerkbEstimates {
    return new FeeratesPerkbEstimates().fromJsonString(jsonString, options);
  }

  static equals(a: FeeratesPerkbEstimates | PlainMessage<FeeratesPerkbEstimates> | undefined, b: FeeratesPerkbEstimates | PlainMessage<FeeratesPerkbEstimates> | undefined): boolean {
    return proto3.util.equals(FeeratesPerkbEstimates, a, b);
  }
}

/**
 * @generated from message cln.FeeratesPerkw
 */
export class FeeratesPerkw extends Message<FeeratesPerkw> {
  /**
   * @generated from field: uint32 min_acceptable = 1;
   */
  minAcceptable = 0;

  /**
   * @generated from field: uint32 max_acceptable = 2;
   */
  maxAcceptable = 0;

  /**
   * @generated from field: optional uint32 floor = 10;
   */
  floor?: number;

  /**
   * @generated from field: repeated cln.FeeratesPerkwEstimates estimates = 9;
   */
  estimates: FeeratesPerkwEstimates[] = [];

  /**
   * @generated from field: optional uint32 opening = 3;
   */
  opening?: number;

  /**
   * @generated from field: optional uint32 mutual_close = 4;
   */
  mutualClose?: number;

  /**
   * @generated from field: optional uint32 unilateral_close = 5;
   */
  unilateralClose?: number;

  /**
   * @generated from field: optional uint32 unilateral_anchor_close = 11;
   */
  unilateralAnchorClose?: number;

  /**
   * @generated from field: optional uint32 delayed_to_us = 6;
   */
  delayedToUs?: number;

  /**
   * @generated from field: optional uint32 htlc_resolution = 7;
   */
  htlcResolution?: number;

  /**
   * @generated from field: optional uint32 penalty = 8;
   */
  penalty?: number;

  constructor(data?: PartialMessage<FeeratesPerkw>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.FeeratesPerkw";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "min_acceptable", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 2, name: "max_acceptable", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 10, name: "floor", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 9, name: "estimates", kind: "message", T: FeeratesPerkwEstimates, repeated: true },
    { no: 3, name: "opening", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 4, name: "mutual_close", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 5, name: "unilateral_close", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 11, name: "unilateral_anchor_close", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 6, name: "delayed_to_us", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 7, name: "htlc_resolution", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 8, name: "penalty", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FeeratesPerkw {
    return new FeeratesPerkw().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FeeratesPerkw {
    return new FeeratesPerkw().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FeeratesPerkw {
    return new FeeratesPerkw().fromJsonString(jsonString, options);
  }

  static equals(a: FeeratesPerkw | PlainMessage<FeeratesPerkw> | undefined, b: FeeratesPerkw | PlainMessage<FeeratesPerkw> | undefined): boolean {
    return proto3.util.equals(FeeratesPerkw, a, b);
  }
}

/**
 * @generated from message cln.FeeratesPerkwEstimates
 */
export class FeeratesPerkwEstimates extends Message<FeeratesPerkwEstimates> {
  /**
   * @generated from field: optional uint32 blockcount = 1;
   */
  blockcount?: number;

  /**
   * @generated from field: optional uint32 feerate = 2;
   */
  feerate?: number;

  /**
   * @generated from field: optional uint32 smoothed_feerate = 3;
   */
  smoothedFeerate?: number;

  constructor(data?: PartialMessage<FeeratesPerkwEstimates>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.FeeratesPerkwEstimates";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "blockcount", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 2, name: "feerate", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 3, name: "smoothed_feerate", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FeeratesPerkwEstimates {
    return new FeeratesPerkwEstimates().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FeeratesPerkwEstimates {
    return new FeeratesPerkwEstimates().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FeeratesPerkwEstimates {
    return new FeeratesPerkwEstimates().fromJsonString(jsonString, options);
  }

  static equals(a: FeeratesPerkwEstimates | PlainMessage<FeeratesPerkwEstimates> | undefined, b: FeeratesPerkwEstimates | PlainMessage<FeeratesPerkwEstimates> | undefined): boolean {
    return proto3.util.equals(FeeratesPerkwEstimates, a, b);
  }
}

/**
 * @generated from message cln.FeeratesOnchain_fee_estimates
 */
export class FeeratesOnchain_fee_estimates extends Message<FeeratesOnchain_fee_estimates> {
  /**
   * @generated from field: uint64 opening_channel_satoshis = 1;
   */
  openingChannelSatoshis = protoInt64.zero;

  /**
   * @generated from field: uint64 mutual_close_satoshis = 2;
   */
  mutualCloseSatoshis = protoInt64.zero;

  /**
   * @generated from field: uint64 unilateral_close_satoshis = 3;
   */
  unilateralCloseSatoshis = protoInt64.zero;

  /**
   * @generated from field: optional uint64 unilateral_close_nonanchor_satoshis = 6;
   */
  unilateralCloseNonanchorSatoshis?: bigint;

  /**
   * @generated from field: uint64 htlc_timeout_satoshis = 4;
   */
  htlcTimeoutSatoshis = protoInt64.zero;

  /**
   * @generated from field: uint64 htlc_success_satoshis = 5;
   */
  htlcSuccessSatoshis = protoInt64.zero;

  constructor(data?: PartialMessage<FeeratesOnchain_fee_estimates>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.FeeratesOnchain_fee_estimates";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "opening_channel_satoshis", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "mutual_close_satoshis", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "unilateral_close_satoshis", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 6, name: "unilateral_close_nonanchor_satoshis", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 4, name: "htlc_timeout_satoshis", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 5, name: "htlc_success_satoshis", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FeeratesOnchain_fee_estimates {
    return new FeeratesOnchain_fee_estimates().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FeeratesOnchain_fee_estimates {
    return new FeeratesOnchain_fee_estimates().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FeeratesOnchain_fee_estimates {
    return new FeeratesOnchain_fee_estimates().fromJsonString(jsonString, options);
  }

  static equals(a: FeeratesOnchain_fee_estimates | PlainMessage<FeeratesOnchain_fee_estimates> | undefined, b: FeeratesOnchain_fee_estimates | PlainMessage<FeeratesOnchain_fee_estimates> | undefined): boolean {
    return proto3.util.equals(FeeratesOnchain_fee_estimates, a, b);
  }
}

/**
 * @generated from message cln.FundchannelRequest
 */
export class FundchannelRequest extends Message<FundchannelRequest> {
  /**
   * @generated from field: bytes id = 9;
   */
  id = new Uint8Array(0);

  /**
   * @generated from field: cln.AmountOrAll amount = 1;
   */
  amount?: AmountOrAll;

  /**
   * @generated from field: optional cln.Feerate feerate = 2;
   */
  feerate?: Feerate;

  /**
   * @generated from field: optional bool announce = 3;
   */
  announce?: boolean;

  /**
   * @generated from field: optional uint32 minconf = 10;
   */
  minconf?: number;

  /**
   * @generated from field: optional cln.Amount push_msat = 5;
   */
  pushMsat?: Amount;

  /**
   * @generated from field: optional string close_to = 6;
   */
  closeTo?: string;

  /**
   * @generated from field: optional cln.Amount request_amt = 7;
   */
  requestAmt?: Amount;

  /**
   * @generated from field: optional string compact_lease = 8;
   */
  compactLease?: string;

  /**
   * @generated from field: repeated cln.Outpoint utxos = 11;
   */
  utxos: Outpoint[] = [];

  /**
   * @generated from field: optional uint32 mindepth = 12;
   */
  mindepth?: number;

  /**
   * @generated from field: optional cln.Amount reserve = 13;
   */
  reserve?: Amount;

  constructor(data?: PartialMessage<FundchannelRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.FundchannelRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 9, name: "id", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 1, name: "amount", kind: "message", T: AmountOrAll },
    { no: 2, name: "feerate", kind: "message", T: Feerate, opt: true },
    { no: 3, name: "announce", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 10, name: "minconf", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 5, name: "push_msat", kind: "message", T: Amount, opt: true },
    { no: 6, name: "close_to", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 7, name: "request_amt", kind: "message", T: Amount, opt: true },
    { no: 8, name: "compact_lease", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 11, name: "utxos", kind: "message", T: Outpoint, repeated: true },
    { no: 12, name: "mindepth", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 13, name: "reserve", kind: "message", T: Amount, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FundchannelRequest {
    return new FundchannelRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FundchannelRequest {
    return new FundchannelRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FundchannelRequest {
    return new FundchannelRequest().fromJsonString(jsonString, options);
  }

  static equals(a: FundchannelRequest | PlainMessage<FundchannelRequest> | undefined, b: FundchannelRequest | PlainMessage<FundchannelRequest> | undefined): boolean {
    return proto3.util.equals(FundchannelRequest, a, b);
  }
}

/**
 * @generated from message cln.FundchannelResponse
 */
export class FundchannelResponse extends Message<FundchannelResponse> {
  /**
   * @generated from field: bytes tx = 1;
   */
  tx = new Uint8Array(0);

  /**
   * @generated from field: bytes txid = 2;
   */
  txid = new Uint8Array(0);

  /**
   * @generated from field: uint32 outnum = 3;
   */
  outnum = 0;

  /**
   * @generated from field: bytes channel_id = 4;
   */
  channelId = new Uint8Array(0);

  /**
   * @generated from field: optional bytes close_to = 5;
   */
  closeTo?: Uint8Array;

  /**
   * @generated from field: optional uint32 mindepth = 6;
   */
  mindepth?: number;

  constructor(data?: PartialMessage<FundchannelResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.FundchannelResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "tx", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 2, name: "txid", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 3, name: "outnum", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 4, name: "channel_id", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 5, name: "close_to", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 6, name: "mindepth", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FundchannelResponse {
    return new FundchannelResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FundchannelResponse {
    return new FundchannelResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FundchannelResponse {
    return new FundchannelResponse().fromJsonString(jsonString, options);
  }

  static equals(a: FundchannelResponse | PlainMessage<FundchannelResponse> | undefined, b: FundchannelResponse | PlainMessage<FundchannelResponse> | undefined): boolean {
    return proto3.util.equals(FundchannelResponse, a, b);
  }
}

/**
 * @generated from message cln.GetrouteRequest
 */
export class GetrouteRequest extends Message<GetrouteRequest> {
  /**
   * @generated from field: bytes id = 1;
   */
  id = new Uint8Array(0);

  /**
   * @generated from field: cln.Amount amount_msat = 9;
   */
  amountMsat?: Amount;

  /**
   * @generated from field: uint64 riskfactor = 3;
   */
  riskfactor = protoInt64.zero;

  /**
   * @generated from field: optional double cltv = 4;
   */
  cltv?: number;

  /**
   * @generated from field: optional bytes fromid = 5;
   */
  fromid?: Uint8Array;

  /**
   * @generated from field: optional uint32 fuzzpercent = 6;
   */
  fuzzpercent?: number;

  /**
   * @generated from field: repeated string exclude = 7;
   */
  exclude: string[] = [];

  /**
   * @generated from field: optional uint32 maxhops = 8;
   */
  maxhops?: number;

  constructor(data?: PartialMessage<GetrouteRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.GetrouteRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 9, name: "amount_msat", kind: "message", T: Amount },
    { no: 3, name: "riskfactor", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "cltv", kind: "scalar", T: 1 /* ScalarType.DOUBLE */, opt: true },
    { no: 5, name: "fromid", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 6, name: "fuzzpercent", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 7, name: "exclude", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 8, name: "maxhops", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetrouteRequest {
    return new GetrouteRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetrouteRequest {
    return new GetrouteRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetrouteRequest {
    return new GetrouteRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetrouteRequest | PlainMessage<GetrouteRequest> | undefined, b: GetrouteRequest | PlainMessage<GetrouteRequest> | undefined): boolean {
    return proto3.util.equals(GetrouteRequest, a, b);
  }
}

/**
 * @generated from message cln.GetrouteResponse
 */
export class GetrouteResponse extends Message<GetrouteResponse> {
  /**
   * @generated from field: repeated cln.GetrouteRoute route = 1;
   */
  route: GetrouteRoute[] = [];

  constructor(data?: PartialMessage<GetrouteResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.GetrouteResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "route", kind: "message", T: GetrouteRoute, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetrouteResponse {
    return new GetrouteResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetrouteResponse {
    return new GetrouteResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetrouteResponse {
    return new GetrouteResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetrouteResponse | PlainMessage<GetrouteResponse> | undefined, b: GetrouteResponse | PlainMessage<GetrouteResponse> | undefined): boolean {
    return proto3.util.equals(GetrouteResponse, a, b);
  }
}

/**
 * @generated from message cln.GetrouteRoute
 */
export class GetrouteRoute extends Message<GetrouteRoute> {
  /**
   * @generated from field: bytes id = 1;
   */
  id = new Uint8Array(0);

  /**
   * @generated from field: string channel = 2;
   */
  channel = "";

  /**
   * @generated from field: uint32 direction = 3;
   */
  direction = 0;

  /**
   * @generated from field: cln.Amount amount_msat = 4;
   */
  amountMsat?: Amount;

  /**
   * @generated from field: uint32 delay = 5;
   */
  delay = 0;

  /**
   * @generated from field: cln.GetrouteRoute.GetrouteRouteStyle style = 6;
   */
  style = GetrouteRoute_GetrouteRouteStyle.TLV;

  constructor(data?: PartialMessage<GetrouteRoute>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.GetrouteRoute";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 2, name: "channel", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "direction", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 4, name: "amount_msat", kind: "message", T: Amount },
    { no: 5, name: "delay", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 6, name: "style", kind: "enum", T: proto3.getEnumType(GetrouteRoute_GetrouteRouteStyle) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetrouteRoute {
    return new GetrouteRoute().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetrouteRoute {
    return new GetrouteRoute().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetrouteRoute {
    return new GetrouteRoute().fromJsonString(jsonString, options);
  }

  static equals(a: GetrouteRoute | PlainMessage<GetrouteRoute> | undefined, b: GetrouteRoute | PlainMessage<GetrouteRoute> | undefined): boolean {
    return proto3.util.equals(GetrouteRoute, a, b);
  }
}

/**
 * GetRoute.route[].style
 *
 * @generated from enum cln.GetrouteRoute.GetrouteRouteStyle
 */
export enum GetrouteRoute_GetrouteRouteStyle {
  /**
   * @generated from enum value: TLV = 0;
   */
  TLV = 0,
}
// Retrieve enum metadata with: proto3.getEnumType(GetrouteRoute_GetrouteRouteStyle)
proto3.util.setEnumType(GetrouteRoute_GetrouteRouteStyle, "cln.GetrouteRoute.GetrouteRouteStyle", [
  { no: 0, name: "TLV" },
]);

/**
 * @generated from message cln.ListforwardsRequest
 */
export class ListforwardsRequest extends Message<ListforwardsRequest> {
  /**
   * @generated from field: optional cln.ListforwardsRequest.ListforwardsStatus status = 1;
   */
  status?: ListforwardsRequest_ListforwardsStatus;

  /**
   * @generated from field: optional string in_channel = 2;
   */
  inChannel?: string;

  /**
   * @generated from field: optional string out_channel = 3;
   */
  outChannel?: string;

  constructor(data?: PartialMessage<ListforwardsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.ListforwardsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "status", kind: "enum", T: proto3.getEnumType(ListforwardsRequest_ListforwardsStatus), opt: true },
    { no: 2, name: "in_channel", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "out_channel", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListforwardsRequest {
    return new ListforwardsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListforwardsRequest {
    return new ListforwardsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListforwardsRequest {
    return new ListforwardsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListforwardsRequest | PlainMessage<ListforwardsRequest> | undefined, b: ListforwardsRequest | PlainMessage<ListforwardsRequest> | undefined): boolean {
    return proto3.util.equals(ListforwardsRequest, a, b);
  }
}

/**
 * ListForwards.status
 *
 * @generated from enum cln.ListforwardsRequest.ListforwardsStatus
 */
export enum ListforwardsRequest_ListforwardsStatus {
  /**
   * @generated from enum value: OFFERED = 0;
   */
  OFFERED = 0,

  /**
   * @generated from enum value: SETTLED = 1;
   */
  SETTLED = 1,

  /**
   * @generated from enum value: LOCAL_FAILED = 2;
   */
  LOCAL_FAILED = 2,

  /**
   * @generated from enum value: FAILED = 3;
   */
  FAILED = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(ListforwardsRequest_ListforwardsStatus)
proto3.util.setEnumType(ListforwardsRequest_ListforwardsStatus, "cln.ListforwardsRequest.ListforwardsStatus", [
  { no: 0, name: "OFFERED" },
  { no: 1, name: "SETTLED" },
  { no: 2, name: "LOCAL_FAILED" },
  { no: 3, name: "FAILED" },
]);

/**
 * @generated from message cln.ListforwardsResponse
 */
export class ListforwardsResponse extends Message<ListforwardsResponse> {
  /**
   * @generated from field: repeated cln.ListforwardsForwards forwards = 1;
   */
  forwards: ListforwardsForwards[] = [];

  constructor(data?: PartialMessage<ListforwardsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.ListforwardsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "forwards", kind: "message", T: ListforwardsForwards, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListforwardsResponse {
    return new ListforwardsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListforwardsResponse {
    return new ListforwardsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListforwardsResponse {
    return new ListforwardsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListforwardsResponse | PlainMessage<ListforwardsResponse> | undefined, b: ListforwardsResponse | PlainMessage<ListforwardsResponse> | undefined): boolean {
    return proto3.util.equals(ListforwardsResponse, a, b);
  }
}

/**
 * @generated from message cln.ListforwardsForwards
 */
export class ListforwardsForwards extends Message<ListforwardsForwards> {
  /**
   * @generated from field: string in_channel = 1;
   */
  inChannel = "";

  /**
   * @generated from field: optional uint64 in_htlc_id = 10;
   */
  inHtlcId?: bigint;

  /**
   * @generated from field: cln.Amount in_msat = 2;
   */
  inMsat?: Amount;

  /**
   * @generated from field: cln.ListforwardsForwards.ListforwardsForwardsStatus status = 3;
   */
  status = ListforwardsForwards_ListforwardsForwardsStatus.OFFERED;

  /**
   * @generated from field: double received_time = 4;
   */
  receivedTime = 0;

  /**
   * @generated from field: optional string out_channel = 5;
   */
  outChannel?: string;

  /**
   * @generated from field: optional uint64 out_htlc_id = 11;
   */
  outHtlcId?: bigint;

  /**
   * @generated from field: optional cln.ListforwardsForwards.ListforwardsForwardsStyle style = 9;
   */
  style?: ListforwardsForwards_ListforwardsForwardsStyle;

  /**
   * @generated from field: optional cln.Amount fee_msat = 7;
   */
  feeMsat?: Amount;

  /**
   * @generated from field: optional cln.Amount out_msat = 8;
   */
  outMsat?: Amount;

  constructor(data?: PartialMessage<ListforwardsForwards>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.ListforwardsForwards";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "in_channel", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "in_htlc_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 2, name: "in_msat", kind: "message", T: Amount },
    { no: 3, name: "status", kind: "enum", T: proto3.getEnumType(ListforwardsForwards_ListforwardsForwardsStatus) },
    { no: 4, name: "received_time", kind: "scalar", T: 1 /* ScalarType.DOUBLE */ },
    { no: 5, name: "out_channel", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 11, name: "out_htlc_id", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 9, name: "style", kind: "enum", T: proto3.getEnumType(ListforwardsForwards_ListforwardsForwardsStyle), opt: true },
    { no: 7, name: "fee_msat", kind: "message", T: Amount, opt: true },
    { no: 8, name: "out_msat", kind: "message", T: Amount, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListforwardsForwards {
    return new ListforwardsForwards().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListforwardsForwards {
    return new ListforwardsForwards().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListforwardsForwards {
    return new ListforwardsForwards().fromJsonString(jsonString, options);
  }

  static equals(a: ListforwardsForwards | PlainMessage<ListforwardsForwards> | undefined, b: ListforwardsForwards | PlainMessage<ListforwardsForwards> | undefined): boolean {
    return proto3.util.equals(ListforwardsForwards, a, b);
  }
}

/**
 * ListForwards.forwards[].status
 *
 * @generated from enum cln.ListforwardsForwards.ListforwardsForwardsStatus
 */
export enum ListforwardsForwards_ListforwardsForwardsStatus {
  /**
   * @generated from enum value: OFFERED = 0;
   */
  OFFERED = 0,

  /**
   * @generated from enum value: SETTLED = 1;
   */
  SETTLED = 1,

  /**
   * @generated from enum value: LOCAL_FAILED = 2;
   */
  LOCAL_FAILED = 2,

  /**
   * @generated from enum value: FAILED = 3;
   */
  FAILED = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(ListforwardsForwards_ListforwardsForwardsStatus)
proto3.util.setEnumType(ListforwardsForwards_ListforwardsForwardsStatus, "cln.ListforwardsForwards.ListforwardsForwardsStatus", [
  { no: 0, name: "OFFERED" },
  { no: 1, name: "SETTLED" },
  { no: 2, name: "LOCAL_FAILED" },
  { no: 3, name: "FAILED" },
]);

/**
 * ListForwards.forwards[].style
 *
 * @generated from enum cln.ListforwardsForwards.ListforwardsForwardsStyle
 */
export enum ListforwardsForwards_ListforwardsForwardsStyle {
  /**
   * @generated from enum value: LEGACY = 0;
   */
  LEGACY = 0,

  /**
   * @generated from enum value: TLV = 1;
   */
  TLV = 1,
}
// Retrieve enum metadata with: proto3.getEnumType(ListforwardsForwards_ListforwardsForwardsStyle)
proto3.util.setEnumType(ListforwardsForwards_ListforwardsForwardsStyle, "cln.ListforwardsForwards.ListforwardsForwardsStyle", [
  { no: 0, name: "LEGACY" },
  { no: 1, name: "TLV" },
]);

/**
 * @generated from message cln.ListpaysRequest
 */
export class ListpaysRequest extends Message<ListpaysRequest> {
  /**
   * @generated from field: optional string bolt11 = 1;
   */
  bolt11?: string;

  /**
   * @generated from field: optional bytes payment_hash = 2;
   */
  paymentHash?: Uint8Array;

  /**
   * @generated from field: optional cln.ListpaysRequest.ListpaysStatus status = 3;
   */
  status?: ListpaysRequest_ListpaysStatus;

  constructor(data?: PartialMessage<ListpaysRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.ListpaysRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "bolt11", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "payment_hash", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 3, name: "status", kind: "enum", T: proto3.getEnumType(ListpaysRequest_ListpaysStatus), opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListpaysRequest {
    return new ListpaysRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListpaysRequest {
    return new ListpaysRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListpaysRequest {
    return new ListpaysRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListpaysRequest | PlainMessage<ListpaysRequest> | undefined, b: ListpaysRequest | PlainMessage<ListpaysRequest> | undefined): boolean {
    return proto3.util.equals(ListpaysRequest, a, b);
  }
}

/**
 * ListPays.status
 *
 * @generated from enum cln.ListpaysRequest.ListpaysStatus
 */
export enum ListpaysRequest_ListpaysStatus {
  /**
   * @generated from enum value: PENDING = 0;
   */
  PENDING = 0,

  /**
   * @generated from enum value: COMPLETE = 1;
   */
  COMPLETE = 1,

  /**
   * @generated from enum value: FAILED = 2;
   */
  FAILED = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(ListpaysRequest_ListpaysStatus)
proto3.util.setEnumType(ListpaysRequest_ListpaysStatus, "cln.ListpaysRequest.ListpaysStatus", [
  { no: 0, name: "PENDING" },
  { no: 1, name: "COMPLETE" },
  { no: 2, name: "FAILED" },
]);

/**
 * @generated from message cln.ListpaysResponse
 */
export class ListpaysResponse extends Message<ListpaysResponse> {
  /**
   * @generated from field: repeated cln.ListpaysPays pays = 1;
   */
  pays: ListpaysPays[] = [];

  constructor(data?: PartialMessage<ListpaysResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.ListpaysResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "pays", kind: "message", T: ListpaysPays, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListpaysResponse {
    return new ListpaysResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListpaysResponse {
    return new ListpaysResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListpaysResponse {
    return new ListpaysResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListpaysResponse | PlainMessage<ListpaysResponse> | undefined, b: ListpaysResponse | PlainMessage<ListpaysResponse> | undefined): boolean {
    return proto3.util.equals(ListpaysResponse, a, b);
  }
}

/**
 * @generated from message cln.ListpaysPays
 */
export class ListpaysPays extends Message<ListpaysPays> {
  /**
   * @generated from field: bytes payment_hash = 1;
   */
  paymentHash = new Uint8Array(0);

  /**
   * @generated from field: cln.ListpaysPays.ListpaysPaysStatus status = 2;
   */
  status = ListpaysPays_ListpaysPaysStatus.PENDING;

  /**
   * @generated from field: optional bytes destination = 3;
   */
  destination?: Uint8Array;

  /**
   * @generated from field: uint64 created_at = 4;
   */
  createdAt = protoInt64.zero;

  /**
   * @generated from field: optional uint64 completed_at = 12;
   */
  completedAt?: bigint;

  /**
   * @generated from field: optional string label = 5;
   */
  label?: string;

  /**
   * @generated from field: optional string bolt11 = 6;
   */
  bolt11?: string;

  /**
   * @generated from field: optional string description = 11;
   */
  description?: string;

  /**
   * @generated from field: optional string bolt12 = 7;
   */
  bolt12?: string;

  /**
   * @generated from field: optional bytes preimage = 13;
   */
  preimage?: Uint8Array;

  /**
   * @generated from field: optional uint64 number_of_parts = 14;
   */
  numberOfParts?: bigint;

  /**
   * @generated from field: optional bytes erroronion = 10;
   */
  erroronion?: Uint8Array;

  constructor(data?: PartialMessage<ListpaysPays>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.ListpaysPays";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "payment_hash", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 2, name: "status", kind: "enum", T: proto3.getEnumType(ListpaysPays_ListpaysPaysStatus) },
    { no: 3, name: "destination", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 4, name: "created_at", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 12, name: "completed_at", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 5, name: "label", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 6, name: "bolt11", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 11, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 7, name: "bolt12", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 13, name: "preimage", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 14, name: "number_of_parts", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 10, name: "erroronion", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListpaysPays {
    return new ListpaysPays().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListpaysPays {
    return new ListpaysPays().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListpaysPays {
    return new ListpaysPays().fromJsonString(jsonString, options);
  }

  static equals(a: ListpaysPays | PlainMessage<ListpaysPays> | undefined, b: ListpaysPays | PlainMessage<ListpaysPays> | undefined): boolean {
    return proto3.util.equals(ListpaysPays, a, b);
  }
}

/**
 * ListPays.pays[].status
 *
 * @generated from enum cln.ListpaysPays.ListpaysPaysStatus
 */
export enum ListpaysPays_ListpaysPaysStatus {
  /**
   * @generated from enum value: PENDING = 0;
   */
  PENDING = 0,

  /**
   * @generated from enum value: FAILED = 1;
   */
  FAILED = 1,

  /**
   * @generated from enum value: COMPLETE = 2;
   */
  COMPLETE = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(ListpaysPays_ListpaysPaysStatus)
proto3.util.setEnumType(ListpaysPays_ListpaysPaysStatus, "cln.ListpaysPays.ListpaysPaysStatus", [
  { no: 0, name: "PENDING" },
  { no: 1, name: "FAILED" },
  { no: 2, name: "COMPLETE" },
]);

/**
 * @generated from message cln.PingRequest
 */
export class PingRequest extends Message<PingRequest> {
  /**
   * @generated from field: bytes id = 1;
   */
  id = new Uint8Array(0);

  /**
   * @generated from field: optional uint32 len = 2;
   */
  len?: number;

  /**
   * @generated from field: optional uint32 pongbytes = 3;
   */
  pongbytes?: number;

  constructor(data?: PartialMessage<PingRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.PingRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 2, name: "len", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 3, name: "pongbytes", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PingRequest {
    return new PingRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PingRequest {
    return new PingRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PingRequest {
    return new PingRequest().fromJsonString(jsonString, options);
  }

  static equals(a: PingRequest | PlainMessage<PingRequest> | undefined, b: PingRequest | PlainMessage<PingRequest> | undefined): boolean {
    return proto3.util.equals(PingRequest, a, b);
  }
}

/**
 * @generated from message cln.PingResponse
 */
export class PingResponse extends Message<PingResponse> {
  /**
   * @generated from field: uint32 totlen = 1;
   */
  totlen = 0;

  constructor(data?: PartialMessage<PingResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.PingResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "totlen", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PingResponse {
    return new PingResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PingResponse {
    return new PingResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PingResponse {
    return new PingResponse().fromJsonString(jsonString, options);
  }

  static equals(a: PingResponse | PlainMessage<PingResponse> | undefined, b: PingResponse | PlainMessage<PingResponse> | undefined): boolean {
    return proto3.util.equals(PingResponse, a, b);
  }
}

/**
 * @generated from message cln.SendcustommsgRequest
 */
export class SendcustommsgRequest extends Message<SendcustommsgRequest> {
  /**
   * @generated from field: bytes node_id = 1;
   */
  nodeId = new Uint8Array(0);

  /**
   * @generated from field: bytes msg = 2;
   */
  msg = new Uint8Array(0);

  constructor(data?: PartialMessage<SendcustommsgRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.SendcustommsgRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "node_id", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 2, name: "msg", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SendcustommsgRequest {
    return new SendcustommsgRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SendcustommsgRequest {
    return new SendcustommsgRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SendcustommsgRequest {
    return new SendcustommsgRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SendcustommsgRequest | PlainMessage<SendcustommsgRequest> | undefined, b: SendcustommsgRequest | PlainMessage<SendcustommsgRequest> | undefined): boolean {
    return proto3.util.equals(SendcustommsgRequest, a, b);
  }
}

/**
 * @generated from message cln.SendcustommsgResponse
 */
export class SendcustommsgResponse extends Message<SendcustommsgResponse> {
  /**
   * @generated from field: string status = 1;
   */
  status = "";

  constructor(data?: PartialMessage<SendcustommsgResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.SendcustommsgResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "status", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SendcustommsgResponse {
    return new SendcustommsgResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SendcustommsgResponse {
    return new SendcustommsgResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SendcustommsgResponse {
    return new SendcustommsgResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SendcustommsgResponse | PlainMessage<SendcustommsgResponse> | undefined, b: SendcustommsgResponse | PlainMessage<SendcustommsgResponse> | undefined): boolean {
    return proto3.util.equals(SendcustommsgResponse, a, b);
  }
}

/**
 * @generated from message cln.SetchannelRequest
 */
export class SetchannelRequest extends Message<SetchannelRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: optional cln.Amount feebase = 2;
   */
  feebase?: Amount;

  /**
   * @generated from field: optional uint32 feeppm = 3;
   */
  feeppm?: number;

  /**
   * @generated from field: optional cln.Amount htlcmin = 4;
   */
  htlcmin?: Amount;

  /**
   * @generated from field: optional cln.Amount htlcmax = 5;
   */
  htlcmax?: Amount;

  /**
   * @generated from field: optional uint32 enforcedelay = 6;
   */
  enforcedelay?: number;

  constructor(data?: PartialMessage<SetchannelRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.SetchannelRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "feebase", kind: "message", T: Amount, opt: true },
    { no: 3, name: "feeppm", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
    { no: 4, name: "htlcmin", kind: "message", T: Amount, opt: true },
    { no: 5, name: "htlcmax", kind: "message", T: Amount, opt: true },
    { no: 6, name: "enforcedelay", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetchannelRequest {
    return new SetchannelRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetchannelRequest {
    return new SetchannelRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetchannelRequest {
    return new SetchannelRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SetchannelRequest | PlainMessage<SetchannelRequest> | undefined, b: SetchannelRequest | PlainMessage<SetchannelRequest> | undefined): boolean {
    return proto3.util.equals(SetchannelRequest, a, b);
  }
}

/**
 * @generated from message cln.SetchannelResponse
 */
export class SetchannelResponse extends Message<SetchannelResponse> {
  /**
   * @generated from field: repeated cln.SetchannelChannels channels = 1;
   */
  channels: SetchannelChannels[] = [];

  constructor(data?: PartialMessage<SetchannelResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.SetchannelResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "channels", kind: "message", T: SetchannelChannels, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetchannelResponse {
    return new SetchannelResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetchannelResponse {
    return new SetchannelResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetchannelResponse {
    return new SetchannelResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SetchannelResponse | PlainMessage<SetchannelResponse> | undefined, b: SetchannelResponse | PlainMessage<SetchannelResponse> | undefined): boolean {
    return proto3.util.equals(SetchannelResponse, a, b);
  }
}

/**
 * @generated from message cln.SetchannelChannels
 */
export class SetchannelChannels extends Message<SetchannelChannels> {
  /**
   * @generated from field: bytes peer_id = 1;
   */
  peerId = new Uint8Array(0);

  /**
   * @generated from field: bytes channel_id = 2;
   */
  channelId = new Uint8Array(0);

  /**
   * @generated from field: optional string short_channel_id = 3;
   */
  shortChannelId?: string;

  /**
   * @generated from field: cln.Amount fee_base_msat = 4;
   */
  feeBaseMsat?: Amount;

  /**
   * @generated from field: uint32 fee_proportional_millionths = 5;
   */
  feeProportionalMillionths = 0;

  /**
   * @generated from field: cln.Amount minimum_htlc_out_msat = 6;
   */
  minimumHtlcOutMsat?: Amount;

  /**
   * @generated from field: optional string warning_htlcmin_too_low = 7;
   */
  warningHtlcminTooLow?: string;

  /**
   * @generated from field: cln.Amount maximum_htlc_out_msat = 8;
   */
  maximumHtlcOutMsat?: Amount;

  /**
   * @generated from field: optional string warning_htlcmax_too_high = 9;
   */
  warningHtlcmaxTooHigh?: string;

  constructor(data?: PartialMessage<SetchannelChannels>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.SetchannelChannels";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "peer_id", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 2, name: "channel_id", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 3, name: "short_channel_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "fee_base_msat", kind: "message", T: Amount },
    { no: 5, name: "fee_proportional_millionths", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 6, name: "minimum_htlc_out_msat", kind: "message", T: Amount },
    { no: 7, name: "warning_htlcmin_too_low", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 8, name: "maximum_htlc_out_msat", kind: "message", T: Amount },
    { no: 9, name: "warning_htlcmax_too_high", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetchannelChannels {
    return new SetchannelChannels().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetchannelChannels {
    return new SetchannelChannels().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetchannelChannels {
    return new SetchannelChannels().fromJsonString(jsonString, options);
  }

  static equals(a: SetchannelChannels | PlainMessage<SetchannelChannels> | undefined, b: SetchannelChannels | PlainMessage<SetchannelChannels> | undefined): boolean {
    return proto3.util.equals(SetchannelChannels, a, b);
  }
}

/**
 * @generated from message cln.SigninvoiceRequest
 */
export class SigninvoiceRequest extends Message<SigninvoiceRequest> {
  /**
   * @generated from field: string invstring = 1;
   */
  invstring = "";

  constructor(data?: PartialMessage<SigninvoiceRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.SigninvoiceRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "invstring", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SigninvoiceRequest {
    return new SigninvoiceRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SigninvoiceRequest {
    return new SigninvoiceRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SigninvoiceRequest {
    return new SigninvoiceRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SigninvoiceRequest | PlainMessage<SigninvoiceRequest> | undefined, b: SigninvoiceRequest | PlainMessage<SigninvoiceRequest> | undefined): boolean {
    return proto3.util.equals(SigninvoiceRequest, a, b);
  }
}

/**
 * @generated from message cln.SigninvoiceResponse
 */
export class SigninvoiceResponse extends Message<SigninvoiceResponse> {
  /**
   * @generated from field: string bolt11 = 1;
   */
  bolt11 = "";

  constructor(data?: PartialMessage<SigninvoiceResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.SigninvoiceResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "bolt11", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SigninvoiceResponse {
    return new SigninvoiceResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SigninvoiceResponse {
    return new SigninvoiceResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SigninvoiceResponse {
    return new SigninvoiceResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SigninvoiceResponse | PlainMessage<SigninvoiceResponse> | undefined, b: SigninvoiceResponse | PlainMessage<SigninvoiceResponse> | undefined): boolean {
    return proto3.util.equals(SigninvoiceResponse, a, b);
  }
}

/**
 * @generated from message cln.SignmessageRequest
 */
export class SignmessageRequest extends Message<SignmessageRequest> {
  /**
   * @generated from field: string message = 1;
   */
  message = "";

  constructor(data?: PartialMessage<SignmessageRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.SignmessageRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SignmessageRequest {
    return new SignmessageRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SignmessageRequest {
    return new SignmessageRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SignmessageRequest {
    return new SignmessageRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SignmessageRequest | PlainMessage<SignmessageRequest> | undefined, b: SignmessageRequest | PlainMessage<SignmessageRequest> | undefined): boolean {
    return proto3.util.equals(SignmessageRequest, a, b);
  }
}

/**
 * @generated from message cln.SignmessageResponse
 */
export class SignmessageResponse extends Message<SignmessageResponse> {
  /**
   * @generated from field: bytes signature = 1;
   */
  signature = new Uint8Array(0);

  /**
   * @generated from field: bytes recid = 2;
   */
  recid = new Uint8Array(0);

  /**
   * @generated from field: string zbase = 3;
   */
  zbase = "";

  constructor(data?: PartialMessage<SignmessageResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.SignmessageResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "signature", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 2, name: "recid", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 3, name: "zbase", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SignmessageResponse {
    return new SignmessageResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SignmessageResponse {
    return new SignmessageResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SignmessageResponse {
    return new SignmessageResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SignmessageResponse | PlainMessage<SignmessageResponse> | undefined, b: SignmessageResponse | PlainMessage<SignmessageResponse> | undefined): boolean {
    return proto3.util.equals(SignmessageResponse, a, b);
  }
}

/**
 * @generated from message cln.StopRequest
 */
export class StopRequest extends Message<StopRequest> {
  constructor(data?: PartialMessage<StopRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.StopRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StopRequest {
    return new StopRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StopRequest {
    return new StopRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StopRequest {
    return new StopRequest().fromJsonString(jsonString, options);
  }

  static equals(a: StopRequest | PlainMessage<StopRequest> | undefined, b: StopRequest | PlainMessage<StopRequest> | undefined): boolean {
    return proto3.util.equals(StopRequest, a, b);
  }
}

/**
 * @generated from message cln.StopResponse
 */
export class StopResponse extends Message<StopResponse> {
  constructor(data?: PartialMessage<StopResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.StopResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StopResponse {
    return new StopResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StopResponse {
    return new StopResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StopResponse {
    return new StopResponse().fromJsonString(jsonString, options);
  }

  static equals(a: StopResponse | PlainMessage<StopResponse> | undefined, b: StopResponse | PlainMessage<StopResponse> | undefined): boolean {
    return proto3.util.equals(StopResponse, a, b);
  }
}

/**
 * @generated from message cln.PreapprovekeysendRequest
 */
export class PreapprovekeysendRequest extends Message<PreapprovekeysendRequest> {
  /**
   * @generated from field: optional bytes destination = 1;
   */
  destination?: Uint8Array;

  /**
   * @generated from field: optional bytes payment_hash = 2;
   */
  paymentHash?: Uint8Array;

  /**
   * @generated from field: optional cln.Amount amount_msat = 3;
   */
  amountMsat?: Amount;

  constructor(data?: PartialMessage<PreapprovekeysendRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.PreapprovekeysendRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "destination", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 2, name: "payment_hash", kind: "scalar", T: 12 /* ScalarType.BYTES */, opt: true },
    { no: 3, name: "amount_msat", kind: "message", T: Amount, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PreapprovekeysendRequest {
    return new PreapprovekeysendRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PreapprovekeysendRequest {
    return new PreapprovekeysendRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PreapprovekeysendRequest {
    return new PreapprovekeysendRequest().fromJsonString(jsonString, options);
  }

  static equals(a: PreapprovekeysendRequest | PlainMessage<PreapprovekeysendRequest> | undefined, b: PreapprovekeysendRequest | PlainMessage<PreapprovekeysendRequest> | undefined): boolean {
    return proto3.util.equals(PreapprovekeysendRequest, a, b);
  }
}

/**
 * @generated from message cln.PreapprovekeysendResponse
 */
export class PreapprovekeysendResponse extends Message<PreapprovekeysendResponse> {
  constructor(data?: PartialMessage<PreapprovekeysendResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.PreapprovekeysendResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PreapprovekeysendResponse {
    return new PreapprovekeysendResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PreapprovekeysendResponse {
    return new PreapprovekeysendResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PreapprovekeysendResponse {
    return new PreapprovekeysendResponse().fromJsonString(jsonString, options);
  }

  static equals(a: PreapprovekeysendResponse | PlainMessage<PreapprovekeysendResponse> | undefined, b: PreapprovekeysendResponse | PlainMessage<PreapprovekeysendResponse> | undefined): boolean {
    return proto3.util.equals(PreapprovekeysendResponse, a, b);
  }
}

/**
 * @generated from message cln.PreapproveinvoiceRequest
 */
export class PreapproveinvoiceRequest extends Message<PreapproveinvoiceRequest> {
  /**
   * @generated from field: optional string bolt11 = 1;
   */
  bolt11?: string;

  constructor(data?: PartialMessage<PreapproveinvoiceRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.PreapproveinvoiceRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "bolt11", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PreapproveinvoiceRequest {
    return new PreapproveinvoiceRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PreapproveinvoiceRequest {
    return new PreapproveinvoiceRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PreapproveinvoiceRequest {
    return new PreapproveinvoiceRequest().fromJsonString(jsonString, options);
  }

  static equals(a: PreapproveinvoiceRequest | PlainMessage<PreapproveinvoiceRequest> | undefined, b: PreapproveinvoiceRequest | PlainMessage<PreapproveinvoiceRequest> | undefined): boolean {
    return proto3.util.equals(PreapproveinvoiceRequest, a, b);
  }
}

/**
 * @generated from message cln.PreapproveinvoiceResponse
 */
export class PreapproveinvoiceResponse extends Message<PreapproveinvoiceResponse> {
  constructor(data?: PartialMessage<PreapproveinvoiceResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cln.PreapproveinvoiceResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PreapproveinvoiceResponse {
    return new PreapproveinvoiceResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PreapproveinvoiceResponse {
    return new PreapproveinvoiceResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PreapproveinvoiceResponse {
    return new PreapproveinvoiceResponse().fromJsonString(jsonString, options);
  }

  static equals(a: PreapproveinvoiceResponse | PlainMessage<PreapproveinvoiceResponse> | undefined, b: PreapproveinvoiceResponse | PlainMessage<PreapproveinvoiceResponse> | undefined): boolean {
    return proto3.util.equals(PreapproveinvoiceResponse, a, b);
  }
}

